{"version":3,"file":"kendo.pivotgrid.js","names":["Navigation","constructor","options","this","tabIndex","root","eventHandlers","update","elements","Array","from","querySelectorAll","selectors","join","first","querySelector","last","all","length","current","find","el","matches","start","eventType","mouseEvents","ev","target","Element","closest","call","undefined","addEventListener","keyboardEvents","key","stop","removeEventListener","focusElement","element","previous","removeAttribute","classList","remove","setAttribute","String","focus","preventScroll","scrollableValuesSel","scrollableColumnHeaderSel","scrollableRowHeaderSel","emptyCellSel","tableSel","cellSel","scrollables","selectors$1","onEnter","nav","icon","index","indexOf","click","preventDefault","tryScrollLeft","scrollable","elToScroll","offsetLeft","scrollLeft","tryScrollRight","offsetWidth","tryScrollUp","scrollTop","offsetTop","tryScrollDown","offsetHeight","scrollTo","scrollFunc","forEach","scroll","tableMap","table","rows","colsCount","cells","map","c","colSpan","reduce","prev","cur","row","r","curColSpan","colSp","rowSp","rowSpan","ind","findIndex","val","curInd","navigationMap","columnHeader","rowHeader","values","emptyCell","emptyCellRow","fill","i","push","concat","getTargetPos","ctrlKey","metaKey","cellAt","pos","targetPos","nextPos","next","keyboardEvents$1","keydown","ArrowLeft","ArrowRight","ArrowUp","ArrowDown","o","_target","_ev","nextElementSibling","HTMLElement","parentNode","setTimeout","confHeader","Enter","Space","Home","ro","Boolean","x","End","mouseEvents$1","hasAttribute","PivotGridNavigation","super","arguments","onEscape","pivot","previousElementSibling","confButton","pivotCell","navigate","dir","onDelete","Tab","shiftKey","Escape","Delete","Backspace","ConfiguratorNavigation","__meta__","id","name","category","description","depends","features","$","undefined$1","kendo","window","ui","encode","htmlEncode","Class","Comparer","data","Widget","DataSource","outerWidth","_outerWidth","outerHeight","_outerHeight","common","pivotgrid","fetchDiscover","normalizeFilter","Query","normalizeSort","toString","identity","extend","keys","isFunction","fetchData","createLocalDataState","createDataTree","sumAggregate","averageAggregate","minAggregate","maxAggregate","createDataState","toColumns","toRows","toTree","toData","headersReducer","RESIZE","READ","CHANGE","ERROR","PROGRESS","MEASURES","STATERESET","AUTO","DIV","NS","ROW_TOTAL_KEY","DATABINDING","DATABOUND","EXPANDMEMBER","HEADERTEMPLATE","headerClass","colspan","rowspan","expandable","iconClass","role","expanded","COLLAPSEMEMBER","STATE_EXPANDED_ICONNAME","STATE_EXPANDED_SELECTOR","STATE_COLLAPSED_ICONNAME","HEADER_TEMPLATE","member","caption","PIVOTGRID_TREND_ICONS_MAP","KPISTATUS_TEMPLATE","dataItem","value","KPITREND_TEMPLATE","DATACELL_TEMPLATE","fmtValue","tableStyles","normalizeMeasures","measure","descriptor","descriptors","d","type","normalizeMembers","expand","slice","normalizeName","accumulateMembers","accumulator","rootTuple","tuple","level","idx","children","members","stringify","buildPath","descriptorsForAxes","tuples","result","k","JSON","parse","descriptorsForMembers","axis","measures","firstTuple","tupleMembers","found","j","getName","hierarchy","addMissingPathMembers","tupletoSearch","findExistingTuple","tupleToDescriptors","createAggregateGetter","m","measureGetter","getter","field","aggregatorContext","state","aggregate","isNumber","isNaN","isDate","getTime","flattenSortDescriptors","split","pop","createLocalMeasure","format","measureMap","sum","average","min","max","item","bind","uniqueName","functions","count","PivotCubeBuilder","init","dimensions","_normalizeDescriptors","keyField","fields","_rootTuples","rootNames","measureAggregators","parts","aggregatorsLength","dimensionsSchema","measureIdx","rootNamesLength","levelName","levelNum","hasChildren","parentName","_sortMap","sortDescriptors","flattenTree","mapItem","sortedMaps","sortTree","directParentName","fillSortTree","sortItemsTree","create","flatColumns","_expandedTuples","currentKeys","memberInfo","expandedNames","accumulatorKeys","isEmptyObject","_findExpandedMember","uniquePath","names","expandedIdx","_asTuples","rootInfo","expandedInfo","apply","_measuresInfo","rowAxis","aggregateNames","resultFuncs","formats","_toDataArray","measuresInfo","rowKeys","columnKeys","aggregates","n","column","columnKey","columnMeasureNames","rowMeasureNamesLength","rowMeasureNames","rowLength","columnLength","items","_addData","resultFunc","ordinal","_matchDescriptors","getters","parentField","expectedValue","_calculateAggregate","totalItem","aggregator","_processColumns","columns","rowTotal","updateColumn","path","columnIndex","childrenMap","_measureAggregators","defaultAggregate","measureDescriptors","aggregators","toLowerCase","Error","_buildGetters","_parseDescriptors","parsedDescriptors","parseDescriptors","getRootNames","mapNames","_filter","filter","expr","filters","operator","_normalizeFilter","logic","process","measuresRowAxis","measuresAxis","columnDescriptors","rowDescriptors","rowValue","rowIdx","rowDescriptor","rowName","columnsInfo","rowsInfo","aggregatedData","columnGetters","rowGetters","processed","expandedColumns","expandedRows","hasExpandedRows","sort","axes","PivotTransport","transport","discover","read","destroy","success","catalog","connection","cube","PivotDataSourceV2","schema","cubes","catalogs","hierarchies","levels","cubeSchema","_cubeSchema","fn","transportOptions","_online","XmlaTransportV2","_columns","_rows","_measuresAxis","_measures","serverSorting","serverPaging","serverFiltering","serverGrouping","serverAggregates","normalizeAxis","_mergeState","fetch","callback","that","_data","_query","done","_createSettings","settings","dimensionsSettings","displayValueFunc","sortValueFunc","displayValue","sortValue","defaultHierarchy","restoreMeasure","memberType","_pristineData","distinct","levelUniqueName","childrenCardinality","isPrevented","trigger","params","_params","deferred","Deferred","originalData","reader","columnSettings","columnAxes","rowSettings","rowAxes","stateArgs","dataTree","dataField","columnsData","reverse","_saveState","resolve","newDataState","response","_preventRefresh","error","err","promise","measureAxes","schemaMeasures","command","restrictions","catalogName","cubeName","schemaKPIs","schemaDimensions","schemaHierarchies","dimensionName","dimensionUniqueName","schemaLevels","hierarchyName","hierarchyUniqueName","schemaCubes","schemaCatalogs","schemaMembers","_columnTuples","_rowTuples","_view","PivotDataSource","cubeBuilder","_skipNormalize","_axes","memberUniqueName","schemaData","dataGetter","_rawData","treeOp","_clearAxesData","query","rowsAxisDescriptors","columnsAxisDescriptors","_expandPath","origin","other","memberToExpand","_lastExpanded","_descriptorsForAxis","_process","e","page","pageSize","group","_updateLocalData","expandColumn","expandRow","_processResult","processedData","_requestData","columnIndexes","rowIndexes","resultAxis","axisToSkip","hasColumnTuples","_rowMeasures","_normalizeTuples","_columnMeasures","_normalizeData","columnsLength","rowsLength","validateAxis","sourceTuples","targetTuples","columnIdx","dataIdx","targetColumnsLength","membersCount","measuresLength","tupleIndex","adjustDataByColumn","adjustDataByRow","_mergeAxes","_readData","newData","_createTuple","buildRoot","Number","_hasRoot","source","isRoot","sourceAxes","startIndex","columnMeasures","rowMeasures","oldRowsLength","newRowsLength","oldColumnsLength","newColumnsLength","rowIndex","dataIndex","calcIndex","indices","buildDataIndices","Math","prepareDataOnColumns","parseSource","mergedColumns","mergeTuples","targetIndex","sourceIndex","parseInt","prepareDataOnRows","mergedRows","findDataIndex","parsedRoot","memberIndex","offset","_mergeColumnData","_mergeRowData","toAdd","toJSON","drop","splice","_observe","_ranges","_addRange","_total","_pristineTotal","memberIdx","roots","indexes","tupleName","_addMissingDataItems","metadata","addEmptyDataItem","_normalizeOrdinals","lastOrdinal","converter","_handleCustomErrors","status","reject","kpis","sortFunction","currentItem","newAxis","collection","queue","shift","counter","targetMembers","sourceMembers","equalTuples","second","equal","toFind","membersLength","addMembers","len","findParentMember","parentMember","parentPath","normalizeTupleMeasures","measureIndex","measurePosition","spliceIndex","baseHierarchyPath","memberName","expandMemberDescriptor","sortDescriptor","sortDescriptorForMember","crossJoin","crossJoinCommand","tmp","measureNames","rootName","rootLength","l","child","serializeMembers","crossJoinCommands","dataSource","filterFunctionFormats","contains","doesnotcontain","startswith","endswith","eq","neq","serializeExpression","expression","serializeOptions","parentTagName","capitalize","replace","toUpperCase","xmlaDiscoverCommands","convertersMap","serializeFilters","properties","Catalog","XmlaTransport","RemoteTransport","originalOptions","url","setup","dataType","contentType","parameterMap","ajax","fetchOptions","noop","then","catch","asArray","object","translateAxis","captionGetter","unameGetter","levelNameGetter","levelNumGetter","childrenGetter","hierarchyGetter","parentNameGetter","Member","schemaDataReaderMap","groupName","displayFolder","defaultFormat","goal","trend","statusGraphic","trendGraphic","defaultMember","orderingProperty","xmlaReaderMethods","XmlaDataReader","XmlDataReader","_extend","methodName","option","xml","errors","fault","faultstring","faultcode","ordinalGetter","valueGetter","fmtValueGetter","_mapSchema","obj","transports","xmla","readers","removeExpr","expressions","PivotSettingTarget","addClass","_refreshHandler","refresh","template","actions","enabled","ns","emptyTemplate","_sortable","on","action","attr","hasClass","sortable","sortDirection","currentTarget","filterable","fieldMenu","PivotFieldMenu","messages","setting","empty","setDataSource","unbind","kendoSortable","connectWith","hint","cursor","change","add","move","newIndex","_isKPI","validate","isMeasure","isArray","sortExpressions","_sort","skipExpr","allowUnsort","html","sortIcon","_sortIcon","off","sortExpr","PivotSettingTargetV2","parent","text","navigatable","chip","keyCode","DELETE","BACKSPACE","configuratorNavigation","DOWN","altKey","LEFT","RIGHT","UP","otherTarget","PivotFieldMenuV2","events","_applyState","_sortState","_stateFilter","_savedState","_cancelChanges","deepExtend","_initialState","_redraw","_state","newState","modifyInit","blur","_savedFilter","_emptyState","enable","removeClass","_targetsHTML","menuenabled","PivotConfiguratorButton","_element","_attachEvents","configurator","setOptions","toggle","pivotEl","toggleClass","getKendoPivotGridV2","_setContentWidth","_updateDimensions","PivotContainer","_addClasses","configuratorPosition","className","PivotGridV2","_dataSource","_bindConfigurator","_ariaId","guid","_wrapper","_columnHeadersWrapper","_rowHeadersWrapper","_contentWrapper","wrapper","append","_columnBuilder","ColumnRowBuilder","columnHeaderTemplate","ariaId","_rowBuilder","rowHeaderTemplate","_contentBuilder","ContentBuilderV2","dataCellTemplate","_scrollable","button","is","isRow","paths","eventName","reducerPayLoad","payload","tree","getTree","currentAxes","newHeaders","autoBind","_aria","_initPivotGridNavigation","notify","height","columnWidth","emptyCellLabel","_windowResizeHandler","navigation","firstCell","_matchAriaAttributes","rowHeaderRows","rowHeaderCols","acc","curr","getAttribute","colHeaderRows","colHeaderCells","valueTableCells","firstColHeadersRow","firstColHeaderRowCellsIds","valueCellsIds","filterAndMap","idParts","cell","cellColIndex","colHeaderCellsIds","headerCellColIndex","headerCellColspan","arr","predicate","mapper","_progressHandler","_errorHandler","_requestStart","_error","_resize","div","scrollbar","style","setProperty","document","createElement","cssText","innerHTML","body","appendChild","scrollWidth","removeChild","columnsHeader","rowsHeader","_wheelScroll","delta","wheelDeltaY","one","css","_progress","progress","contentTable","columnTable","rowTable","width","kendoPivotConfiguratorV2","cellInfoByElement","cellInfo","contentBuilder","columnsCount","rowsCount","columnTuple","hash","rowTuple","lastFocusedCellID","_activeElement","lastCellIdWithTabIndex","setTuples","build","setRowColumnInfo","columnHeaderLeafs","getHeaderLeafs","rowHeaderLeafs","columnHeaderBreadth","getBreadth","rowHeaderDepth","plugin","PivotGrid","columnBuilder","rowBuilder","support","isRtl","_createLayout","ColumnBuilder","RowBuilder","ContentBuilder","_templates","builder","eventArgs","parseJSON","request","childrenLoaded","maxChildren","reorderable","kpiStatusTemplate","kpiTrendTemplate","measureFields","columnFields","rowFields","columnTemplate","rowTemplate","dataTemplate","useWithBlock","kendoPivotConfigurator","columnInfo","rowInfo","view","measuresTarget","rowsTarget","columnsTarget","clearTimeout","_headerReflowTimeout","_stateResetHandler","_stateReset","reset","_measureFields","_createSettingTarget","pivotOptions","getIcons","_initSettingTargets","layoutTable","leftContainer","rightContainer","gridWrapper","wrap","content","columnsHeaderTree","dom","Tree","rowsHeaderTree","contentTree","firstChild","_setSectionsWidth","_setSectionsHeight","_setContentHeight","_columnHeaderReflow","browser","mozilla","leftColumn","measureFieldsHeight","columnFieldsHeight","rowFieldsHeight","innerHeight","columnsHeight","padding","firstRowHeight","secondRowHeight","calculatedWidth","minWidth","ceil","_resetColspan","skipScrollbar","clientHeight","_colspan","_layoutTimeout","_axisMeasures","hasMeasure","columnAxis","render","_indexes","touchScroller","contentResized","movable","sender","y","htmlNode","createMetadata","maxMembers","addColElements","addRowElements","addColumCell","rowEl","rowItem","cellEl","total","headerTemplate","columnHeaderRows","treeData","headerRows","headerLeafs","breadth","rowHeaderBreadth","_tree","_breadth","_headerLeafs","tbody","_tbody","colgroup","_colGroup","_rowLength","_buildRows","_normalize","cellsLength","cellIdx","tupleAll","_rowIndex","_row","parentRow","rowKey","notFirst","collapsed","measureRow","_cell","_content","childRow","childrenLength","allCell","nextMember","cellChildren","memberCollapsed","rootLevelNum","cellIconEl","maxcolSpan","allRow","firstMemberName","tuplePath","hasChild","axisInfo","axisInfoMember","skipChildren","firstEmpty","_buildRow","templateInfo","cellContent","startIdx","PivotExcelExporter","widget","columnHeaderTable","rowHeaderTable","columnHeaderLength","rowHeaderLength","autoWidth","_cells","background","color","contentRows","columnRows","rowRows","_freezePane","colSplit","rowSplit","workbook","sheets","freezePane","PivotExcelMixin","proto","excel","saveAsExcel","proxyURL","fileName","book","ooxml","Workbook","toDataURLAsync","dataURI","saveAs","forceProxy","prototype","PDFMixin","_drawPDF","_drawPDFShadow","avoidLinks","pdf","jQuery","kendo$1"],"sources":["kendo.pivotgrid.js"],"mappings":"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","sourcesContent":["import './kendo.pivot.common.js';\nimport './kendo.dom.js';\nimport './kendo.data.js';\nimport './kendo.icons.js';\n\nclass Navigation {\n    constructor(options) {\n        this.tabIndex = 0;\n        this.root = null;\n        this.eventHandlers = {};\n        this.update = () => { };\n        this.tabIndex = options.tabIndex;\n    }\n    get elements() {\n        return this.root ? Array.from(this.root.querySelectorAll(this.selectors.join(','))) : [];\n    }\n    get first() {\n        return (this.root && this.root.querySelector(this.selectors.join(','))) || null;\n    }\n    get last() {\n        const all = this.elements;\n        return all[all.length - 1] || null;\n    }\n    get current() {\n        return this.elements.find(el => el.matches(':focus'));\n    }\n    start(root) {\n        this.root = root;\n        for (const eventType in this.mouseEvents) {\n            if (this.mouseEvents[eventType]) {\n                this.eventHandlers[eventType] = (ev => {\n                    const target = ev.target instanceof Element && ev.target.closest(this.selectors.join(','));\n                    if (target) {\n                        this.mouseEvents[eventType].call(undefined, target, this, ev);\n                    }\n                });\n                root.addEventListener(eventType, this.eventHandlers[eventType]);\n            }\n        }\n        for (const eventType in this.keyboardEvents) {\n            if (this.keyboardEvents[eventType]) {\n                this.eventHandlers[eventType] = (ev => {\n                    const target = ev.target instanceof Element && ev.target.closest(this.selectors.join(','));\n                    const key = ev.key === ' ' ? 'Space' : ev.key;\n                    if (target && this.keyboardEvents[eventType][key]) {\n                        this.keyboardEvents[eventType][key].call(undefined, target, this, ev);\n                    }\n                });\n                root.addEventListener(eventType, this.eventHandlers[eventType]);\n            }\n        }\n    }\n    stop() {\n        if (this.root) {\n            for (const eventType in this.eventHandlers) {\n                if (this.eventHandlers[eventType]) {\n                    this.root.removeEventListener(eventType, this.eventHandlers[eventType]);\n                }\n            }\n        }\n        this.root = null;\n    }\n    focusElement(element, previous) {\n        if (element) {\n            if (previous) {\n                previous.removeAttribute('tabindex');\n                previous.classList.remove('k-focus');\n            }\n            element.setAttribute('tabindex', String(this.tabIndex));\n            element.focus({ preventScroll: true });\n        }\n    }\n}\n\nconst scrollableValuesSel = '.k-pivotgrid .k-pivotgrid-values';\nconst scrollableColumnHeaderSel = '.k-pivotgrid .k-pivotgrid-column-headers';\nconst scrollableRowHeaderSel = '.k-pivotgrid .k-pivotgrid-row-headers';\nconst emptyCellSel = '.k-pivotgrid > .k-pivotgrid-empty-cell';\nconst tableSel = 'table.k-pivotgrid-table';\nconst cellSel = '.k-pivotgrid-cell';\nconst scrollables = [scrollableValuesSel, scrollableColumnHeaderSel, scrollableRowHeaderSel].join(',');\nconst selectors$1 = [\n    emptyCellSel,\n    [scrollableColumnHeaderSel, tableSel, cellSel].join(' '),\n    [scrollableRowHeaderSel, tableSel, cellSel].join(' '),\n    [scrollableValuesSel, tableSel, cellSel].join(' ')\n];\nconst onEnter = (target, nav, ev) => {\n    const icon = target.querySelector('.k-icon, .k-svg-icon');\n    if (icon) {\n        const index = nav.elements.indexOf(target);\n        nav.update = () => {\n            nav.focusElement(nav.elements[index], null);\n            nav.update = () => { };\n        };\n        icon.click();\n        ev.preventDefault();\n    }\n};\nconst tryScrollLeft = (target, scrollable, elToScroll) => {\n    if (target.offsetLeft < scrollable.scrollLeft) {\n        elToScroll.scrollLeft = target.offsetLeft;\n    }\n};\nconst tryScrollRight = (target, scrollable, elToScroll) => {\n    if (target.offsetLeft + target.offsetWidth > scrollable.scrollLeft + scrollable.offsetWidth &&\n        target.offsetWidth < scrollable.offsetWidth) {\n        elToScroll.scrollLeft = target.offsetLeft + target.offsetWidth - scrollable.offsetWidth;\n    }\n};\nconst tryScrollUp = (target, scrollable, elToScroll) => {\n    if (scrollable.scrollTop && target.offsetTop < scrollable.scrollTop) {\n        elToScroll.scrollTop = target.offsetTop;\n    }\n};\nconst tryScrollDown = (target, scrollable, elToScroll) => {\n    if (target.offsetTop + target.offsetHeight > scrollable.scrollTop + scrollable.offsetHeight &&\n        target.offsetHeight < scrollable.offsetHeight) {\n        elToScroll.scrollTop = target.offsetTop + target.offsetHeight - scrollable.offsetHeight;\n    }\n};\nconst scrollTo = (target, root, scrollFunc) => {\n    const elToScroll = root.querySelector(scrollableValuesSel);\n    const scrollable = target && target.closest(scrollables);\n    if (!elToScroll || !scrollable || !target) {\n        return;\n    }\n    scrollFunc.forEach(scroll => scroll(target, scrollable, elToScroll));\n};\nconst tableMap = (table) => {\n    const rows = Array.from(table.rows);\n    const colsCount = Array.from((rows && rows[0] && rows[0].cells) || [])\n        .map(c => c.colSpan)\n        .reduce((prev, cur) => prev + cur, 0);\n    const map = rows.map(() => new Array(colsCount));\n    rows.forEach((row, r) => {\n        let curColSpan = 0;\n        Array.from(row.cells).forEach((c) => {\n            for (let colSp = 0; colSp < c.colSpan; colSp++) {\n                for (let rowSp = 0; rowSp < c.rowSpan; rowSp++) {\n                    const ind = map[r + rowSp].findIndex((val, curInd) => curInd >= curColSpan && !val);\n                    map[r + rowSp][ind] = c;\n                }\n                curColSpan++;\n            }\n        });\n    });\n    return map;\n};\nconst navigationMap = (root) => {\n    const columnHeader = tableMap(root.querySelector([scrollableColumnHeaderSel, tableSel].join(' ')));\n    const rowHeader = tableMap(root.querySelector([scrollableRowHeaderSel, tableSel].join(' ')));\n    const values = tableMap(root.querySelector([scrollableValuesSel, tableSel].join(' ')));\n    const emptyCell = root.querySelector(emptyCellSel);\n    const emptyCellRow = new Array(rowHeader[0].length).fill(emptyCell);\n    const map = [];\n    for (let i = 0; i < columnHeader.length; i++) {\n        map.push(emptyCellRow.concat(columnHeader[i]));\n    }\n    for (let i = 0; i < rowHeader.length; i++) {\n        map.push(rowHeader[i].concat(values[i]));\n    }\n    return map;\n};\nconst getTargetPos = (map, target) => {\n    for (let r = 0; r < map.length; r++) {\n        for (let c = 0; c < map[r].length; c++) {\n            if (map[r][c] === target) {\n                return [r, c];\n            }\n        }\n    }\n    return [-1, -1];\n};\nconst ctrlKey = (ev) => ev.ctrlKey || ev.metaKey;\nconst cellAt = (root, target, pos) => {\n    const map = navigationMap(root);\n    let targetPos = getTargetPos(map, target);\n    let nextPos = [targetPos[0] + pos[0], targetPos[1] + pos[1]];\n    let next = map[nextPos[0]] && map[nextPos[0]][nextPos[1]];\n    while (next && next === target) {\n        nextPos = [nextPos[0] + pos[0], nextPos[1] + pos[1]];\n        next = map[nextPos[0]] && map[nextPos[0]][nextPos[1]];\n    }\n    return next;\n};\nconst keyboardEvents$1 = {\n    keydown: {\n        ArrowLeft: (target, nav, ev) => {\n            ev.preventDefault();\n            const next = cellAt(nav.root, target, [0, -1]);\n            nav.focusElement(next, target);\n            scrollTo(next, nav.root, [tryScrollRight, tryScrollLeft, tryScrollDown, tryScrollUp]);\n        },\n        ArrowRight: (target, nav, ev) => {\n            ev.preventDefault();\n            const next = cellAt(nav.root, target, [0, 1]);\n            nav.focusElement(next, target);\n            scrollTo(next, nav.root, [tryScrollLeft, tryScrollRight, tryScrollDown, tryScrollUp]);\n        },\n        ArrowUp: (target, nav, ev) => {\n            ev.preventDefault();\n            const next = cellAt(nav.root, target, [-1, 0]);\n            nav.focusElement(next, target);\n            scrollTo(next, nav.root, [tryScrollRight, tryScrollLeft, tryScrollDown, tryScrollUp]);\n        },\n        ArrowDown: (target, nav, ev) => {\n            ev.preventDefault();\n            const next = cellAt(nav.root, target, [1, 0]);\n            nav.focusElement(next, target);\n            scrollTo(next, nav.root, [tryScrollRight, tryScrollLeft, tryScrollUp, tryScrollDown]);\n        },\n        o: (_target, nav, _ev) => {\n            if (!nav.root) {\n                return;\n            }\n            // FIX: ADDED manually to fix an issue where depending on the order of the config element and button\n            // you either can open the configurator with Ctrl+O, or you can close the configurator with ESC\n            let next = nav.root.nextElementSibling;\n            if (!(next && next instanceof HTMLElement)) {\n                return;\n            }\n\n            if (!next.matches('div.k-pivotgrid-configurator-button')) {\n                next = next.nextElementSibling;\n            }\n\n            if (next && next instanceof HTMLElement && next.matches('div.k-pivotgrid-configurator-button')) {\n                if (!nav.root.parentNode || nav.root.parentNode.querySelector(\".k-pivotgrid-configurator.k-hidden\")) {\n                    next.click();\n                }\n\n                setTimeout(() => {\n                    if (nav.root.parentNode) {\n                        const confHeader = nav.root.parentNode.querySelector('.k-pivotgrid-configurator-content .k-form-field .k-fields-list-wrapper .k-treeview');\n                        if (confHeader instanceof HTMLElement) {\n                            confHeader.setAttribute('tabindex', String(nav.tabIndex));\n                            confHeader.focus();\n                        }\n                    }\n                }, 0);\n            }\n        },\n        Enter: onEnter,\n        Space: onEnter,\n        Home: (target, nav, ev) => {\n            const map = navigationMap(nav.root);\n            const ctrl = ctrlKey(ev);\n            let row = ctrl ? map[0] : (map.find(ro => Boolean(ro.find(x => x === target))) || []);\n            let next = row[0];\n            if (next) {\n                nav.focusElement(next, target);\n                scrollTo(next, nav.root, [tryScrollRight, tryScrollLeft, tryScrollDown, tryScrollUp]);\n                ev.preventDefault();\n            }\n        },\n        End: (target, nav, ev) => {\n            const map = navigationMap(nav.root);\n            const ctrl = ctrlKey(ev);\n            let row = ctrl ? map[map.length - 1] : (map.find(ro => Boolean(ro.find(x => x === target))) || []);\n            let next = row && row[row.length - 1] || null;\n            if (next) {\n                nav.focusElement(next, target);\n                scrollTo(next, nav.root, [tryScrollLeft, tryScrollRight, tryScrollUp, tryScrollDown]);\n                ev.preventDefault();\n            }\n        }\n    }\n};\nconst mouseEvents$1 = {\n    click: (target, nav) => {\n        if (target && target instanceof HTMLElement) {\n            const prev = nav.elements.find(c => c.hasAttribute('tabindex')) || null;\n            nav.focusElement(target, prev);\n        }\n    }\n};\n/**\n * The PivotGrid keyboard navigation functionality.\n *\n * Usage:\n *\n * On Initialize\n * const navigation = new PivotGridNavigation({ tabindex: 0 });\n *\n * Turn on\n * navigation.start(rootDomElement);\n *\n * On After Update\n * navigation.update();\n *\n * On Destroy / Turn off\n * navigation.stop();\n */\nclass PivotGridNavigation extends Navigation {\n    constructor() {\n        super(...arguments);\n        this.selectors = selectors$1;\n        this.mouseEvents = mouseEvents$1;\n        this.keyboardEvents = keyboardEvents$1;\n    }\n}\n\nconst selectors = [\n    '.k-pivotgrid-configurator-content .k-form-field .k-fields-list-wrapper .k-treeview',\n    '.k-pivotgrid-configurator-content .k-chip',\n    '.k-pivotgrid-configurator-actions button'\n];\nconst onEscape = (_target, nav, ev) => {\n    if (ev.target instanceof HTMLElement) {\n        if (nav.root) {\n            const pivot = nav.root.previousElementSibling;\n            const confButton = nav.root.nextElementSibling;\n            const pivotCell = Array.from(pivot instanceof HTMLElement ? pivot.querySelectorAll('[tabindex]') : []).find((c) => c.tabIndex >= 0);\n            if (pivotCell instanceof HTMLElement) {\n                pivotCell.focus();\n                if (confButton instanceof HTMLElement) {\n                    confButton.click();\n                }\n            }\n        }\n    }\n};\nconst navigate = (target, nav, ev, dir) => {\n    ev.preventDefault();\n    const all = nav.elements;\n    let index = all.indexOf(target) + dir;\n    if (index < 0) {\n        index = all.length - 1;\n    }\n    nav.focusElement(all[index % all.length], target);\n};\nconst onDelete = (target, nav, ev) => {\n    if (ev.target instanceof HTMLElement) {\n        const deleteButton = ev.target.querySelector('.k-icon.k-i-x-circle, .k-svg-icon.k-svg-i-x-circle');\n        if (deleteButton instanceof HTMLElement) {\n            ev.preventDefault();\n            navigate(target, nav, ev, -1);\n        }\n    }\n};\nconst keyboardEvents = {\n    keydown: {\n        Tab: (target, nav, ev) => {\n            navigate(target, nav, ev, ev.shiftKey ? -1 : 1);\n        },\n        Escape: onEscape,\n        Delete: onDelete,\n        Backspace: onDelete\n    }\n};\nconst mouseEvents = {\n    click: (target, nav) => {\n        if (target && target instanceof HTMLElement) {\n            const prev = nav.elements.find((c) => c.hasAttribute('tabindex')) || null;\n            nav.focusElement(target, prev);\n        }\n    }\n};\n/**\n * The PivotGrid Configurator keyboard navigation functionality.\n *\n * Usage:\n *\n * On Initialize\n * const navigation = new ConfiguratorNavigation({ tabindex: 0 });\n *\n * Turn on\n * navigation.start(rootDomElement);\n *\n * On After Update\n * navigation.update();\n *\n * On Destroy / Turn off\n * navigation.stop();\n */\nclass ConfiguratorNavigation extends Navigation {\n    constructor() {\n        super(...arguments);\n        this.selectors = selectors;\n        this.mouseEvents = mouseEvents;\n        this.keyboardEvents = keyboardEvents;\n    }\n}\n\nvar __meta__ = {\n    id: \"pivotgrid\",\n    name: \"PivotGrid\",\n    category: \"web\",\n    description: \"The PivotGrid widget is a data summarization tool.\",\n    depends: [ \"dom\", \"data\", \"data.xml\", \"sortable\", \"pivot.common\", \"icons\" ],\n    features: [{\n        id: \"pivotgrid-configurator\",\n        name: \"Configurator\",\n        description: \"The PivotConfigurator widget allows the user to select data slices displayed in PivotGrid\",\n        depends: [ \"pivot.configurator\" ]\n    }, {\n        id: \"pivotgrid-filtering\",\n        name: \"Filtering\",\n        description: \"Support for filtering\",\n        depends: [ \"pivot.fieldmenu\" ]\n    }, {\n        id: \"pivotgrid-excel-export\",\n        name: \"Excel export\",\n        description: \"Export pivot grid data as Excel spreadsheet\",\n        depends: [ \"ooxml\" ]\n    }, {\n        id: \"pivotgrid-pdf-export\",\n        name: \"PDF export\",\n        description: \"Export pivot grid data as PDF\",\n        depends: [ \"pdf\", \"drawing\" ]\n    }, {\n        id: \"mobile-scroller\",\n        name: \"Mobile scroller\",\n        description: \"Support for kinetic scrolling in mobile device\",\n        depends: [ \"mobile.scroller\" ]\n    }]\n};\n\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        encode = kendo.htmlEncode,\n        Class = kendo.Class,\n        Comparer = kendo.data.Comparer,\n        Widget = ui.Widget,\n        DataSource = kendo.data.DataSource,\n        outerWidth = kendo._outerWidth,\n        outerHeight = kendo._outerHeight,\n        common = window.kendo.pivotgrid.common,\n        fetchDiscover = common.fetchDiscover,\n        normalizeFilter = kendo.data.Query.normalizeFilter,\n        normalizeSort = kendo.data.Query.normalizeSort,\n        toString = {}.toString,\n        identity = function(o) { return o; },\n        map = $.map,\n        extend = $.extend,\n        keys = kendo.keys,\n        isFunction = kendo.isFunction,\n        fetchData = common.fetchData,\n        createLocalDataState = common.createLocalDataState,\n        createDataTree = common.createDataTree,\n        sumAggregate = common.sumAggregate,\n        averageAggregate = common.averageAggregate,\n        minAggregate = common.minAggregate,\n        maxAggregate = common.maxAggregate,\n        createDataState = common.createDataState,\n        toColumns = common.toColumns,\n        toRows = common.toRows,\n        toTree = common.toTree,\n        toData = common.toData,\n        headersReducer = common.headersReducer,\n        RESIZE = \"resize\",\n        READ = \"read\",\n        CHANGE = \"change\",\n        ERROR = \"error\",\n        REQUESTSTART = \"requestStart\",\n        PROGRESS = \"progress\",\n        REQUESTEND = \"requestEnd\",\n        MEASURES = \"Measures\",\n        STATERESET = \"stateReset\",\n        AUTO = \"auto\",\n        DIV = \"<div></div>\",\n        NS = \".kendoPivotGrid\",\n        ROW_TOTAL_KEY = \"__row_total__\",\n        DATABINDING = \"dataBinding\",\n        DATABOUND = \"dataBound\",\n        EXPANDMEMBER = \"expandMember\",\n        HEADERTEMPLATE = ({ id, key, headerClass, colspan, rowspan, expandable, iconClass, role, expanded }) => `<th id=\"${id}\" role=\"${role}\" ${expandable ? `aria-expanded=\"${expanded}\"` : ''}  data-key=\"${encode(key)}\" class=\"k-table-th ${encode(headerClass)}\" ${colspan ? 'colspan=\"' + encode(colspan) + '\"' : ''} ${rowspan ? 'rowspan=\"' + encode(rowspan) + '\"' : ''}>` +\n                                    `${expandable ? kendo.ui.icon($('<span role=\"presentation\" class=\"k-pivotgrid-toggle\"></span>'), { icon: `chevron-${encode(iconClass)}` }) : ''}` +\n                                '</th>',\n        COLLAPSEMEMBER = \"collapseMember\",\n        STATE_EXPANDED_ICONNAME = \"caret-alt-down\",\n        STATE_EXPANDED_SELECTOR = `.k-i-${STATE_EXPANDED_ICONNAME},.k-svg-i-${STATE_EXPANDED_ICONNAME}`,\n        STATE_COLLAPSED_ICONNAME = \"caret-alt-right\",\n        HEADER_TEMPLATE = ({ member }) => `<span>${encode(member.caption || member.name)}</span>`,\n        PIVOTGRID_TREND_ICONS_MAP = {\n            \"kpi-trend-decrease\": \"caret-alt-down\",\n            \"kpi-trend-increase\": \"caret-alt-up\",\n            \"kpi-trend-equal\": \"minus\",\n        },\n        KPISTATUS_TEMPLATE = ({ dataItem }) => kendo.ui.icon($(`<span title=\"${encode(dataItem.value)}\"></span>`), { icon: `kpi-status-${dataItem.value > 0 ? \"open\" : dataItem.value < 0 ? \"deny\" : \"hold\"}` }),\n        KPITREND_TEMPLATE = ({ dataItem }) => kendo.ui.icon($(`<span title=\"${encode(dataItem.value)}\"></span>`), { icon: PIVOTGRID_TREND_ICONS_MAP[`kpi-trend-${dataItem.value > 0 ? \"increase\" : dataItem.value < 0 ? \"decrease\" : \"equal\"}`] }),\n        DATACELL_TEMPLATE = ({ dataItem }) => `${dataItem ? encode(dataItem.fmtValue || dataItem.value) || \"&nbsp;\" : \"&nbsp;\"}`,\n        LAYOUT_TABLE = '<table class=\"k-pivot-layout\">' +\n                            '<tr>' +\n                                '<td>' +\n                                    '<div class=\"k-pivot-rowheaders\"></div>' +\n                                '</td>' +\n                                '<td>' +\n                                    '<div class=\"k-pivot-table\"></div>' +\n                                '</td>' +\n                            '</tr>' +\n                        '</table>';\n        var AXIS_ROWS = \"rows\";\n        var AXIS_COLUMNS = \"columns\";\n\n        var tableStyles = {\n            tableRow: \"k-table-row\",\n            header: \"k-header k-table-th\",\n            headerTable: \"k-grid-header-table k-table k-table-md\",\n            table: \"k-table k-table-md\",\n            contentTable: \"k-grid-table k-table k-table-md\",\n            tbody: \"k-table-tbody\",\n            tableCell: \"k-table-td\"\n        };\n\n    function normalizeMeasures(measure) {\n        var descriptor = typeof measure === \"string\" ? [{ name: measure }] : measure;\n        var descriptors = toString.call(descriptor) === \"[object Array]\" ? descriptor : (descriptor !== undefined$1 ? [descriptor] : []);\n\n        return map(descriptors, function(d) {\n            if (typeof d === \"string\") {\n                return { name: d };\n            }\n            return $.extend(true, d, { name: d.name, type: d.type });\n        });\n    }\n\n    function normalizeMembers(member) {\n        var descriptor = typeof member === \"string\" ? [{ name: [member], expand: false }] : member;\n        var descriptors = toString.call(descriptor) === \"[object Array]\" ? descriptor : (descriptor !== undefined$1 ? [descriptor] : []);\n\n        return map(descriptors, function(d) {\n            if (typeof d === \"string\") {\n                return { name: [d], expand: false };\n            }\n            return { name: (toString.call(d.name) === \"[object Array]\" ? d.name.slice() : [d.name]), expand: d.expand };\n        });\n    }\n\n    function normalizeName(name) {\n        if (name.indexOf(\" \") !== -1) {\n            name = '[\"' + name + '\"]';\n        }\n\n        return name;\n    }\n\n    function accumulateMembers(accumulator, rootTuple, tuple, level) {\n        var idx, length;\n        var children;\n        var member;\n\n        if (!tuple) {\n            tuple = rootTuple;\n        }\n\n        if (!level) {\n            level = 0;\n        }\n\n        member = tuple.members[level];\n\n        if (!member || member.measure) { //return if no member or measure\n            return;\n        }\n\n        children = member.children;\n        length = children.length;\n\n        if (tuple === rootTuple) {\n            accumulator[kendo.stringify([member.name])] = !!length;\n        } else if (length) {\n            accumulator[kendo.stringify(buildPath(tuple, level))] = true;\n        }\n\n        if (length) {\n            for (idx = 0; idx < length; idx++) {\n                accumulateMembers(accumulator, rootTuple, children[idx], level);\n            }\n        }\n\n        accumulateMembers(accumulator, rootTuple, tuple, level + 1);\n    }\n\n    function descriptorsForAxes(tuples) {\n        var result = {};\n\n        if (tuples.length) {\n            accumulateMembers(result, tuples[0]);\n        }\n\n        var descriptors = [];\n        for (var k in result) {\n            descriptors.push({ name: JSON.parse(k), expand: result[k] });\n        }\n\n        return descriptors;\n    }\n\n    function addMissingPathMembers(members, axis) {\n        var tuples = axis.tuples || [];\n        var firstTuple = tuples[0];\n\n        if (firstTuple && members.length < firstTuple.members.length) {\n            var tupleMembers = firstTuple.members;\n\n            for (var idx = 0; idx < tupleMembers.length; idx++) {\n                if (tupleMembers[idx].measure) {\n                    continue;\n                }\n\n                var found = false;\n                for (var j = 0; j < members.length; j++) {\n                    if (getName(members[j]).indexOf(tupleMembers[idx].hierarchy) === 0) {\n                        found = true;\n                        break;\n                    }\n                }\n\n                if (!found) {\n                    members.push({ name: [tupleMembers[idx].name], expand: false }); //calling normalize here to make name from string to array\n                }\n            }\n        }\n    }\n\n    function tupleToDescriptors(tuple) {\n        var result = [];\n        var members = tuple.members;\n\n        for (var idx = 0; idx < members.length; idx++) {\n            if (members[idx].measure) {\n                continue;\n            }\n\n            //make tuple name an array\n            result.push({ name: [members[idx].name], expand: members[idx].children.length > 0 });\n        }\n\n        return result;\n    }\n\n    function descriptorsForMembers(axis, members, measures) {\n        axis = axis || {};\n\n        addMissingPathMembers(members, axis);\n\n        if (measures.length > 1) {\n            members.push({\n                name: MEASURES,\n                measure: true,\n                children: normalizeMembers(measures)\n            });\n        }\n\n        var tupletoSearch = {\n            members: members\n        };\n\n        if (axis.tuples) {\n            var result = findExistingTuple(axis.tuples, tupletoSearch);\n            if (result.tuple) {\n                members = tupleToDescriptors(result.tuple);\n            }\n        }\n\n        return members;\n    }\n\n    function createAggregateGetter(m) {\n        var measureGetter = kendo.getter(m.field, true);\n        return function(aggregatorContext, state) {\n            return m.aggregate(measureGetter(aggregatorContext.dataItem), state, aggregatorContext);\n        };\n    }\n\n    function isNumber(val) {\n        return typeof val === \"number\" && !isNaN(val);\n    }\n\n    function isDate(val) {\n        return val && val.getTime;\n    }\n\n    function getScollWidth() {\n        var scrollbar = 0;\n        var div;\n        if (document && document.createElement) {\n            div = document.createElement('div');\n\n            div.style.cssText = 'overflow:scroll;overflow-x:hidden;zoom:1;clear:both;display:block';\n            div.innerHTML = '&nbsp;';\n            document.body.appendChild(div);\n\n            scrollbar = div.offsetWidth - div.scrollWidth;\n\n            document.body.removeChild(div);\n        }\n\n        return scrollbar;\n    }\n\n    function flattenSortDescriptors(descriptors) {\n        var result = [];\n        for (var i = 0; i < descriptors.length; i++) {\n            result.push({\n                dir: descriptors[i].dir,\n                field: descriptors[i].field.split(\".\").pop()\n            });\n        }\n        return result;\n    }\n\n    function createLocalMeasure(field, key, format, aggregate) {\n        var formatFunc = function(value) { return kendo.format(this.format, value); };\n        var measureMap = {\n            \"sum\": sumAggregate,\n            \"average\": averageAggregate,\n            \"min\": minAggregate,\n            \"max\": maxAggregate,\n        };\n        var valueFunc = function(item) { return item[this.field]; };\n        var measure = {\n                value: valueFunc.bind({ field: field }),\n                aggregate: measureMap[aggregate],\n                caption: key,\n                uniqueName: key,\n                type: 2,\n                name: [key]\n            };\n        if (format) {\n            measure.aggregate.format = formatFunc.bind({ format: format });\n        }\n\n        return measure;\n    }\n\n    function getIcons(sortIcon, options, pivotOptions) {\n        var sortable = options.sortable,\n            filterable = options.filterable,\n            reorderable = pivotOptions.reorderable,\n            result = \"\";\n\n        if (sortable) {\n            result += sortIcon ? `<span class=\"k-chip-action\">${kendo.ui.icon(sortIcon + \"-sm\")}</span>` : '';\n        }\n\n        if (filterable || sortable) {\n            result += `<span class=\"k-setting-fieldmenu k-chip-action\">${kendo.ui.icon(\"more-vertical\")}</span>`;\n        }\n        if (reorderable) {\n            result += `<span class=\"k-setting-delete k-chip-action\">${kendo.ui.icon(\"x\")}</span>`;\n        }\n\n        return result;\n    }\n\n    var functions = {\n        sum: function(value, state) {\n            var accumulator = state.accumulator;\n\n            if (!isNumber(accumulator)) {\n                accumulator = value;\n            } else if (isNumber(value)) {\n                accumulator += value;\n            }\n\n            return accumulator;\n        },\n        count: function(value, state) {\n            return (state.accumulator || 0) + 1;\n        },\n        average: {\n            aggregate: function(value, state) {\n                var accumulator = state.accumulator;\n\n                if (state.count === undefined$1) {\n                    state.count = 0;\n                }\n\n                if (!isNumber(accumulator)) {\n                    accumulator = value;\n                } else if (isNumber(value)) {\n                    accumulator += value;\n                }\n\n                if (isNumber(value)) {\n                    state.count++;\n                }\n\n                return accumulator;\n            },\n            result: function(state) {\n                var accumulator = state.accumulator;\n\n                if (isNumber(accumulator)) {\n                    accumulator = accumulator / state.count;\n                }\n\n                return accumulator;\n            }\n        },\n        max: function(value, state) {\n            var accumulator = state.accumulator;\n\n            if (!isNumber(accumulator) && !isDate(accumulator)) {\n                accumulator = value;\n            }\n\n            if (accumulator < value && (isNumber(value) || isDate(value))) {\n                accumulator = value;\n            }\n            return accumulator;\n        },\n        min: function(value, state) {\n            var accumulator = state.accumulator;\n\n            if (!isNumber(accumulator) && !isDate(accumulator)) {\n                accumulator = value;\n            }\n\n            if (accumulator > value && (isNumber(value) || isDate(value))) {\n                accumulator = value;\n            }\n            return accumulator;\n        }\n    };\n\n    var PivotCubeBuilder = Class.extend({\n        init: function(options) {\n            this.options = extend({}, this.options, options);\n            this.dimensions = this._normalizeDescriptors(\"field\", this.options.dimensions);\n            this.measures = this._normalizeDescriptors(\"name\", this.options.measures);\n        },\n\n        _normalizeDescriptors: function(keyField, descriptors) {\n            descriptors = descriptors || {};\n            var fields = {};\n            var field;\n\n            if (toString.call(descriptors) === \"[object Array]\") {\n                for (var idx = 0, length = descriptors.length; idx < length; idx++) {\n                    field = descriptors[idx];\n                    if (typeof field === \"string\") {\n                        fields[field] = {};\n                    } else if (field[keyField]) {\n                        fields[field[keyField]] = field;\n                    }\n                }\n                descriptors = fields;\n            }\n\n            return descriptors;\n        },\n\n        _rootTuples: function(rootNames, measureAggregators) {\n            var aggregatorsLength = measureAggregators.length || 1;\n            var dimensionsSchema = this.dimensions || [];\n            var root, name, parts;\n            var measureIdx = 0;\n            var idx;\n\n            var rootNamesLength = rootNames.length;\n            var result = [];\n            var keys = [];\n\n            if (rootNamesLength || measureAggregators.length) {\n                for (measureIdx = 0; measureIdx < aggregatorsLength; measureIdx++) {\n\n                    root = { members: [] };\n\n                    for (idx = 0; idx < rootNamesLength; idx++) {\n                        name = rootNames[idx];\n                        parts = name.split(\"&\");\n\n                        root.members[root.members.length] = {\n                            children: [],\n                            caption: (dimensionsSchema[name] || {}).caption || \"All\",\n                            name: name,\n                            levelName: name,\n                            levelNum: \"0\",\n                            hasChildren: true,\n                            parentName: parts.length > 1 ? parts[0] : undefined$1,\n                            hierarchy: name\n                        };\n                    }\n\n                    if (aggregatorsLength > 1) {\n                        root.members[root.members.length] = {\n                            children: [],\n                            caption: (measureAggregators[measureIdx]).caption,\n                            name: measureAggregators[measureIdx].descriptor.name,\n                            levelName: \"MEASURES\",\n                            levelNum: \"0\",\n                            hasChildren: false,\n                            parentName: undefined$1,\n                            hierarchy: \"MEASURES\"\n                        };\n                    }\n\n                    result[result.length] = root;\n                }\n\n                keys.push(ROW_TOTAL_KEY);\n            }\n\n            return {\n                keys: keys,\n                tuples: result\n            };\n        },\n\n        _sortMap: function(map, sortDescriptors) {\n            var sortedMaps = [];\n            var sortTree = [];\n            var flattenTree = [];\n            var mapItem;\n            var key;\n\n            for (key in map) {\n                if (!map[key].directParentName) {\n                    sortTree.push($.extend({}, { name: key, parentName: map[key].parentName }));\n                }\n            }\n\n            //if there are no root this means that something is expanding\n            //and we should only sort that part of the tree\n            if (!sortTree.length) {\n                for (key in map) {\n                    sortTree.push($.extend({}, { name: key, parentName: map[key].parentName }));\n                }\n            }\n\n            fillSortTree(sortTree, map);\n\n            // fill tree recursive\n            for (var i = 0; i < sortDescriptors.length; i++) {\n                sortItemsTree(sortDescriptors[i].field.split(\".\").pop(), sortTree, Comparer.create({ field: \"name\", dir: sortDescriptors[i].dir }));\n            }\n\n            flattenTree = flatColumns(sortTree);\n\n            //we need to flatten the structure so the tuples can build correctly\n            for (var j = 0; j < flattenTree.length; j++) {\n                mapItem = map[flattenTree[j].name];\n                mapItem.index = j;\n                sortedMaps[j] = mapItem;\n            }\n\n            return sortedMaps;\n        },\n\n        _expandedTuples: function(map, expanded, measureAggregators, sortDescriptors) {\n            var aggregatorsLength = measureAggregators.length || 1;\n            var dimensionsSchema = this.dimensions || [];\n            var measureIdx;\n            var tuple;\n\n            var key;\n            var mapItem;\n            var current;\n            var currentKeys;\n            var accumulator = [];\n            var accumulatorKeys = [];\n            var memberInfo;\n\n            var expandedNames;\n            var parts;\n            var name;\n            var idx;\n\n            if (sortDescriptors && sortDescriptors.length && !$.isEmptyObject(map)) {\n                map = this._sortMap(map, sortDescriptors);\n            }\n\n            for (key in map) {\n                mapItem = map[key];\n                memberInfo = this._findExpandedMember(expanded, mapItem.uniquePath);\n\n                current = accumulator[memberInfo.index] || [];\n                currentKeys = accumulatorKeys[memberInfo.index] || [];\n\n                expandedNames = memberInfo.member.names;\n\n                for (measureIdx = 0; measureIdx < aggregatorsLength; measureIdx++) {\n                    tuple = { members: [] };\n                    for (idx = 0; idx < expandedNames.length; idx++) {\n                        if (idx === memberInfo.member.expandedIdx) {\n                            tuple.members[tuple.members.length] = {\n                                children: [],\n                                caption: mapItem.value,\n                                name: mapItem.name,\n                                hasChildren: false,\n                                levelNum: 1,\n                                levelName: mapItem.parentName + mapItem.name,\n                                parentName: mapItem.parentName,\n                                hierarchy: mapItem.parentName + mapItem.name\n                            };\n\n                            if (measureIdx === 0) {\n                                currentKeys.push(buildPath(tuple, idx).join(\"\"));\n                            }\n                        } else {\n                            name = expandedNames[idx];\n                            parts = name.split(\"&\");\n                            tuple.members[tuple.members.length] = {\n                                children: [],\n                                caption: (dimensionsSchema[name] || {}).caption || \"All\",\n                                name: name,\n                                levelName: name,\n                                levelNum: \"0\",\n                                hasChildren: true,\n                                parentName: parts.length > 1 ? parts[0] : undefined$1,\n                                hierarchy: name\n                            };\n                        }\n                    }\n\n                    if (aggregatorsLength > 1) {\n                        tuple.members[tuple.members.length] = {\n                            children: [],\n                            caption: measureAggregators[measureIdx].caption,\n                            name: measureAggregators[measureIdx].descriptor.name,\n                            levelName: \"MEASURES\",\n                            levelNum: \"0\",\n                            hasChildren: true,\n                            parentName: undefined$1,\n                            hierarchy: \"MEASURES\"\n                        };\n                    }\n\n                    current[current.length] = tuple;\n                }\n\n                accumulator[memberInfo.index] = current;\n                accumulatorKeys[memberInfo.index] = currentKeys;\n            }\n\n            return {\n                keys: accumulatorKeys,\n                tuples: accumulator\n            };\n        },\n\n        _findExpandedMember: function(members, parentName) {\n            for (var idx = 0; idx < members.length; idx++) {\n                if (members[idx].uniquePath === parentName) {\n                    return {\n                        member: members[idx],\n                        index: idx\n                    };\n                }\n            }\n        },\n\n        _asTuples: function(map, descriptor, measureAggregators, sortDescriptors) {\n            measureAggregators = measureAggregators || [];\n\n            var rootInfo = this._rootTuples(descriptor.root, measureAggregators);\n            var expandedInfo = this._expandedTuples(map, descriptor.expanded, measureAggregators, sortDescriptors);\n\n            return {\n                keys: [].concat.apply(rootInfo.keys, expandedInfo.keys),\n                tuples: [].concat.apply(rootInfo.tuples, expandedInfo.tuples)\n            };\n        },\n\n        _measuresInfo: function(measures, rowAxis) {\n            var idx = 0;\n            var length = measures && measures.length;\n\n            var aggregateNames = [];\n            var resultFuncs = {};\n            var formats = {};\n\n            var descriptors = (this.measures || {});\n            var measure;\n            var name;\n\n            for (; idx < length; idx++) {\n                name = measures[idx].descriptor.name;\n                measure = descriptors[name] || {};\n\n                aggregateNames.push(name);\n\n                if (measure.result) {\n                    resultFuncs[name] = measure.result;\n                }\n\n                if (measure.format) {\n                    formats[name] = measure.format;\n                }\n            }\n\n            return {\n                names: aggregateNames,\n                formats: formats,\n                resultFuncs: resultFuncs,\n                rowAxis: rowAxis\n            };\n        },\n\n        _toDataArray: function(map, measuresInfo, rowKeys, columnKeys) {\n            var result = [];\n\n            var aggregates;\n            var name, i, j, k, n;\n            var row, column, columnKey;\n\n            var rowMeasureNamesLength = 1;\n            var rowMeasureNames = [];\n            var columnMeasureNames;\n\n            var rowLength = rowKeys.length || 1;\n            var columnLength = columnKeys.length || 1;\n\n            if (measuresInfo.rowAxis) {\n                rowMeasureNames = measuresInfo.names;\n                rowMeasureNamesLength = rowMeasureNames.length;\n            } else {\n                columnMeasureNames = measuresInfo.names;\n            }\n\n            for (i = 0; i < rowLength; i++) {\n                row = map[rowKeys[i] || ROW_TOTAL_KEY];\n\n                for (n = 0; n < rowMeasureNamesLength; n++) {\n                    if (measuresInfo.rowAxis) {\n                        columnMeasureNames = [rowMeasureNames[n]];\n                    }\n\n                    for (j = 0; j < columnLength; j++) {\n                        columnKey = columnKeys[j] || ROW_TOTAL_KEY;\n                        column = row.items[columnKey];\n\n                        if (columnKey === ROW_TOTAL_KEY) {\n                            aggregates = row.aggregates;\n                        } else {\n                            aggregates = column ? column.aggregates : {};\n                        }\n\n                        for (k = 0; k < columnMeasureNames.length; k++) {\n                            name = columnMeasureNames[k];\n                            this._addData(result, aggregates[name], measuresInfo.formats[name], measuresInfo.resultFuncs[name]);\n                        }\n                    }\n                }\n            }\n\n            return result;\n        },\n\n        _addData: function(result, value, format, resultFunc) {\n            var fmtValue = \"\";\n            var ordinal;\n\n            if (value) {\n                value = resultFunc ? resultFunc(value) : value.accumulator;\n                fmtValue = format ? kendo.format(format, value) : value;\n            }\n\n            ordinal = result.length;\n\n            result[ordinal] = {\n                ordinal: ordinal,\n                value: value || \"\",\n                fmtValue: fmtValue\n            };\n        },\n\n        _matchDescriptors: function(dataItem, descriptor, getters) {\n            var parts;\n            var parentField;\n            var expectedValue;\n\n            var names = descriptor.names;\n            var idx = descriptor.expandedIdx;\n            var value;\n\n            while (idx > 0) {\n                parts = names[--idx].split(\"&\");\n                if (parts.length > 1) {\n                    parentField = parts[0];\n                    expectedValue = parts[1];\n\n                    value = getters[parentField](dataItem);\n                    value = (value !== undefined$1 && value !== null) ? value.toString() : value;\n\n                    if (value != expectedValue) {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        },\n\n        _calculateAggregate: function(measureAggregators, aggregatorContext, totalItem) {\n            var result = {};\n            var state;\n            var name;\n\n            for (var measureIdx = 0; measureIdx < measureAggregators.length; measureIdx++) {\n                name = measureAggregators[measureIdx].descriptor.name;\n                state = totalItem.aggregates[name] || { };\n                state.accumulator = measureAggregators[measureIdx].aggregator(aggregatorContext, state);\n                result[name] = state;\n            }\n\n            return result;\n        },\n\n        _processColumns: function(measureAggregators, descriptors, getters, columns, aggregatorContext, rowTotal, state, updateColumn) {\n            var value;\n            var descriptor;\n            var column;\n            var totalItem;\n            var key, name, parentName, path;\n            var dataItem = aggregatorContext.dataItem;\n            var idx = 0;\n\n            for (; idx < descriptors.length; idx++) {\n                descriptor = descriptors[idx];\n\n                //checks whether the dataItem is relevant to the descriptors\n                if (!this._matchDescriptors(dataItem, descriptor, getters)) {\n                    continue;\n                }\n\n                path = descriptor.names.slice(0, descriptor.expandedIdx).join(\"\");\n                name = descriptor.names[descriptor.expandedIdx];\n\n\n                value = getters[name](dataItem);\n                value = (value !== undefined$1 && value !== null) ? value.toString() : value;\n\n                parentName = name;\n                name = name + \"&\" + value;\n                key = path + name;\n\n                column = columns[key] || {\n                    index: state.columnIndex,\n                    parentName: parentName,\n                    name: name,\n                    directParentName: path.indexOf(\"&\") !== -1 ? path : \"\",\n                    uniquePath: path + parentName,\n                    childrenMap: {},\n                    value: value\n                };\n\n                if (path && columns[path] && !columns[path].childrenMap[path + parentName + \"&\" + value]) {\n                    columns[path].childrenMap[path + parentName + \"&\" + value] = true;\n                }\n\n                totalItem = rowTotal.items[key] || {\n                    aggregates: {}\n                };\n\n                rowTotal.items[key] = {\n                    index: column.index,\n                    aggregates: this._calculateAggregate(measureAggregators, aggregatorContext, totalItem)\n                };\n\n                if (updateColumn) {\n                    if (!columns[key]) {\n                        state.columnIndex++;\n                    }\n                    columns[key] = column;\n                }\n            }\n        },\n\n        _measureAggregators: function(options) {\n            var measureDescriptors = options.measures || [];\n            var measures = this.measures || {};\n            var aggregators = [];\n            var descriptor, measure, idx, length;\n            var defaultAggregate, aggregate;\n\n            if (measureDescriptors.length) {\n                for (idx = 0, length = measureDescriptors.length; idx < length; idx++) {\n                    descriptor = measureDescriptors[idx];\n                    measure = measures[descriptor.name];\n                    defaultAggregate = null;\n\n                    if (measure) {\n                        aggregate = measure.aggregate;\n                        if (typeof aggregate === \"string\") {\n                            defaultAggregate = functions[aggregate.toLowerCase()];\n\n                            if (!defaultAggregate) {\n                                throw new Error(\"There is no such aggregate function\");\n                            }\n\n                            measure.aggregate = defaultAggregate.aggregate || defaultAggregate;\n                            measure.result = defaultAggregate.result;\n                        }\n\n\n                        aggregators.push({\n                            descriptor: descriptor,\n                            caption: measure.caption,\n                            result: measure.result,\n                            aggregator: createAggregateGetter(measure)\n                        });\n                    }\n                }\n            } else {\n                aggregators.push({\n                    descriptor: { name: \"default\" },\n                    caption: \"default\",\n                    aggregator: function() { return 1; }\n                });\n            }\n\n            return aggregators;\n        },\n\n        _buildGetters: function(names) {\n            var result = {};\n            var parts;\n            var name;\n\n            for (var idx = 0; idx < names.length; idx++) {\n                name = names[idx];\n                parts = name.split(\"&\");\n\n                if (parts.length > 1) {\n                    result[parts[0]] = kendo.getter(parts[0], true);\n                } else {\n                    result[name] = kendo.getter(normalizeName(name), true);\n                }\n            }\n\n            return result;\n        },\n\n        _parseDescriptors: function(descriptors) {\n            var parsedDescriptors = parseDescriptors(descriptors);\n            var rootNames = getRootNames(parsedDescriptors.root);\n            var expanded = parsedDescriptors.expanded;\n            var result = [];\n\n            for (var idx = 0; idx < expanded.length; idx++) {\n                result.push(mapNames(expanded[idx].name, rootNames));\n            }\n\n            return {\n                root: rootNames,\n                expanded: result\n            };\n        },\n\n        _filter: function(data, filter) {\n            if (!filter) {\n                return data;\n            }\n\n            var expr;\n            var idx = 0;\n            var filters = filter.filters;\n\n            for (; idx < filters.length; idx++) {\n                expr = filters[idx];\n\n                if (expr.operator === \"in\") {\n                    filters[idx] = this._normalizeFilter(expr);\n                }\n            }\n\n            return new kendo.data.Query(data).filter(filter).data;\n        },\n\n        _normalizeFilter: function(filter) {\n            var value = filter.value.split(\",\");\n            var result = [];\n\n            if (!value.length) {\n                return value;\n            }\n\n            for (var idx = 0; idx < value.length; idx++) {\n                result.push({\n                    field: filter.field,\n                    operator: \"eq\",\n                    value: value[idx]\n                });\n            }\n\n            return {\n                logic: \"or\",\n                filters: result\n            };\n        },\n\n        process: function(data, options) {\n            data = data || [];\n            options = options || {};\n\n            data = this._filter(data, options.filter);\n\n            var measures = options.measures || [];\n\n            var measuresRowAxis = options.measuresAxis === \"rows\";\n\n            var columnDescriptors = options.columns || [];\n            var rowDescriptors = options.rows || [];\n\n            if (!columnDescriptors.length && rowDescriptors.length && (!measures.length || (measures.length && measuresRowAxis))) {\n                columnDescriptors = rowDescriptors;\n                rowDescriptors = [];\n                measuresRowAxis = false;\n            }\n\n            if (!columnDescriptors.length && !rowDescriptors.length) {\n                measuresRowAxis = false;\n            }\n\n            if (!columnDescriptors.length && measures.length) {\n                columnDescriptors = normalizeMembers(options.measures);\n            }\n\n            columnDescriptors = this._parseDescriptors(columnDescriptors);\n            rowDescriptors = this._parseDescriptors(rowDescriptors);\n\n            var aggregatedData = {};\n            var columns = {};\n            var rows = {};\n\n            var rowValue;\n            var state = { columnIndex: 0 };\n\n            var measureAggregators = this._measureAggregators(options);\n\n            var columnGetters = this._buildGetters(columnDescriptors.root);\n            var rowGetters = this._buildGetters(rowDescriptors.root);\n\n            var processed = false;\n\n            var expandedColumns = columnDescriptors.expanded;\n            var expandedRows = rowDescriptors.expanded;\n\n            var dataItem;\n            var aggregatorContext;\n            var hasExpandedRows = expandedRows.length !== 0;\n\n            var rowIdx, rowDescriptor, rowName, rowTotal;\n            var key, path, parentName, value;\n            var columnsInfo, rowsInfo;\n            var length = data.length;\n            var idx = 0;\n\n            if (columnDescriptors.root.length || rowDescriptors.root.length) {\n                processed = true;\n\n                for (idx = 0; idx < length; idx++) {\n                    dataItem = data[idx];\n\n                    aggregatorContext = {\n                        dataItem: dataItem,\n                        index: idx\n                    };\n\n                    rowTotal = aggregatedData[ROW_TOTAL_KEY] || {\n                        items: {},\n                        aggregates: {}\n                    };\n\n                    this._processColumns(measureAggregators, expandedColumns, columnGetters, columns, aggregatorContext, rowTotal, state, !hasExpandedRows);\n\n                    rowTotal.aggregates = this._calculateAggregate(measureAggregators, aggregatorContext, rowTotal);\n                    aggregatedData[ROW_TOTAL_KEY] = rowTotal;\n\n                    for (rowIdx = 0; rowIdx < expandedRows.length; rowIdx++) {\n                        rowDescriptor = expandedRows[rowIdx];\n\n                        if (!this._matchDescriptors(dataItem, rowDescriptor, rowGetters)) {\n                            this._processColumns(measureAggregators, expandedColumns, columnGetters, columns, aggregatorContext, { items: {}, aggregates: {} }, state, true);\n                            continue;\n                        }\n\n                        path = rowDescriptor.names.slice(0, rowDescriptor.expandedIdx).join(\"\");\n                        rowName = rowDescriptor.names[rowDescriptor.expandedIdx];\n\n                        parentName = rowName;\n\n                        rowValue = rowGetters[rowName](dataItem);\n                        rowValue = rowValue !== undefined$1 ? rowValue.toString() : rowValue;\n\n                        rowName = rowName + \"&\" + rowValue;\n                        key = path + rowName;\n\n                        rows[key] = {\n                            uniquePath: path + parentName,\n                            parentName: parentName,\n                            name: rowName,\n                            value: rowValue\n                        };\n\n                        value = aggregatedData[key] || {\n                            items: {},\n                            aggregates: {}\n                        };\n\n                        this._processColumns(measureAggregators, expandedColumns, columnGetters, columns, aggregatorContext, value, state, true);\n\n                        value.aggregates = this._calculateAggregate(measureAggregators, aggregatorContext, value);\n                        aggregatedData[key] = value;\n                    }\n                }\n            }\n\n            if (processed && length) {\n                if (measureAggregators.length > 1 && (!options.columns || !options.columns.length)) {\n                    columnDescriptors = {\n                        root: [],\n                        expanded: []\n                    };\n                }\n\n                columnsInfo = this._asTuples(columns, columnDescriptors, measuresRowAxis ? [] : measureAggregators, options.sort ? options.sort : []);\n                rowsInfo = this._asTuples(rows, rowDescriptors, measuresRowAxis ? measureAggregators : [], options.sort ? options.sort : []);\n\n                columns = columnsInfo.tuples;\n                rows = rowsInfo.tuples;\n\n                aggregatedData = this._toDataArray(aggregatedData, this._measuresInfo(measureAggregators, measuresRowAxis), rowsInfo.keys, columnsInfo.keys);\n            } else {\n                aggregatedData = columns = rows = [];\n            }\n\n            return {\n                axes: {\n                    columns: { tuples: columns },\n                    rows: { tuples: rows }\n                },\n                data: aggregatedData\n            };\n        }\n    });\n\n    var PivotTransport = Class.extend({\n        init: function(options, transport) {\n            this.transport = transport;\n            this.options = transport.options || {};\n\n            if (!this.transport.discover) {\n                if (isFunction(options.discover)) {\n                    this.discover = options.discover;\n                }\n            }\n        },\n        read: function(options) {\n            return this.transport.read(options);\n        },\n        update: function(options) {\n            return this.transport.update(options);\n        },\n        create: function(options) {\n            return this.transport.create(options);\n        },\n        destroy: function(options) {\n            return this.transport.destroy(options);\n        },\n        discover: function(options) {\n            if (this.transport.discover) {\n                return this.transport.discover(options);\n            }\n            options.success({});\n        },\n        catalog: function(val) {\n            var options = this.options || {};\n\n            if (val === undefined$1) {\n                return (options.connection || {}).catalog;\n\n            }\n\n            var connection = options.connection || {};\n            connection.catalog = val;\n\n            this.options.connection = connection;\n            $.extend(this.transport.options, { connection: connection });\n        },\n        cube: function(val) {\n            var options = this.options || {};\n\n            if (val === undefined$1) {\n                return (options.connection || {}).cube;\n            }\n\n            var connection = options.connection || {};\n            connection.cube = val;\n\n            this.options.connection = connection;\n            extend(true, this.transport.options, { connection: connection });\n        }\n    });\n\n    var PivotDataSourceV2 = DataSource.extend({\n        init: function(options) {\n\n            var cube = ((options || {}).schema || {}).cube;\n\n            var schema = {\n                axes: identity,\n                cubes: identity,\n                catalogs: identity,\n                measures: identity,\n                dimensions: identity,\n                hierarchies: identity,\n                levels: identity,\n                members: identity\n            };\n\n            if (cube) {\n                this.cubeSchema = $.extend(schema, this._cubeSchema(cube));\n            }\n\n            DataSource.fn.init.call(this, extend(true, {}, {\n                //schema: schema\n            }, options));\n\n            var transportOptions = this.options.transport || {};\n            if ((this.options.type || \"xmla\").toLowerCase() === \"xmla\") {\n                this._online = true;\n                this.transport = new XmlaTransportV2(transportOptions);\n            }\n\n            this._columns = normalizeMembers(this.options.columns);\n            this._rows = normalizeMembers(this.options.rows);\n\n            var measures = this.cubeSchema ? this.cubeSchema.measures() : this.options.measures || [];\n\n            if (toString.call(measures) === \"[object Object]\") {\n                this._measuresAxis = measures.axis || \"columns\";\n                measures = measures.values || [];\n            }\n\n            this._measures = normalizeMeasures(measures);\n        },\n\n        options: {\n            serverSorting: true,\n            serverPaging: true,\n            serverFiltering: true,\n            serverGrouping: true,\n            serverAggregates: true\n        },\n\n        axes: function() {\n            return {\n                columns: normalizeAxis(this.columns()),\n                rows: normalizeAxis(this.rows())\n            };\n        },\n\n        catalog: function(val) {\n            if (val === undefined$1) {\n                return this.transport.catalog();\n            }\n\n            this.transport.catalog(val);\n            this._mergeState({});// clears current state\n            this.read();\n        },\n\n        cube: function(val) {\n            if (val === undefined$1) {\n                return this.transport.cube();\n            }\n\n            this.transport.cube(val);\n            this._mergeState({});// clears current state\n            this.read();\n        },\n\n        measuresAxis: function() {\n            return this._measuresAxis || \"columns\";\n        },\n\n        fetch: function(callback) {\n            var that = this;\n            if (this._data === undefined$1 || this._data.length === 0) {\n                var fn = function() {\n                    if (isFunction(callback)) {\n                        callback.call(that);\n                    }\n                };\n\n                return this._query().done(fn);\n            }\n        },\n\n        _createSettings: function(axes) {\n            var settings = [];\n            var key;\n            var dimensions = this.cubeSchema.dimensionsSettings();\n            var displayValueFunc = function(item) { return item[this.key]; };\n            var sortValueFunc = function(value) { return value; };\n            for (var i = 0; i < axes.length; i++) {\n                key = axes[i].name[0];\n                settings.push({\n                    key: key,\n                    displayValue: displayValueFunc.bind({ key: key }),\n                    sortValue: sortValueFunc,\n                    caption: (dimensions[key] || {}).caption || key\n                });\n            }\n            return settings;\n        },\n\n        _cubeSchema: function(cube) {\n            return {\n                dimensionsSettings: function() {\n                    return cube.dimensions;\n                },\n                dimensions: function() {\n                    var result = [];\n                    var dimensions = cube.dimensions;\n\n                    for (var key in dimensions) {\n                        result.push({\n                            name: key,\n                            caption: dimensions[key].caption || key,\n                            uniqueName: key,\n                            defaultHierarchy: key,\n                            type: 1\n                        });\n                    }\n\n                    if (cube.measures) {\n                        result.push({\n                            name: MEASURES,\n                            caption: MEASURES,\n                            uniqueName: MEASURES,\n                            type: 2\n                        });\n                    }\n\n                    return result;\n                },\n                restoreMeasure: function(measures, measure) {\n                    for (var i = 0; i < measures.length; i++) {\n                        if (!measures[i].aggregate) {\n                            measures[i].aggregate = measure.aggregate;\n                            measures[i].value = measure.value;\n                            measures[i].caption = measure.caption;\n                            measures[i].uniqueName = measure.uniqueName;\n                            measures[i].type = 2;\n                        }\n                    }\n                },\n                measures: function() {\n                    var result = [];\n                    var measures = cube.measures;\n\n                    for (var key in measures) {\n                        result.push(createLocalMeasure(measures[key].field, key, measures[key].format, measures[key].aggregate));\n                    }\n\n                    return result;\n                },\n                memberType: function(name) {\n                    var getter = kendo.getter(normalizeName(name), true);\n                    var data = this.options.data || this._pristineData || [];\n                    if (!data.length) {\n                        return null;\n                    }\n\n                    return typeof getter(data[0]);\n                }.bind(this),\n                members: function(name) {\n                    var data = this.options.data || this._pristineData || [];\n                    var result = [];\n                    var distinct = {};\n                    var getter;\n                    var value;\n                    var idx = 0;\n\n                    if (name.indexOf(\"[(ALL)]\") !== -1) {\n                        return [\n                            {\n                                caption: cube.dimensions[name.split(\".\")[0]].caption || name,\n                                levelUniqueName: name,\n                                name: name,\n                                childrenCardinality: 1,\n                                uniqueName: name\n                            }\n                        ];\n                    }\n\n                    getter = kendo.getter(normalizeName(name), true);\n\n                    for (; idx < data.length; idx++) {\n                        value = getter(data[idx]);\n                        if ((value || value === 0 || value === false) && !distinct[value]) {\n                            distinct[value] = true;\n\n                            result.push({\n                                caption: value + \"\",\n                                name: value + \"\",\n                                childrenCardinality: 0,\n                                uniqueName: value\n                            });\n                        }\n                    }\n\n                    return result;\n                }.bind(this)\n            };\n        },\n\n        read: function(data) {\n            var that = this;\n            var isPrevented = that.trigger(REQUESTSTART, { type: READ });\n            var params = that._params(data);\n            var deferred = $.Deferred();\n            if (!isPrevented) {\n                that.trigger(PROGRESS);\n\n                if (that.options.data) {\n\n                    var originalData = (this.reader.data(this.options.data) || []).slice(0);\n                    if (originalData && !this._pristineData) {\n                        this._pristineData = originalData;\n                    }\n                    var columnSettings = that._createSettings(params.columnAxes);\n                    var rowSettings = that._createSettings(params.rowAxes);\n                    var measures = that.measures();\n                    var dataTree = createDataTree(that.options.data, rowSettings, columnSettings, measures, { dataField: \"aggregate\", columnsData: \"columns\" }, that.filter() || []);\n\n                    var stateArgs = {\n                        dataTree: dataTree,\n                        columnSettings: columnSettings,\n                        rowSettings: rowSettings,\n                        columnAxes: params.columnAxes,\n                        rowAxes: params.rowAxes,\n                        measures: measures.map(function(item) { return item; }).reverse(),\n                        fields: { dataField: \"aggregate\", columnsData: \"columns\" },\n                        sort: flattenSortDescriptors(params.sort || [])\n                    };\n\n                    that._saveState(createLocalDataState(stateArgs));\n                    that.trigger(CHANGE);\n                    deferred.resolve();\n                } else {\n                    that.transport.read({\n                        data: params,\n                        success: function(newDataState) {\n                            that._saveState(newDataState);\n                            that.trigger(REQUESTEND, { response: newDataState, type: READ });\n                            that.trigger(CHANGE);\n                            if (that._preventRefresh) {\n                                that._preventRefresh = false;\n                            }\n                            deferred.resolve();\n                        },\n                        error: function(err) {\n                            that.trigger(ERROR, { error: err });\n                        }\n                    });\n                }\n            }\n            return deferred.promise();\n        },\n\n        _params: function(data) {\n            var that = this;\n            var options = DataSource.fn._params.call(that, data);\n\n            options = extend({\n                columnAxes: JSON.parse(JSON.stringify(that._columns)),\n                rowAxes: JSON.parse(JSON.stringify(that._rows)),\n                measuresAxis: that.measuresAxis(),\n                measureAxes: that._measures\n            }, options);\n\n            if ((this.options.type || \"\").toLowerCase() === \"xmla\") {\n                options.connection = that.options.transport.connection;\n            }\n\n            if (options.filter) {\n                options.filter = normalizeFilter(options.filter);\n                options.filter = (options.filter || {}).filters;\n            }\n\n            if (options.sort) {\n                options.sort = normalizeSort(options.sort);\n            }\n\n            return options;\n        },\n\n        discover: function(options) {\n            var that = this,\n                transport = that.transport;\n\n            if (transport.discover) {\n                return transport.discover(options);\n            }\n        },\n\n        schemaMeasures: function() {\n            var that = this;\n            return that.discover(\n                {\n                    command: \"schemaMeasures\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube()\n                    }\n                }, function(response) {\n                    return response;\n                });\n        },\n\n        schemaKPIs: function() {\n            var that = this;\n\n            return that.discover(\n            {\n                command: \"schemaKPIs\",\n                restrictions: {\n                    catalogName: that.transport.catalog(),\n                    cubeName: that.transport.cube()\n                }\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaDimensions: function() {\n            var that = this;\n\n            return that.discover(\n            {\n                command: \"schemaDimensions\",\n                restrictions: {\n                    catalogName: that.transport.catalog(),\n                    cubeName: that.transport.cube()\n                }\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaHierarchies: function(dimensionName) {\n            var that = this;\n\n            return that.discover({\n               command: \"schemaHierarchies\",\n               restrictions: {\n                   catalogName: that.transport.catalog(),\n                   cubeName: that.transport.cube(),\n                   dimensionUniqueName: dimensionName\n               }\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaLevels: function(hierarchyName) {\n            var that = this;\n\n            return that.discover({\n                command: \"schemaLevels\",\n                restrictions: {\n                    catalogName: that.transport.catalog(),\n                    cubeName: that.transport.cube(),\n                    hierarchyUniqueName: hierarchyName\n                }\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaCubes: function() {\n            var that = this;\n\n            return that.discover({\n                command: \"schemaCubes\",\n                restrictions: {\n                    catalogName: that.transport.catalog()\n                }\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaCatalogs: function() {\n            var that = this;\n\n            return that.discover({\n                command: \"schemaCatalogs\"\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaMembers: function(restrictions) {\n            var that = this;\n\n            return that.discover({\n                command: \"schemaMembers\",\n                restrictions: extend({\n                   catalogName: that.transport.catalog(),\n                   cubeName: that.transport.cube()\n                }, restrictions)\n            }, function(response) {\n                return response;\n            });\n        },\n\n        _saveState: function(state) {\n            var that = this;\n\n            that._columnTuples = state.columns;\n            that._rowTuples = state.rows;\n            that._view = that._data = state.data;\n        },\n\n        columns: function(val) {\n            if (val === undefined$1) {\n                return this._columns;\n            }\n\n            this._columns = normalizeMembers(val);\n            this.read();\n        },\n\n        rows: function(val) {\n            if (val === undefined$1) {\n                return this._rows;\n            }\n\n            this._rows = normalizeMembers(val);\n\n            this.read();\n        },\n\n        measures: function(val) {\n            if (val === undefined$1) {\n                return this._measures;\n            }\n\n            this._measures = normalizeMeasures(val);\n\n            this.read();\n        },\n\n        _mergeState: function(options) {\n            options = DataSource.fn._mergeState.call(this, options);\n\n            return options;\n        },\n\n        _query: function(options) {\n            var that = this;\n            var params = extend({}, {\n                sort: that.sort(),\n                measuresAxis: that.measuresAxis(),\n                filter: that.filter()\n            }, options);\n            this._mergeState(params);\n\n            return this.read();\n        },\n    });\n\n    var PivotDataSource = DataSource.extend({\n        init: function(options) {\n            var cube = ((options || {}).schema || {}).cube;\n            var measuresAxis = \"columns\";\n            var measures;\n\n            var schema = {\n                axes: identity,\n                cubes: identity,\n                catalogs: identity,\n                measures: identity,\n                dimensions: identity,\n                hierarchies: identity,\n                levels: identity,\n                members: identity\n            };\n\n            if (cube) {\n                schema = $.extend(schema, this._cubeSchema(cube));\n                this.cubeBuilder = new PivotCubeBuilder(cube);\n            }\n\n            DataSource.fn.init.call(this, extend(true, {}, {\n                schema: schema\n            }, options));\n\n            this.transport = new PivotTransport(this.options.transport || {}, this.transport);\n\n            this._columns = normalizeMembers(this.options.columns);\n            this._rows = normalizeMembers(this.options.rows);\n\n            measures = this.options.measures || [];\n\n            if (toString.call(measures) === \"[object Object]\") {\n                measuresAxis = measures.axis || \"columns\";\n                measures = measures.values || [];\n            }\n\n            this._measures = normalizeMeasures(measures);\n            this._measuresAxis = measuresAxis;\n\n            this._skipNormalize = 0;\n            this._axes = {};\n        },\n\n        _cubeSchema: function(cube) {\n            return {\n                dimensions: function() {\n                    var result = [];\n                    var dimensions = cube.dimensions;\n\n                    for (var key in dimensions) {\n                        result.push({\n                            name: key,\n                            caption: dimensions[key].caption || key,\n                            uniqueName: key,\n                            defaultHierarchy: key,\n                            type: 1\n                        });\n                    }\n\n                    if (cube.measures) {\n                        result.push({\n                            name: MEASURES,\n                            caption: MEASURES,\n                            uniqueName: MEASURES,\n                            type: 2\n                        });\n                    }\n\n                    return result;\n                },\n                hierarchies: function() {\n                    return [];\n                },\n                measures: function() {\n                    var result = [];\n                    var measures = cube.measures;\n\n                    for (var key in measures) {\n                        result.push({\n                            name: key,\n                            caption: key,\n                            uniqueName: key,\n                            aggregator: key\n                        });\n                    }\n\n                    return result;\n                },\n                members: function(response, restrictions) {\n                    var name = restrictions.levelUniqueName || restrictions.memberUniqueName;\n                    var schemaData = this.options.schema.data;\n                    var dataGetter = isFunction(schemaData) ? schemaData : kendo.getter(schemaData, true);\n                    var data = (this.options.data && dataGetter(this.options.data)) || this._rawData || [];\n                    var result = [];\n                    var getter;\n                    var value;\n                    var idx = 0;\n                    var distinct = {};\n\n                    if (name) {\n                        name = name.split(\".\")[0];\n                    }\n\n                    if (!restrictions.treeOp) {\n                        result.push({\n                            caption: cube.dimensions[name].caption || name,\n                            childrenCardinality: \"1\",\n                            dimensionUniqueName: name,\n                            hierarchyUniqueName: name,\n                            levelUniqueName: name,\n                            name: name,\n                            uniqueName: name\n                        });\n\n                        return result;\n                    }\n\n                    getter = kendo.getter(normalizeName(name), true);\n\n                    for (; idx < data.length; idx++) {\n                        value = getter(data[idx]);\n                        if ((value || value === 0) && !distinct[value]) {\n                            distinct[value] = true;\n\n                            result.push({\n                                caption: value,\n                                childrenCardinality: \"0\",\n                                dimensionUniqueName: name,\n                                hierarchyUniqueName: name,\n                                levelUniqueName: name,\n                                name: value,\n                                uniqueName: value\n                            });\n                        }\n                    }\n\n                    return result;\n                }.bind(this)\n            };\n        },\n\n        options: {\n            serverSorting: true,\n            serverPaging: true,\n            serverFiltering: true,\n            serverGrouping: true,\n            serverAggregates: true\n        },\n\n        catalog: function(val) {\n            if (val === undefined$1) {\n                return this.transport.catalog();\n            }\n\n            this.transport.catalog(val);\n            this._mergeState({});// clears current state\n            this._axes = {};\n            this.data([]);\n        },\n\n        cube: function(val) {\n            if (val === undefined$1) {\n                return this.transport.cube();\n            }\n\n            this.transport.cube(val);\n            this._axes = {};\n            this._mergeState({});// clears current state\n            this.data([]);\n        },\n\n        axes: function() {\n            return this._axes;\n        },\n\n        columns: function(val) {\n            if (val === undefined$1) {\n                return this._columns;\n            }\n\n            this._skipNormalize += 1;\n            this._clearAxesData = true;\n\n            this._columns = normalizeMembers(val);\n            this.query({\n                columns: val,\n                rows: this.rowsAxisDescriptors(),\n                measures: this.measures(),\n                sort: this.sort(),\n                filter: this.filter()\n            });\n        },\n\n        rows: function(val) {\n            if (val === undefined$1) {\n                return this._rows;\n            }\n\n            this._skipNormalize += 1;\n            this._clearAxesData = true;\n\n            this._rows = normalizeMembers(val);\n\n            this.query({\n                columns: this.columnsAxisDescriptors(),\n                rows: val,\n                measures: this.measures(),\n                sort: this.sort(),\n                filter: this.filter()\n            });\n        },\n\n        measures: function(val) {\n            if (val === undefined$1) {\n                return this._measures;\n            }\n\n            this._skipNormalize += 1;\n            this._clearAxesData = true;\n\n            this.query({\n                columns: this.columnsAxisDescriptors(),\n                rows: this.rowsAxisDescriptors(),\n                measures: normalizeMeasures(val),\n                sort: this.sort(),\n                filter: this.filter()\n            });\n        },\n\n        measuresAxis: function() {\n            return this._measuresAxis || \"columns\";\n        },\n\n        _expandPath: function(path, axis) {\n            var origin = axis === \"columns\" ? \"columns\" : \"rows\";\n            var other = axis === \"columns\" ? \"rows\" : \"columns\";\n\n            var members = normalizeMembers(path);\n            var memberToExpand = getName(members[members.length - 1]);\n\n            this._lastExpanded = origin;\n\n            members = descriptorsForMembers(this.axes()[origin], members, this.measures());\n\n            for (var idx = 0; idx < members.length; idx++) {\n                var memberName = getName(members[idx]);\n\n                if (memberName === memberToExpand) {\n                    if (members[idx].expand) {\n                        return;\n                    }\n                    members[idx].expand = true;\n                } else {\n                    members[idx].expand = false;\n                }\n            }\n\n            var descriptors = {};\n            descriptors[origin] = members;\n            descriptors[other] = this._descriptorsForAxis(other);\n\n            this._query(descriptors);\n        },\n\n        _descriptorsForAxis: function(axis) {\n            var axes = this.axes();\n            var descriptors = this[axis]() || [];\n\n            if (axes && axes[axis] && axes[axis].tuples && axes[axis].tuples[0]) {\n                descriptors = descriptorsForAxes(axes[axis].tuples || []);\n            }\n            return descriptors;\n        },\n\n        columnsAxisDescriptors: function() {\n            return this._descriptorsForAxis(\"columns\");\n        },\n\n        rowsAxisDescriptors: function() {\n            return this._descriptorsForAxis(\"rows\");\n        },\n\n        _process: function(data, e) {\n            this._view = data;\n\n            e = e || {};\n            e.items = e.items || this._view;\n\n            this.trigger(CHANGE, e);\n        },\n\n        _query: function(options) {\n            var that = this;\n\n            if (!options) {\n                this._skipNormalize += 1;\n                this._clearAxesData = true;\n            }\n\n            return that.query(extend({}, {\n                page: that.page(),\n                pageSize: that.pageSize(),\n                sort: that.sort(),\n                filter: that.filter(),\n                group: that.group(),\n                aggregate: that.aggregate(),\n                columns: this.columnsAxisDescriptors(),\n                rows: this.rowsAxisDescriptors(),\n                measures: this.measures()\n            }, options));\n        },\n\n        query: function(options) {\n            var state = this._mergeState(options);\n\n            if (this._data.length && this.cubeBuilder) {\n                this._params(state);\n                this._updateLocalData(this._pristineData);\n\n                return $.Deferred().resolve().promise();\n            }\n\n            return this.read(state);\n        },\n\n        _mergeState: function(options) {\n            options = DataSource.fn._mergeState.call(this, options);\n\n            if (options !== undefined$1) {\n                this._measures = normalizeMeasures(options.measures);\n\n                if (options.columns) {\n                    options.columns = normalizeMembers(options.columns);\n                } else if (!options.columns) {\n                    this._columns = [];\n                }\n\n                if (options.rows) {\n                    options.rows = normalizeMembers(options.rows);\n                } else if (!options.rows) {\n                    this._rows = [];\n                }\n            }\n            return options;\n        },\n\n        filter: function(val) {\n            if (val === undefined$1) {\n                return this._filter;\n            }\n\n            this._skipNormalize += 1;\n            this._clearAxesData = true;\n            this._query({ filter: val, page: 1 });\n        },\n\n        expandColumn: function(path) {\n            this._expandPath(path, \"columns\");\n        },\n\n        expandRow: function(path) {\n            this._expandPath(path, \"rows\");\n        },\n\n        success: function(data) {\n            var originalData;\n            if (this.cubeBuilder) {\n                originalData = (this.reader.data(data) || []).slice(0);\n            }\n            DataSource.fn.success.call(this, data);\n            if (originalData) {\n                this._pristineData = originalData;\n            }\n        },\n\n        _processResult: function(data, axes) {\n            if (this.cubeBuilder) {\n                var processedData = this.cubeBuilder.process(data, this._requestData);\n\n                data = processedData.data;\n                axes = processedData.axes;\n            }\n\n            var columnIndexes, rowIndexes;\n            var tuples, resultAxis, measures, axisToSkip;\n            var columnDescriptors = this.columns();\n            var rowDescriptors = this.rows();\n            var hasColumnTuples = axes.columns && axes.columns.tuples;\n\n            if (!columnDescriptors.length && rowDescriptors.length && hasColumnTuples && (this._rowMeasures().length || !this.measures().length)) {\n                axes = {\n                    columns: {},\n                    rows: axes.columns\n                };\n            }\n\n            if (!columnDescriptors.length && !rowDescriptors.length && this.measuresAxis() === \"rows\" && hasColumnTuples) {\n                axes = {\n                    columns: {},\n                    rows: axes.columns\n                };\n            }\n\n            this._axes = {\n                columns: normalizeAxis(this._axes.columns),\n                rows: normalizeAxis(this._axes.rows)\n            };\n\n            axes = {\n                columns: normalizeAxis(axes.columns),\n                rows: normalizeAxis(axes.rows)\n            };\n\n            columnIndexes = this._normalizeTuples(axes.columns.tuples, this._axes.columns.tuples, columnDescriptors, this._columnMeasures());\n            rowIndexes = this._normalizeTuples(axes.rows.tuples, this._axes.rows.tuples, rowDescriptors, this._rowMeasures());\n\n            if (this._skipNormalize > 0) {\n                this._skipNormalize -= 1;\n            }\n\n            if (!this.cubeBuilder) {\n                data = this._normalizeData({\n                    columnsLength: axes.columns.tuples.length,\n                    rowsLength: axes.rows.tuples.length,\n                    columnIndexes: columnIndexes,\n                    rowIndexes: rowIndexes,\n                    data: data\n                });\n            }\n\n            if (this._lastExpanded == \"rows\") {\n                tuples = axes.columns.tuples;\n                measures = this._columnMeasures();\n                resultAxis = validateAxis(axes.columns, this._axes.columns, measures);\n\n                if (resultAxis) {\n                    axisToSkip = \"columns\";\n                    axes.columns = resultAxis;\n                    adjustDataByColumn(tuples, resultAxis.tuples, axes.rows.tuples.length, measures, data);\n                    if (!this.cubeBuilder) {\n                        data = this._normalizeData({\n                            columnsLength: membersCount(axes.columns.tuples, measures),\n                            rowsLength: axes.rows.tuples.length,\n                            data: data\n                        });\n                    }\n                }\n            } else if (this._lastExpanded == \"columns\") {\n                tuples = axes.rows.tuples;\n                measures = this._rowMeasures();\n                resultAxis = validateAxis(axes.rows, this._axes.rows, measures);\n\n                if (resultAxis) {\n                    axisToSkip = \"rows\";\n                    axes.rows = resultAxis;\n                    adjustDataByRow(tuples, resultAxis.tuples, axes.columns.tuples.length, measures, data);\n\n                    if (!this.cubeBuilder) {\n                        data = this._normalizeData({\n                            columnsLength: membersCount(axes.rows.tuples, measures),\n                            rowsLength: axes.columns.tuples.length,\n                            data: data\n                        });\n                    }\n                }\n            }\n\n            this._lastExpanded = null;\n\n            var result = this._mergeAxes(axes, data, axisToSkip);\n            this._axes = result.axes;\n\n            return result.data;\n        },\n\n        _readData: function(data) {\n            var axes = this.reader.axes(data);\n            var newData = this.reader.data(data);\n\n            if (this.cubeBuilder) {\n                this._rawData = newData;\n            }\n\n            return this._processResult(newData, axes);\n        },\n\n        _createTuple: function(tuple, measure, buildRoot) {\n            var members = tuple.members;\n            var length = members.length;\n            var root = { members: [] };\n            var levelName, levelNum;\n            var name, parentName;\n            var hasChildren;\n            var hierarchy;\n            var caption;\n            var member;\n            var idx = 0;\n\n            if (measure) {\n                length -= 1;\n            }\n\n            for (; idx < length; idx++) {\n                member = members[idx];\n                levelNum = Number(member.levelNum);\n\n                name = member.name;\n                parentName = member.parentName;\n                caption = member.caption || name;\n                hasChildren = member.hasChildren;\n                hierarchy = member.hierarchy;\n                levelName = member.levelName;\n\n                if (buildRoot) {\n                    caption = \"All\";\n                    if (levelNum === 0) {\n                        parentName = member.name;\n                    } else {\n                        levelNum -= 1;\n                    }\n\n                    hasChildren = true;\n                    name = hierarchy = levelName = parentName;\n                }\n\n                root.members.push({\n                    name: name,\n                    children: [],\n                    caption: caption,\n                    levelName: levelName,\n                    levelNum: levelNum.toString(),\n                    hasChildren: hasChildren,\n                    hierarchy: hierarchy,\n                    parentName: !buildRoot ? parentName : \"\"\n                });\n            }\n\n            if (measure) {\n                root.members.push({\n                    name: measure.name,\n                    children: []\n                });\n            }\n\n            return root;\n        },\n\n        _hasRoot: function(target, source, descriptors) {\n            if (source.length) {\n                return findExistingTuple(source, target).tuple;\n            }\n\n            var members = target.members;\n            var member;\n            var descriptor;\n\n            var isRoot = true;\n            var levelNum;\n\n            for (var idx = 0, length = members.length; idx < length; idx++) {\n                member = members[idx];\n                levelNum = Number(member.levelNum) || 0;\n                descriptor = descriptors[idx];\n\n                if (!(levelNum === 0 || (descriptor && member.name === getName(descriptor)))) {\n                    isRoot = false;\n                    break;\n                }\n            }\n\n            return isRoot;\n        },\n\n        _mergeAxes: function(sourceAxes, data, axisToSkip) {\n            var columnMeasures = this._columnMeasures();\n            var rowMeasures = this._rowMeasures();\n            var axes = this.axes();\n            var startIndex, tuples;\n\n            var oldRowsLength = membersCount(axes.rows.tuples, rowMeasures);\n            var newRowsLength = sourceAxes.rows.tuples.length;\n\n            var oldColumnsLength = membersCount(axes.columns.tuples, columnMeasures);\n            var newColumnsLength = sourceAxes.columns.tuples.length;\n\n            if (axisToSkip == \"columns\") {\n                newColumnsLength = oldColumnsLength;\n                tuples = sourceAxes.columns.tuples;\n            } else {\n                tuples = parseSource(sourceAxes.columns.tuples, columnMeasures);\n                data = prepareDataOnColumns(tuples, data);\n            }\n\n            var mergedColumns = mergeTuples(axes.columns.tuples, tuples, columnMeasures);\n\n            if (axisToSkip == \"rows\") {\n                newRowsLength = membersCount(sourceAxes.rows.tuples, rowMeasures);\n                tuples = sourceAxes.rows.tuples;\n            } else {\n                tuples = parseSource(sourceAxes.rows.tuples, rowMeasures);\n                data = prepareDataOnRows(tuples, data);\n            }\n            var mergedRows = mergeTuples(axes.rows.tuples, tuples, rowMeasures);\n\n            axes.columns.tuples = mergedColumns.tuples;\n            axes.rows.tuples = mergedRows.tuples;\n\n            if (oldColumnsLength !== membersCount(axes.columns.tuples, columnMeasures)) {\n                //columns are expanded\n                startIndex = mergedColumns.index + findDataIndex(mergedColumns.parsedRoot, mergedColumns.memberIndex, columnMeasures);\n                var offset = oldColumnsLength + newColumnsLength;\n                data = this._mergeColumnData(data, startIndex, newRowsLength, newColumnsLength, offset);\n            } else if (oldRowsLength !== membersCount(axes.rows.tuples, rowMeasures)) {\n                //rows are expanded\n                startIndex = mergedRows.index + findDataIndex(mergedRows.parsedRoot, mergedRows.memberIndex, rowMeasures);\n                data = this._mergeRowData(data, startIndex, newRowsLength, newColumnsLength);\n            }\n\n            if (axes.columns.tuples.length === 0 && axes.rows.tuples.length === 0) {\n                data = [];\n            }\n\n            return {\n                axes: axes,\n                data: data\n            };\n        },\n\n        _mergeColumnData: function(newData, columnIndex, rowsLength, columnsLength, offset) {\n            var data = this.data().toJSON();\n            var rowIndex, index, drop = 0, toAdd;\n            var columnMeasures = Math.max(this._columnMeasures().length, 1);\n\n            rowsLength = Math.max(rowsLength, 1);\n\n            if (data.length > 0) {\n                //if there is already data, drop the first new data item\n                drop = columnMeasures;\n                offset -= columnMeasures;\n            }\n\n            for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n                index = columnIndex + (rowIndex * offset);\n                toAdd = newData.splice(0, columnsLength);\n                toAdd.splice(0, drop);\n                [].splice.apply(data, [index, 0].concat(toAdd));\n            }\n\n            return data;\n        },\n\n        _mergeRowData: function(newData, rowIndex, rowsLength, columnsLength) {\n            var data = this.data().toJSON();\n            var idx, dataIndex, toAdd;\n            var rowMeasures = Math.max(this._rowMeasures().length, 1);\n\n            columnsLength = Math.max(columnsLength, 1);\n            if (data.length > 0) {\n                //if there is already data, drop the first new data item\n                rowsLength -= rowMeasures;\n                newData.splice(0, columnsLength * rowMeasures);\n            }\n\n            for (idx = 0; idx < rowsLength; idx++) {\n                toAdd = newData.splice(0, columnsLength);\n                dataIndex = (rowIndex * columnsLength) + (idx * columnsLength);\n                [].splice.apply(data, [dataIndex, 0].concat(toAdd));\n            }\n\n            return data;\n        },\n\n        _columnMeasures: function() {\n            var measures = this.measures();\n            var columnMeasures = [];\n\n            if (this.measuresAxis() === \"columns\") {\n                if (this.columns().length === 0) {\n                    columnMeasures = measures;\n                } else if (measures.length > 1) {\n                    columnMeasures = measures;\n                }\n            }\n\n            return columnMeasures;\n        },\n\n        _rowMeasures: function() {\n            var measures = this.measures();\n            var rowMeasures = [];\n\n            if (this.measuresAxis() === \"rows\") {\n                if (this.rows().length === 0) {\n                    rowMeasures = measures;\n                } else if (measures.length > 1) {\n                    rowMeasures = measures;\n                }\n            }\n\n            return rowMeasures;\n        },\n\n        _updateLocalData: function(data, state) {\n            if (this.cubeBuilder) {\n                if (state) {\n                    this._requestData = state;\n                }\n                data = this._processResult(data);\n            }\n\n            this._data = this._observe(data);\n\n            this._ranges = [];\n            this._addRange(this._data);\n\n            this._total = this._data.length;\n            this._pristineTotal = this._total;\n            this._process(this._data);\n        },\n\n        data: function(value) {\n            var that = this;\n            if (value !== undefined$1) {\n                this._pristineData = value.slice(0);\n                this._updateLocalData(value, {\n                        columns: this.columns(),\n                        rows: this.rows(),\n                        measures: this.measures()\n                    });\n            } else {\n                return that._data;\n            }\n        },\n\n        _normalizeTuples: function(tuples, source, descriptors, measures) {\n            var length = measures.length || 1;\n            var idx = 0;\n\n            var roots = [];\n            var indexes = {};\n            var measureIdx = 0;\n            var tuple, memberIdx, last;\n\n            if (!tuples.length) {\n                return;\n            }\n\n            if (this._skipNormalize <= 0 && !this._hasRoot(tuples[0], source, descriptors)) {\n                this._skipNormalize = 0;\n                for (; idx < length; idx++) {\n                    roots.push(this._createTuple(tuples[0], measures[idx], true));\n                    indexes[idx] = idx;\n                }\n\n                tuples.splice.apply(tuples, [0, tuples.length].concat(roots).concat(tuples));\n                idx = length;\n            }\n\n            if (measures.length) {\n                last = tuple = tuples[idx];\n                memberIdx = tuple.members.length - 1;\n\n                while (tuple) {\n                    if (measureIdx >= length) {\n                        measureIdx = 0;\n                    }\n\n                    if (tuple.members[memberIdx].name !== measures[measureIdx].name) {\n                        tuples.splice(idx, 0, this._createTuple(tuple, measures[measureIdx]));\n                        indexes[idx] = idx;\n                    }\n\n                    idx += 1;\n                    measureIdx += 1;\n                    tuple = tuples[idx];\n\n                    if (length > measureIdx && (!tuple || tupleName(last, memberIdx - 1) !== tupleName(tuple, memberIdx - 1))) {\n                        for (; measureIdx < length; measureIdx++) {\n                            tuples.splice(idx, 0, this._createTuple(last, measures[measureIdx]));\n                            indexes[idx] = idx;\n                            idx += 1;\n                        }\n                        tuple = tuples[idx];\n                    }\n                    last = tuple;\n                }\n            }\n\n            return indexes;\n        },\n\n        _addMissingDataItems: function(result, metadata) {\n            while (metadata.rowIndexes[parseInt(result.length / metadata.columnsLength, 10)] !== undefined$1) {\n                for (var idx = 0; idx < metadata.columnsLength; idx++) {\n                    result = addEmptyDataItem(result);\n                }\n            }\n\n            while (metadata.columnIndexes[result.length % metadata.columnsLength] !== undefined$1) {\n                result = addEmptyDataItem(result);\n            }\n\n            return result;\n        },\n\n        _normalizeOrdinals: function(result, dataItem, metadata) {\n            var lastOrdinal = metadata.lastOrdinal;\n\n            if (!dataItem) {\n                return addEmptyDataItem(result);\n            }\n\n            if ((dataItem.ordinal - lastOrdinal) > 1) {\n                lastOrdinal += 1;\n\n                while (lastOrdinal < dataItem.ordinal && result.length < metadata.length) {\n                    result = this._addMissingDataItems(addEmptyDataItem(result), metadata);\n                    lastOrdinal += 1;\n                }\n            }\n\n            dataItem.ordinal = result.length;\n            result[result.length] = dataItem;\n\n            return result;\n        },\n\n        _normalizeData: function(options) {\n            var data = options.data;\n            var dataIdx = 0;\n            var dataItem;\n            var result = [];\n            var lastOrdinal;\n            var length;\n\n            options.lastOrdinal = 0;\n            options.columnIndexes = options.columnIndexes || {};\n            options.rowIndexes = options.rowIndexes || {};\n            options.columnsLength = options.columnsLength || 1;\n            options.rowsLength = options.rowsLength || 1;\n            options.length = options.columnsLength * options.rowsLength;\n            length = options.length;\n\n            if (data.length === length) {\n                return data;\n            }\n\n            while (result.length < length) {\n                dataItem = data[dataIdx++];\n                if (dataItem) {\n                    lastOrdinal = dataItem.ordinal;\n                }\n\n                result = this._normalizeOrdinals(this._addMissingDataItems(result, options), dataItem, options);\n\n                options.lastOrdinal = lastOrdinal;\n            }\n\n            return result;\n        },\n\n        discover: function(options, converter) {\n            var that = this,\n                transport = that.transport;\n\n            return $.Deferred(function(deferred) {\n                transport.discover(extend({\n                    success: function(response) {\n                       response = that.reader.parse(response);\n\n                        if (that._handleCustomErrors(response)) {\n                            return;\n                        }\n\n                        if (converter) {\n                            response = converter(response);\n                        }\n                        deferred.resolve(response);\n                    },\n                    error: function(response, status, error) {\n                        deferred.reject(response);\n                        that.error(response, status, error);\n                    }\n                }, options));\n            }).promise().done(function() {\n                that.trigger(\"schemaChange\");\n            });\n        },\n\n        schemaMeasures: function() {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaMeasures\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube()\n                    }\n                }\n            }, function(response) {\n                return that.reader.measures(response);\n            });\n        },\n\n        schemaKPIs: function() {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaKPIs\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube()\n                    }\n                }\n            }, function(response) {\n                return that.reader.kpis(response);\n            });\n        },\n\n        schemaDimensions: function() {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaDimensions\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube()\n                    }\n                }\n            }, function(response) {\n                return that.reader.dimensions(response);\n            });\n        },\n\n        schemaHierarchies: function(dimensionName) {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaHierarchies\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube(),\n                        dimensionUniqueName: dimensionName\n                    }\n                }\n            }, function(response) {\n                return that.reader.hierarchies(response);\n            });\n        },\n\n        schemaLevels: function(hierarchyName) {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaLevels\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube(),\n                        hierarchyUniqueName: hierarchyName\n                    }\n                }\n            }, function(response) {\n                return that.reader.levels(response);\n            });\n        },\n\n        schemaCubes: function() {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaCubes\",\n                    restrictions: {\n                        catalogName: that.transport.catalog()\n                    }\n                }\n            }, function(response) {\n                return that.reader.cubes(response);\n            });\n        },\n\n        schemaCatalogs: function() {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaCatalogs\"\n                }\n            }, function(response) {\n                return that.reader.catalogs(response);\n            });\n        },\n\n        schemaMembers: function(restrictions) {\n            var that = this;\n            var success = (function(restrictions) {\n                return function(response) {\n                    return that.reader.members(response, restrictions);\n                };\n            }(restrictions));\n\n            return that.discover({\n                data: {\n                    command: \"schemaMembers\",\n                    restrictions: extend({\n                       catalogName: that.transport.catalog(),\n                       cubeName: that.transport.cube()\n                   }, restrictions)\n                }\n            }, success);\n        },\n\n        _params: function(data) {\n            if (this._clearAxesData) {\n                this._axes = {};\n                this._data = this._observe([]);\n                this._clearAxesData = false;\n                this.trigger(STATERESET);\n            }\n\n            var options = DataSource.fn._params.call(this, data);\n\n            options = extend({\n                measures: this.measures(),\n                measuresAxis: this.measuresAxis(),\n                columns: this.columns(),\n                rows: this.rows()\n            }, options);\n\n            if (this.cubeBuilder) {\n                this._requestData = options;\n            }\n\n            return options;\n        }\n    });\n\n    function flatColumns(columns) {\n        var result = [];\n        for (var idx = 0; idx < columns.length; idx++) {\n            result.push(columns[idx]);\n            if (columns[idx].children) {\n                result = result.concat(flatColumns(columns[idx].children));\n            }\n        }\n\n        return result;\n    }\n\n    function sortItemsTree(field, items, sortFunction) {\n        for (var i = 0; i < items.length; i++) {\n            if (items[i].children && items[i].children.length) {\n                sortItemsTree(field, items[i].children, sortFunction);\n            }\n        }\n        if (items[0].parentName != field) {\n            return;\n        }\n        items = items.sort(sortFunction);\n    }\n\n    function fillSortTree(items, map) {\n        for (var i = 0; i < items.length; i++) {\n            var currentItem = map[items[i].name];\n\n            if (!$.isEmptyObject(currentItem.childrenMap)) {\n                items[i].children = [];\n                for (var name in currentItem.childrenMap) {\n                    items[i].children.push($.extend({}, { name: name, parentName: map[name].parentName }));\n                }\n\n                fillSortTree(items[i].children, map);\n            }\n        }\n    }\n\n    function addEmptyDataItem(result) {\n        result[result.length] = { value: \"\", fmtValue: \"\", ordinal: result.length };\n        return result;\n    }\n\n    function validateAxis(newAxis, axis, measures) {\n        if (newAxis.tuples.length < membersCount(axis.tuples, measures)) {\n\n            return axis;\n        }\n\n        return;\n    }\n\n    function adjustDataByColumn(sourceTuples, targetTuples, rowsLength, measures, data) {\n        var columnIdx, rowIdx, dataIdx;\n        var columnsLength = sourceTuples.length;\n        var targetColumnsLength = membersCount(targetTuples, measures);\n        var measuresLength = measures.length || 1;\n\n        for (rowIdx = 0; rowIdx < rowsLength; rowIdx++) {\n            for (columnIdx = 0; columnIdx < columnsLength; columnIdx++) {\n                dataIdx = tupleIndex(sourceTuples[columnIdx], targetTuples) * measuresLength;\n                dataIdx += columnIdx % measuresLength;\n\n                data[rowIdx * columnsLength + columnIdx].ordinal = rowIdx * targetColumnsLength + dataIdx;\n            }\n        }\n    }\n\n    function adjustDataByRow(sourceTuples, targetTuples, columnsLength, measures, data) {\n        var columnIdx, rowIdx, dataIdx;\n        var rowsLength = sourceTuples.length;\n        var measuresLength = measures.length || 1;\n\n        for (rowIdx = 0; rowIdx < rowsLength; rowIdx++) {\n            dataIdx = tupleIndex(sourceTuples[rowIdx], targetTuples);\n            dataIdx *= measuresLength;\n            dataIdx += rowIdx % measuresLength;\n\n            for (columnIdx = 0; columnIdx < columnsLength; columnIdx++) {\n                data[rowIdx * columnsLength + columnIdx].ordinal = dataIdx * columnsLength + columnIdx;\n            }\n        }\n    }\n\n    function tupleIndex(tuple, collection) {\n        return findExistingTuple(collection, tuple).index;\n    }\n\n    function membersCount(tuples, measures) {\n        if (!tuples.length) {\n            return 0;\n        }\n\n        var queue = tuples.slice();\n        var current = queue.shift();\n        var result = 1;\n\n        while (current) {\n            if (current.members) {\n                [].push.apply(queue, current.members);\n            } else if (current.children) {\n                if (!current.measure) {\n                    result += current.children.length;\n                }\n                [].push.apply(queue, current.children);\n            }\n\n            current = queue.shift();\n        }\n\n        if (measures.length) {\n            result = result * measures.length;\n        }\n\n        return result;\n    }\n\n    function normalizeAxis(axis) {\n        if (!axis) {\n            axis = {\n                tuples: []\n            };\n        }\n\n        if (!axis.tuples) {\n            axis.tuples = [];\n        }\n\n        return axis;\n    }\n\n    function findDataIndex(tuple, memberIndex, measures) {\n        if (!tuple) {\n            return 0;\n        }\n\n        var measuresLength = Math.max(measures.length, 1);\n        var tuples = tuple.members.slice(0, memberIndex);\n        var current = tuples.shift();\n\n        //the initial value is equal to the total number of measures\n        //as the measures member is not extracted from the members of the starting tuple\n        //but should be calculated in the final result\n        var counter = measuresLength;\n\n        while (current) {\n            if (current.name === MEASURES) {\n                //subtract 1 as the measures member has been already counted as a single standard member\n                //but we are interested in the total number of measures instead\n                counter += (measuresLength - 1);\n            } else if (current.children) {\n                //is member\n                [].push.apply(tuples, current.children);\n            } else {\n                //is tuple\n                counter ++;\n                [].push.apply(tuples, current.members);\n            }\n\n            current = tuples.shift();\n        }\n\n        return counter;\n    }\n\n    function mergeTuples(target, source, measures) {\n        if (!source[0]) {\n            return {\n                parsedRoot: null,\n                tuples: target,\n                memberIndex: 0,\n                index: 0\n            };\n        }\n\n        var result = findExistingTuple(target, source[0]);\n\n        if (!result.tuple) {\n            return {\n                parsedRoot: null,\n                tuples: source,\n                memberIndex: 0,\n                index: 0\n            };\n        }\n\n        var targetMembers = result.tuple.members;\n        var sourceMembers = source[0].members;\n        var memberIndex = -1;\n\n        if (targetMembers.length !== sourceMembers.length) {\n            return {\n                parsedRoot: null,\n                tuples: source,\n                memberIndex: 0,\n                index: 0\n            };\n        }\n\n        for (var idx = 0, length = targetMembers.length; idx < length; idx++) {\n            if (!targetMembers[idx].measure && sourceMembers[idx].children[0]) {\n                if (memberIndex == -1 && sourceMembers[idx].children.length) {\n                    memberIndex = idx;\n                }\n\n                targetMembers[idx].children = sourceMembers[idx].children;\n            }\n        }\n\n        measures = Math.max(measures.length, 1);\n\n        return {\n            parsedRoot: result.tuple,\n            index: result.index * measures,\n            memberIndex: memberIndex,\n            tuples: target\n        };\n    }\n\n    function equalTuples(first, second) {\n        var equal = true;\n        var idx, length;\n\n        first = first.members;\n        second = second.members;\n\n        for (idx = 0, length = first.length; idx < length; idx++) {\n            if (first[idx].measure || second[idx].measure) {\n                continue;\n            }\n\n            equal = equal && (getName(first[idx]) === getName(second[idx]));\n        }\n\n        return equal;\n    }\n\n    function findExistingTuple(tuples, toFind) {\n        var idx, length, tuple, found, counter = 0;\n        var memberIndex, membersLength, member;\n\n        for (idx = 0, length = tuples.length; idx < length; idx++) {\n            tuple = tuples[idx];\n            if (equalTuples(tuple, toFind)) {\n                return {\n                    tuple: tuple,\n                    index: counter\n                };\n            }\n\n            counter ++;\n\n            for (memberIndex = 0, membersLength = tuple.members.length; memberIndex < membersLength; memberIndex++) {\n                member = tuple.members[memberIndex];\n                if (member.measure) {\n                    //counter += member.children.length;\n                    continue;\n                }\n                found = findExistingTuple(member.children, toFind);\n                counter += found.index;\n                if (found.tuple) {\n                    return {\n                        tuple: found.tuple,\n                        index: counter\n                    };\n                }\n            }\n        }\n\n        return {\n            index: counter\n        };\n    }\n\n    function addMembers(members, map) {\n        var member, i, len, path = \"\";\n        for (i = 0, len = members.length; i < len; i++) {\n            member = members[i];\n            path += member.name;\n            if (!map[path]) {\n                map[path] = member;\n            }\n        }\n    }\n\n\n    function findParentMember(tuple, map) {\n        var members = tuple.members;\n        var i, len, member, path = \"\";\n        var parentPath = \"\";\n        var parentMember;\n\n        for (i = 0, len = members.length; i < len; i++) {\n            member = members[i];\n            if (parentMember) {\n                if (map[path + member.name]) {\n                    path += member.name;\n                    parentMember = map[path];\n                    continue;\n                } else if (map[path + member.parentName]) {\n                    return map[path + member.parentName];\n                } else if (map[parentPath + member.parentName]) {\n                    return map[parentPath + member.parentName];\n                } else {\n                    return map[parentPath];\n                }\n            }\n\n            path += member.name;\n            parentMember = map[member.parentName];\n\n            if (!parentMember) {\n                parentMember = map[path];\n                if (!parentMember) {\n                    return null;\n                }\n            }\n\n            if (parentMember) {\n                parentPath += parentMember.name;\n            }\n        }\n\n        return parentMember;\n    }\n\n    function measurePosition(tuple, measures) {\n        if (measures.length === 0) {\n            return -1;\n        }\n\n        var measure = measures[0];\n        var members = tuple.members;\n        for (var idx = 0, len = members.length; idx < len; idx ++) {\n            if (members[idx].name == measure.name) {\n                return idx;\n            }\n        }\n    }\n\n    function normalizeTupleMeasures(tuple, index) {\n        if (index < 0) {\n            return;\n        }\n        var member = {\n            name: MEASURES,\n            measure: true,\n            children: [\n                $.extend({ members: [], dataIndex: tuple.dataIndex }, tuple.members[index])\n            ]\n        };\n        tuple.members.splice(index, 1, member);\n        tuple.dataIndex = undefined$1;\n    }\n\n    function parseSource(tuples, measures) {\n        if (tuples.length < 1) {\n            return [];\n        }\n        var result = [];\n        var map = { };\n        var measureIndex = measurePosition(tuples[0], measures);\n\n        for (var i = 0; i < tuples.length; i++) {\n            var tuple = tuples[i];\n\n            //keep the old data index of the tuple\n            tuple.dataIndex = i;\n\n            normalizeTupleMeasures(tuple, measureIndex);\n            var parentMember = findParentMember(tuple, map);\n\n            if (parentMember) {\n                if (measureIndex < 0 || !parentMember.measure) {\n                    parentMember.children.push(tuple);\n                } else {\n                    parentMember.children.push(tuple.members[measureIndex].children[0]);\n                }\n            } else {\n                result.push(tuple);\n            }\n\n            addMembers(tuple.members, map);\n        }\n\n        return result;\n    }\n\n    function prepareDataOnRows(tuples, data) {\n        if (!tuples || !tuples.length) {\n            return data;\n        }\n\n        var result = [];\n        var indices = buildDataIndices(tuples);\n        var rowsLength = indices.length;\n        var columnsLength = Math.max(data.length / rowsLength, 1);\n        var rowIndex, columnIndex, targetIndex, sourceIndex;\n        var calcIndex;\n\n        for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n            targetIndex = columnsLength * rowIndex;\n            sourceIndex = columnsLength * indices[rowIndex];\n            for (columnIndex = 0; columnIndex < columnsLength; columnIndex++) {\n                calcIndex = parseInt(sourceIndex + columnIndex, 10);\n                result[parseInt(targetIndex + columnIndex, 10)] = data[calcIndex] || { value: \"\", fmtValue: \"\", ordinal: calcIndex };\n            }\n        }\n\n        return result;\n    }\n\n    function prepareDataOnColumns(tuples, data) {\n        if (!tuples || !tuples.length) {\n            return data;\n        }\n\n        var result = [];\n        var indices = buildDataIndices(tuples);\n        var columnsLength = indices.length;\n        var rowsLength = Math.max(data.length / columnsLength, 1);\n        var columnIndex, rowIndex, dataIndex, calcIndex;\n\n        for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n            dataIndex = columnsLength * rowIndex;\n            for (columnIndex = 0; columnIndex < columnsLength; columnIndex++) {\n                calcIndex = indices[columnIndex] + dataIndex;\n                result[dataIndex + columnIndex] = data[calcIndex] || { value: \"\", fmtValue: \"\", ordinal: calcIndex };\n            }\n        }\n\n        return result;\n    }\n\n    function buildDataIndices(tuples) {\n        tuples = tuples.slice();\n        var result = [];\n        var tuple = tuples.shift();\n        var idx, length, spliceIndex, children, member;\n\n        while (tuple) {\n            //required for multiple measures\n            if (tuple.dataIndex !== undefined$1) {\n                result.push(tuple.dataIndex);\n            }\n\n            spliceIndex = 0;\n            for (idx = 0, length = tuple.members.length; idx < length; idx++) {\n                member = tuple.members[idx];\n                children = member.children;\n                if (member.measure) {\n                    [].splice.apply(tuples, [0, 0].concat(children));\n                } else {\n                    [].splice.apply(tuples, [spliceIndex, 0].concat(children));\n                }\n                spliceIndex += children.length;\n            }\n\n            tuple = tuples.shift();\n        }\n\n        return result;\n    }\n\n    PivotDataSourceV2.create = function(options) {\n        options = options && options.push ? { data: options } : options;\n\n        var dataSource = options || {},\n            data = dataSource.data;\n\n        dataSource.data = data;\n\n        if (!(dataSource instanceof PivotDataSourceV2) && dataSource instanceof kendo.data.DataSource) {\n            throw new Error(\"Incorrect DataSource type. Only PivotDataSource instances are supported\");\n        }\n\n        return dataSource instanceof PivotDataSourceV2 ? dataSource : new PivotDataSourceV2(dataSource);\n    };\n\n    PivotDataSource.create = function(options) {\n        options = options && options.push ? { data: options } : options;\n\n        var dataSource = options || {},\n            data = dataSource.data;\n\n        dataSource.data = data;\n\n        if (!(dataSource instanceof PivotDataSource) && dataSource instanceof kendo.data.DataSource) {\n            throw new Error(\"Incorrect DataSource type. Only PivotDataSource instances are supported\");\n        }\n\n        return dataSource instanceof PivotDataSource ? dataSource : new PivotDataSource(dataSource);\n    };\n\n    function baseHierarchyPath(memberName) {\n        var parts = memberName.split(\".\");\n        if (parts.length > 2) {\n            return parts[0] + \".\" + parts[1];\n        }\n        return memberName;\n    }\n\n    function expandMemberDescriptor(names, sort) {\n        var idx = names.length - 1;\n        var name = names[idx];\n        var sortDescriptor;\n\n        sortDescriptor = sortDescriptorForMember(sort, name);\n\n        if (sortDescriptor && sortDescriptor.dir) {\n            name = \"ORDER(\" + name + \".Children,\" + sortDescriptor.field + \".CurrentMember.MEMBER_CAPTION,\" + sortDescriptor.dir + \")\";\n        } else {\n            name += \".Children\";\n        }\n\n        names[idx] = name;\n\n        return names;\n    }\n\n    function sortDescriptorForMember(sort, member) {\n        for (var idx = 0, length = sort.length; idx < length; idx++) {\n            if (member.indexOf(sort[idx].field) === 0) {\n                return sort[idx];\n            }\n        }\n        return null;\n    }\n\n    function crossJoin(names) {\n        var result = \"CROSSJOIN({\";\n        var r;\n\n        if (names.length > 2) {\n            r = names.pop();\n            result += crossJoin(names);\n        } else {\n            result += names.shift();\n            r = names.pop();\n        }\n\n        result += \"},{\";\n        result += r;\n        result += \"})\";\n        return result;\n    }\n\n    function crossJoinCommand(members, measures) {\n        var tmp = members.slice(0);\n\n        if (measures.length > 1) {\n            tmp.push(\"{\" + measureNames(measures).join(\",\") + \"}\");\n        }\n\n        return crossJoin(tmp);\n    }\n\n    function measureNames(measures) {\n        var idx = 0;\n        var length = measures.length;\n        var result = [];\n        var measure;\n\n        for (; idx < length; idx++) {\n            measure = measures[idx];\n            result.push(measure.name !== undefined$1 ? measure.name : measure);\n        }\n\n        return result;\n    }\n\n    function indexOf(name, items) {\n        var idx, length, index = -1;\n\n        for (idx = 0, length = items.length; idx < length; idx++) {\n            if (getName(items[idx]) === name) {\n                index = idx;\n                break;\n            }\n        }\n        return index;\n    }\n\n    function getName(name) {\n        name = name.name || name;\n\n        if (toString.call(name) === \"[object Array]\") {\n            name = name[name.length - 1];\n        }\n\n        return name;\n    }\n\n    function getRootNames(members) {\n        var length = members.length;\n        var names = [];\n        var idx = 0;\n\n        for (; idx < length; idx++) {\n            names.push(members[idx].name[0]);\n        }\n\n        return names;\n    }\n\n    function mapNames(names, rootNames) {\n        var name;\n        var rootName;\n\n        var j;\n        var idx = 0;\n        var length = names.length;\n        var rootLength = rootNames.length;\n\n        rootNames = rootNames.slice(0);\n\n        for (; idx < length; idx++) {\n            name = names[idx];\n\n            for (j = 0; j < rootLength; j++) {\n                rootName = baseHierarchyPath(rootNames[j]);\n\n                if (name.indexOf(rootName) !== -1) {\n                    rootNames[j] = name;\n                    break;\n                }\n            }\n        }\n\n        return {\n            names: rootNames,\n            expandedIdx: j,\n            uniquePath: rootNames.slice(0, j + 1).join(\"\")\n        };\n    }\n\n    function parseDescriptors(members) {\n        var expanded = [];\n        var child = [];\n        var root = [];\n        var member;\n\n        var j, l;\n        var idx = 0;\n        var length = members.length;\n\n        var name;\n        var hierarchyName;\n\n        var found;\n\n        for (; idx < length; idx++) {\n            member = members[idx];\n            name = member.name;\n            found = false;\n\n            if (toString.call(name) !== \"[object Array]\") {\n                member.name = name = [name];\n            }\n\n            if (name.length > 1) {\n                child.push(member);\n            } else {\n                hierarchyName = baseHierarchyPath(name[0]);\n\n                for (j = 0, l = root.length; j < l; j++) {\n                    if (root[j].name[0].indexOf(hierarchyName) === 0) {\n                        found = true;\n                        break;\n                    }\n                }\n\n                if (!found) {\n                    root.push(member);\n                }\n\n                if (member.expand) {\n                    expanded.push(member);\n                }\n            }\n        }\n\n        expanded = expanded.concat(child);\n\n        return {\n            root: root,\n            expanded: expanded\n        };\n    }\n\n    function serializeMembers(members, measures, sort) {\n        var command = \"\";\n\n        members = members || [];\n\n        var expanded = parseDescriptors(members);\n        var root = expanded.root;\n\n        var rootNames = getRootNames(root);\n        var crossJoinCommands = [];\n\n        expanded = expanded.expanded;\n\n        var length = expanded.length;\n        var idx = 0;\n\n        var memberName;\n        var names = [];\n\n        if (rootNames.length > 1 || measures.length > 1) {\n            crossJoinCommands.push(crossJoinCommand(rootNames, measures));\n\n            for (; idx < length; idx++) {\n                memberName = expandMemberDescriptor(expanded[idx].name, sort);\n                names = mapNames(memberName, rootNames).names;\n\n                crossJoinCommands.push(crossJoinCommand(names, measures));\n            }\n\n            command += crossJoinCommands.join(\",\");\n        } else {\n            for (; idx < length; idx++) {\n                memberName = expandMemberDescriptor(expanded[idx].name, sort);\n                names.push(memberName[0]); //check if this is ok\n            }\n\n            command += rootNames.concat(names).join(\",\");\n        }\n\n        return command;\n    }\n\n    var filterFunctionFormats = {\n        contains: \", InStr({0}.CurrentMember.MEMBER_CAPTION,\\\"{1}\\\") > 0\",\n        doesnotcontain: \", InStr({0}.CurrentMember.MEMBER_CAPTION,\\\"{1}\\\")\",\n        startswith: \", Left({0}.CurrentMember.MEMBER_CAPTION,Len(\\\"{1}\\\"))=\\\"{1}\\\"\",\n        endswith: \", Right({0}.CurrentMember.MEMBER_CAPTION,Len(\\\"{1}\\\"))=\\\"{1}\\\"\",\n        eq: \", {0}.CurrentMember.MEMBER_CAPTION = \\\"{1}\\\"\",\n        neq: \", {0}.CurrentMember.MEMBER_CAPTION = \\\"{1}\\\"\"\n    };\n\n    function serializeExpression(expression) {\n        var command = \"\";\n        var value = expression.value;\n        var field = expression.field;\n        var operator = expression.operator;\n\n        if (operator == \"in\") {\n            command += \"{\";\n            command += value;\n            command += \"}\";\n        } else {\n            command += operator == \"neq\" || operator == \"doesnotcontain\" ? \"-\" : \"\";\n            command += \"Filter(\";\n            command += field + \".MEMBERS\";\n            command += kendo.format(filterFunctionFormats[operator], field, value);\n            command += \")\";\n        }\n\n        return command;\n    }\n\n    function serializeFilters(filter, cube) {\n        var command = \"\", current;\n        var filters = filter.filters;\n        var length = filters.length;\n        var idx;\n\n        for (idx = length - 1; idx >= 0; idx--) {\n\n            current = \"SELECT (\";\n            current += serializeExpression(filters[idx]);\n            current += \") ON 0\";\n\n            if (idx == length - 1) {\n                current += \" FROM [\" + cube + \"]\";\n                command = current;\n            } else {\n                command = current + \" FROM ( \" + command + \" )\";\n            }\n        }\n\n        return command;\n    }\n\n    function serializeOptions(parentTagName, options, capitalize) {\n        var result = \"\";\n\n        if (options) {\n            result += \"<\" + parentTagName + \">\";\n            var value;\n            for (var key in options) {\n                value = options[key];\n                if (capitalize) {\n                    key = key.replace(/([A-Z]+(?=$|[A-Z][a-z])|[A-Z]?[a-z]+)/g, \"$1_\").toUpperCase().replace(/_$/, \"\");\n                }\n                result += \"<\" + key + \">\" + value + \"</\" + key + \">\";\n            }\n            result += \"</\" + parentTagName + \">\";\n        } else {\n            result += \"<\" + parentTagName + \"/>\";\n        }\n        return result;\n    }\n\n    var xmlaDiscoverCommands = {\n        schemaCubes: \"MDSCHEMA_CUBES\",\n        schemaCatalogs: \"DBSCHEMA_CATALOGS\",\n        schemaMeasures: \"MDSCHEMA_MEASURES\",\n        schemaDimensions: \"MDSCHEMA_DIMENSIONS\",\n        schemaHierarchies: \"MDSCHEMA_HIERARCHIES\",\n        schemaLevels: \"MDSCHEMA_LEVELS\",\n        schemaMembers: \"MDSCHEMA_MEMBERS\",\n        schemaKPIs: \"MDSCHEMA_KPIS\"\n    };\n\n    var convertersMap = {\n        read: function(options) {\n            var command = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"><Header/><Body><Execute xmlns=\"urn:schemas-microsoft-com:xml-analysis\"><Command><Statement>';\n\n            command += \"SELECT NON EMPTY {\";\n\n            var columns = options.columns || [];\n            var rows = options.rows || [];\n\n            var measures = options.measures || [];\n            var measuresRowAxis = options.measuresAxis === \"rows\";\n            var sort = options.sort || [];\n\n            if (!columns.length && rows.length && (!measures.length || (measures.length && measuresRowAxis))) {\n                columns = rows;\n                rows = [];\n                measuresRowAxis = false;\n            }\n\n            if (!columns.length && !rows.length) {\n                measuresRowAxis = false;\n            }\n\n            if (columns.length) {\n                command += serializeMembers(columns, !measuresRowAxis ? measures : [], sort);\n            } else if (measures.length && !measuresRowAxis) {\n                command += measureNames(measures).join(\",\");\n            }\n\n            command += \"} DIMENSION PROPERTIES CHILDREN_CARDINALITY, PARENT_UNIQUE_NAME ON COLUMNS\";\n\n            if (rows.length || (measuresRowAxis && measures.length > 1)) {\n                command += \", NON EMPTY {\";\n\n                if (rows.length) {\n                    command += serializeMembers(rows, measuresRowAxis ? measures : [], sort);\n                } else {\n                    command += measureNames(measures).join(\",\");\n                }\n\n                command += \"} DIMENSION PROPERTIES CHILDREN_CARDINALITY, PARENT_UNIQUE_NAME ON ROWS\";\n            }\n\n            if (options.filter) {\n                command += \" FROM \";\n                command += \"(\";\n                command += serializeFilters(options.filter, options.connection.cube);\n                command += \")\";\n            } else {\n                command += \" FROM [\" + options.connection.cube + \"]\";\n            }\n\n            if (measures.length == 1 && columns.length) {\n                command += \" WHERE (\" + measureNames(measures).join(\",\") + \")\";\n            }\n\n            command += '</Statement></Command><Properties><PropertyList><Catalog>' + options.connection.catalog + '</Catalog><Format>Multidimensional</Format></PropertyList></Properties></Execute></Body></Envelope>';\n            return command.replace(/\\&/g, \"&amp;\");\n        },\n        discover: function(options) {\n            options = options || {};\n\n            var command = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"><Header/><Body><Discover xmlns=\"urn:schemas-microsoft-com:xml-analysis\">';\n            command += \"<RequestType>\" + (xmlaDiscoverCommands[options.command] || options.command) + \"</RequestType>\";\n\n            command += \"<Restrictions>\" + serializeOptions(\"RestrictionList\", options.restrictions, true) + \"</Restrictions>\";\n\n            if (options.connection && options.connection.catalog) {\n                options.properties = $.extend({}, {\n                    Catalog: options.connection.catalog\n                }, options.properties);\n            }\n\n            command += \"<Properties>\" + serializeOptions(\"PropertyList\", options.properties) + \"</Properties>\";\n\n            command += '</Discover></Body></Envelope>';\n            return command;\n        }\n    };\n\n    var XmlaTransport = kendo.data.RemoteTransport.extend({\n        init: function(options) {\n            var originalOptions = options;\n\n            options = this.options = extend(true, {}, this.options, options);\n\n            kendo.data.RemoteTransport.call(this, options);\n\n            if (isFunction(originalOptions.discover)) {\n                this.discover = originalOptions.discover;\n            } else if (typeof originalOptions.discover === \"string\") {\n                this.options.discover = {\n                    url: originalOptions.discover\n                };\n            } else if (!originalOptions.discover) {\n                this.options.discover = this.options.read;\n            }\n        },\n        setup: function(options, type) {\n            options.data = options.data || {};\n            $.extend(true, options.data, { connection: this.options.connection });\n\n            return kendo.data.RemoteTransport.fn.setup.call(this, options, type);\n        },\n        options: {\n            read: {\n                dataType: \"text\",\n                contentType: \"text/xml\",\n                type: \"POST\"\n            },\n            discover: {\n                dataType: \"text\",\n                contentType: \"text/xml\",\n                type: \"POST\"\n            },\n            parameterMap: function(options, type) {\n                return convertersMap[type](options,type);\n            }\n        },\n\n        discover: function(options) {\n            return $.ajax(this.setup(options, \"discover\"));\n        }\n    });\n\n    var XmlaTransportV2 = Class.extend({\n        init: function(options) {\n            options = this.options = extend(true, {}, this.options, options);\n        },\n        setup: function(options) {\n            return $.extend(true, options || {}, { connection: this.options.connection });\n        },\n        read: function(options) {\n            var that = this,\n                success,\n                error;\n\n            var fetchOptions = that.setup(options.data, READ);\n\n            success = options.success || $.noop;\n            error = options.error || $.noop;\n\n            if (options.parameterMap) {\n                fetchOptions = that.parameterMap(fetchOptions, READ);\n            }\n\n            fetchData({ url: that.options.read }, fetchOptions)\n            .then(createDataState)\n            .then(function(newDataState) {\n                success(newDataState);\n            })\n            .catch(function(err) { error(err); });\n        },\n\n        catalog: function(val) {\n            var options = this.options || {};\n\n            if (val === undefined$1) {\n                return (options.connection || {}).catalog;\n\n            }\n\n            var connection = options.connection || {};\n            connection.catalog = val;\n\n            this.options.connection = connection;\n            $.extend(this.transport.options, { connection: connection });\n        },\n        cube: function(val) {\n            var options = this.options || {};\n\n            if (val === undefined$1) {\n                return (options.connection || {}).cube;\n            }\n\n            var connection = options.connection || {};\n            connection.cube = val;\n\n            this.options.connection = connection;\n            extend(true, this.transport.options, { connection: connection });\n        },\n\n        discover: function(options) {\n            return fetchDiscover({ url: this.options.read }, options);\n        }\n    });\n\n    function asArray(object) {\n        if (object == null) {\n            return [];\n        }\n\n        var type = toString.call(object);\n        if (type !== \"[object Array]\") {\n            return [object];\n        }\n\n        return object;\n    }\n\n    function translateAxis(axis) {\n        var result = { tuples: [] };\n        var tuples = asArray(kendo.getter(\"Tuples.Tuple\", true)(axis));\n        var captionGetter = kendo.getter(\"Caption['#text']\");\n        var unameGetter = kendo.getter(\"UName['#text']\");\n        var levelNameGetter = kendo.getter(\"LName['#text']\");\n        var levelNumGetter = kendo.getter(\"LNum['#text']\");\n        var childrenGetter = kendo.getter(\"CHILDREN_CARDINALITY['#text']\", true);\n        var hierarchyGetter = kendo.getter(\"['@Hierarchy']\");\n        var parentNameGetter = kendo.getter(\"PARENT_UNIQUE_NAME['#text']\", true);\n\n        for (var idx = 0; idx < tuples.length; idx++) {\n            var members = [];\n            var member = asArray(tuples[idx].Member);\n            for (var memberIdx = 0; memberIdx < member.length; memberIdx++) {\n                members.push({\n                    children: [],\n                    caption: captionGetter(member[memberIdx]),\n                    name: unameGetter(member[memberIdx]),\n                    levelName: levelNameGetter(member[memberIdx]),\n                    levelNum: levelNumGetter(member[memberIdx]),\n                    hasChildren: parseInt(childrenGetter(member[memberIdx]), 10) > 0,\n                    parentName: parentNameGetter(member[memberIdx]),\n                    hierarchy: hierarchyGetter(member[memberIdx])\n                });\n            }\n\n            result.tuples.push({ members: members });\n        }\n        return result;\n    }\n\n    var schemaDataReaderMap = {\n        cubes: {\n            name: kendo.getter(\"CUBE_NAME['#text']\", true),\n            caption: kendo.getter(\"CUBE_CAPTION['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true),\n            type: kendo.getter(\"CUBE_TYPE['#text']\", true)\n        },\n        catalogs: {\n            name: kendo.getter(\"CATALOG_NAME['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true)\n        },\n        measures: {\n            name: kendo.getter(\"MEASURE_NAME['#text']\", true),\n            caption: kendo.getter(\"MEASURE_CAPTION['#text']\", true),\n            uniqueName: kendo.getter(\"MEASURE_UNIQUE_NAME['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true),\n            aggregator: kendo.getter(\"MEASURE_AGGREGATOR['#text']\", true),\n            groupName: kendo.getter(\"MEASUREGROUP_NAME['#text']\", true),\n            displayFolder: kendo.getter(\"MEASURE_DISPLAY_FOLDER['#text']\", true),\n            defaultFormat: kendo.getter(\"DEFAULT_FORMAT_STRING['#text']\", true)\n        },\n        kpis: {\n            name: kendo.getter(\"KPI_NAME['#text']\", true),\n            caption: kendo.getter(\"KPI_CAPTION['#text']\", true),\n            value: kendo.getter(\"KPI_VALUE['#text']\", true),\n            goal: kendo.getter(\"KPI_GOAL['#text']\", true),\n            status: kendo.getter(\"KPI_STATUS['#text']\", true),\n            trend: kendo.getter(\"KPI_TREND['#text']\", true),\n            statusGraphic: kendo.getter(\"KPI_STATUS_GRAPHIC['#text']\", true),\n            trendGraphic: kendo.getter(\"KPI_TREND_GRAPHIC['#text']\", true),\n            description: kendo.getter(\"KPI_DESCRIPTION['#text']\", true),\n            groupName: kendo.getter(\"MEASUREGROUP_NAME['#text']\", true)\n        },\n        dimensions: {\n            name: kendo.getter(\"DIMENSION_NAME['#text']\", true),\n            caption: kendo.getter(\"DIMENSION_CAPTION['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true),\n            uniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n            defaultHierarchy: kendo.getter(\"DEFAULT_HIERARCHY['#text']\", true),\n            type: kendo.getter(\"DIMENSION_TYPE['#text']\", true)\n//unknown = 0; time = 1; measure = 2; other = 3; quantitative = 5; accounts = 6; customers = 7; products = 8; scenario = 9; utility = 10; currency = 11; rates = 12; channel = 13; promotion = 14; organization = 15; billOfMaterials = 16; geography = 17;\n\n        },\n        hierarchies: {\n            name: kendo.getter(\"HIERARCHY_NAME['#text']\", true),\n            caption: kendo.getter(\"HIERARCHY_CAPTION['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true),\n            uniqueName: kendo.getter(\"HIERARCHY_UNIQUE_NAME['#text']\", true),\n            dimensionUniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n            displayFolder: kendo.getter(\"HIERARCHY_DISPLAY_FOLDER['#text']\", true),\n            origin: kendo.getter(\"HIERARCHY_ORIGIN['#text']\", true),\n            defaultMember: kendo.getter(\"DEFAULT_MEMBER['#text']\", true)\n        },\n        levels: {\n            name: kendo.getter(\"LEVEL_NAME['#text']\", true),\n            caption: kendo.getter(\"LEVEL_CAPTION['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true),\n            uniqueName: kendo.getter(\"LEVEL_UNIQUE_NAME['#text']\", true),\n            dimensionUniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n            displayFolder: kendo.getter(\"LEVEL_DISPLAY_FOLDER['#text']\", true),\n            orderingProperty: kendo.getter(\"LEVEL_ORDERING_PROPERTY['#text']\", true),\n            origin: kendo.getter(\"LEVEL_ORIGIN['#text']\", true),\n            hierarchyUniqueName: kendo.getter(\"HIERARCHY_UNIQUE_NAME['#text']\", true)\n        },\n        members: {\n            name: kendo.getter(\"MEMBER_NAME['#text']\", true),\n            caption: kendo.getter(\"MEMBER_CAPTION['#text']\", true),\n            uniqueName: kendo.getter(\"MEMBER_UNIQUE_NAME['#text']\", true),\n            dimensionUniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n            hierarchyUniqueName: kendo.getter(\"HIERARCHY_UNIQUE_NAME['#text']\", true),\n            levelUniqueName: kendo.getter(\"LEVEL_UNIQUE_NAME['#text']\", true),\n            childrenCardinality: kendo.getter(\"CHILDREN_CARDINALITY['#text']\", true)\n        }\n    };\n\n    var xmlaReaderMethods = [\"axes\", \"catalogs\", \"cubes\", \"dimensions\", \"hierarchies\", \"levels\", \"measures\"];\n\n    var XmlaDataReader = kendo.data.XmlDataReader.extend({\n        init: function(options) {\n            kendo.data.XmlDataReader.call(this, options);\n\n            this._extend(options);\n        },\n        _extend: function(options) {\n            var idx = 0;\n            var length = xmlaReaderMethods.length;\n            var methodName;\n            var option;\n\n            for (; idx < length; idx++) {\n                methodName = xmlaReaderMethods[idx];\n                option = options[methodName];\n\n                if (option && option !== identity) {\n                    this[methodName] = option;\n                }\n            }\n        },\n        parse: function(xml) {\n            var result = kendo.data.XmlDataReader.fn.parse(xml.replace(/<(\\/?)(\\w|-)+:/g, \"<$1\"));\n            return kendo.getter(\"['Envelope']['Body']\", true)(result);\n        },\n        errors: function(root) {\n            var fault = kendo.getter(\"['Fault']\", true)(root);\n            if (fault) {\n                return [{\n                    faultstring: kendo.getter(\"faultstring['#text']\", true)(fault),\n                    faultcode: kendo.getter(\"faultcode['#text']\", true)(fault)\n                }];\n            }\n            return null;\n        },\n        axes: function(root) {\n            root = kendo.getter(\"ExecuteResponse[\\\"return\\\"].root\", true)(root);\n\n            var axes = asArray(kendo.getter(\"Axes.Axis\", true)(root));\n            var axis;\n\n            var result = {\n                columns: {},\n                rows: {}\n            };\n\n            for (var idx = 0; idx < axes.length; idx++) {\n                axis = axes[idx];\n\n                if (axis[\"@name\"].toLowerCase() !== \"sliceraxis\") {\n                    if (!result.columns.tuples) {\n                        result.columns = translateAxis(axis);\n                    } else {\n                        result.rows = translateAxis(axis);\n                    }\n                }\n            }\n\n            return result;\n        },\n        data: function(root) {\n            root = kendo.getter(\"ExecuteResponse[\\\"return\\\"].root\", true)(root);\n\n            var cells = asArray(kendo.getter(\"CellData.Cell\", true)(root));\n\n            var result = [];\n            var ordinalGetter = kendo.getter(\"['@CellOrdinal']\");\n            var valueGetter = kendo.getter(\"Value['#text']\");\n            var fmtValueGetter = kendo.getter(\"FmtValue['#text']\");\n\n            for (var idx = 0; idx < cells.length; idx++) {\n                result.push({\n                    value: valueGetter(cells[idx]),\n                    fmtValue: fmtValueGetter(cells[idx]),\n                    ordinal: parseInt(ordinalGetter(cells[idx]), 10)\n                });\n            }\n\n            return result;\n        },\n        _mapSchema: function(root, getters) {\n            root = kendo.getter(\"DiscoverResponse[\\\"return\\\"].root\", true)(root);\n            var rows = asArray(kendo.getter(\"row\", true)(root));\n\n            var result = [];\n\n            for (var idx = 0; idx < rows.length; idx++) {\n                var obj = {};\n                for (var key in getters) {\n                    obj[key] = getters[key](rows[idx]);\n                }\n                result.push(obj);\n            }\n\n            return result;\n        },\n        measures: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.measures);\n        },\n        kpis: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.kpis);\n        },\n        hierarchies: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.hierarchies);\n        },\n        levels: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.levels);\n        },\n        dimensions: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.dimensions);\n        },\n        cubes: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.cubes);\n        },\n        catalogs: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.catalogs);\n        },\n        members: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.members);\n        }\n    });\n\n    extend(true, kendo.data, {\n       PivotDataSource: PivotDataSource,\n       PivotDataSourceV2: PivotDataSourceV2,\n       XmlaTransport: XmlaTransport,\n       XmlaDataReader: XmlaDataReader,\n       PivotCubeBuilder: PivotCubeBuilder,\n       transports: {\n           xmla: XmlaTransport\n       },\n       readers: {\n           xmla: XmlaDataReader\n       }\n    });\n\n    var sortExpr = function(expressions, name) {\n        if (!expressions) {\n            return null;\n        }\n\n        for (var idx = 0, length = expressions.length; idx < length; idx++) {\n            if (expressions[idx].field === name) {\n                return expressions[idx];\n            }\n        }\n\n        return null;\n    };\n\n    var removeExpr = function(expressions, name) {\n        var result = [];\n\n        for (var idx = 0, length = expressions.length; idx < length; idx++) {\n            if (expressions[idx].field !== name) {\n                result.push(expressions[idx]);\n            }\n        }\n\n        return result;\n    };\n\n    kendo.ui.PivotSettingTarget = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that.element.addClass(\"k-pivot-setting\");\n\n            that.dataSource = kendo.data.PivotDataSource.create(options.dataSource);\n\n            that._refreshHandler = that.refresh.bind(that);\n            that.dataSource.first(CHANGE, that._refreshHandler);\n\n            if (!options.template) {\n                var actions = '';\n\n                if (that.options.enabled) {\n                    actions = `<span class=\"k-setting-delete k-chip-action\">${kendo.ui.icon(\"x\")}</span>`;\n                }\n\n                that.options.template = (data) => ''\n                    + `<span class=\"k-chip k-chip-md k-rounded-full k-chip-solid k-chip-solid-base\" data-${kendo.ns}name=\"${data.name || data}\">`\n                        + '<span class=\"k-chip-content\">'\n                            + `<span class=\"k-chip-text\">${data.name || data}</span>`\n                        + '</span>'\n                        + '<span class=\"k-chip-actions\">' + actions + '</span>'\n                    + '</span>';\n            }\n\n            that.template = kendo.template(that.options.template);\n            that.emptyTemplate = kendo.template(that.options.emptyTemplate);\n\n            that._sortable();\n\n            that.element.on(\"click\" + NS, '.k-chip, .k-button' , function(e) {\n                var target = $(e.target).closest(\":not(path,svg)\");\n                var action = target.closest('.k-chip-action');\n                var name = target.closest(\"[\" + kendo.attr(\"name\") + \"]\")\n                                 .attr(kendo.attr(\"name\"));\n\n                if (!name) {\n                    return;\n                }\n\n                if (action.hasClass(\"k-setting-delete\")) {\n                    that.remove(name);\n                    return;\n                }\n\n                if (target.closest('.k-chip-actions').length > 0) {\n                    return;\n                }\n\n                if (that.options.sortable) {\n                    var sortDirection = $(e.currentTarget).closest(\":not(path,svg)\").find('.k-i-sort-asc-small,.k-svg-i-sort-asc-small').length ? 'desc' : 'asc';\n\n                    that.sort({\n                        field: name,\n                        dir: sortDirection\n                    });\n                }\n            });\n\n            if (options.filterable || options.sortable) {\n                that.fieldMenu = new ui.PivotFieldMenu(that.element, {\n                    messages: that.options.messages.fieldMenu,\n                    filter: \".k-setting-fieldmenu\",\n                    filterable: options.filterable,\n                    sortable: options.sortable,\n                    dataSource: that.dataSource\n                });\n            }\n\n            that.refresh();\n        },\n\n        options: {\n            name: \"PivotSettingTarget\",\n            template: null,\n            filterable: false,\n            sortable: false,\n            emptyTemplate: (data) => `<div class='k-empty'>${data}</div>`,\n            setting: \"columns\",\n            enabled: true,\n            messages: {\n                empty: \"Drop Fields Here\"\n            }\n        },\n        setDataSource: function(dataSource) {\n            this.dataSource.unbind(CHANGE, this._refreshHandler);\n            this.dataSource = this.options.dataSource = dataSource;\n\n            if (this.fieldMenu) {\n                this.fieldMenu.setDataSource(dataSource);\n            }\n            dataSource.first(CHANGE, this._refreshHandler);\n\n            this.refresh();\n        },\n\n        _sortable: function() {\n            var that = this;\n\n            if (that.options.enabled) {\n                this.sortable = this.element.kendoSortable({\n                    connectWith: this.options.connectWith,\n                    hint: that.options.hint,\n                    filter: \">*:not(.k-empty)\",\n                    cursor: \"move\",\n                    start: function(e) {\n                        e.item.trigger(\"focus\").trigger(\"blur\");\n                    },\n                    change: function(e) {\n                        var name = e.item.attr(kendo.attr(\"name\"));\n\n                        if (e.action == \"receive\") {\n                            that.add(name);\n                        } else if (e.action == \"remove\") {\n                            that.remove(name);\n                        } else if (e.action == \"sort\") {\n                            that.move(name, e.newIndex);\n                        }\n                    }\n                }).data(\"kendoSortable\");\n            }\n        },\n\n        _isKPI: function(data) {\n            return data.type === \"kpi\" || data.measure;\n        },\n\n        validate: function(data) {\n            var isMeasure = (data.type == 2 || \"aggregator\" in data || this._isKPI(data));\n\n            if (isMeasure) {\n                return this.options.setting === \"measures\";\n            }\n\n            if (this.options.setting === \"measures\") {\n                return isMeasure;\n            }\n\n            var items = this.dataSource[this.options.setting]();\n            var name = data.defaultHierarchy || data.uniqueName;\n            if (indexOf(name, items) > -1) {\n                return false;\n            }\n\n            items = this.dataSource[this.options.setting === \"columns\" ? \"rows\" : \"columns\"]();\n            if (indexOf(name, items) > -1) {\n                return false;\n            }\n\n            return true;\n        },\n\n        add: function(name) {\n            var items = this.dataSource[this.options.setting]();\n            var i, l;\n\n            name = Array.isArray(name) ? name.slice(0) : [name];\n\n            for (i = 0, l = name.length; i < l; i++) {\n                if (indexOf(name[i], items) !== -1) {\n                    name.splice(i, 1);\n                    i -= 1;\n                    l -= 1;\n                }\n            }\n\n            if (name.length) {\n                items = items.concat(name);\n                this.dataSource[this.options.setting](items);\n            }\n        },\n\n        move: function(name, index) {\n            var items = this.dataSource[this.options.setting]();\n            var idx = indexOf(name, items);\n\n            if (idx > -1) {\n                name = items.splice(idx, 1)[0];\n\n                items.splice(index, 0, name);\n\n                this.dataSource[this.options.setting](items);\n            }\n        },\n\n        remove: function(name) {\n            var items = this.dataSource[this.options.setting]();\n            var idx = indexOf(name, items);\n            var sortExpressions = this.dataSource.sort();\n            var filter = this.dataSource.filter();\n\n            if (idx > -1) {\n                if (filter) {\n                    filter.filters = removeExpr(filter.filters, name);\n                    this.dataSource._filter.filters = filter.filters;\n                    if (!filter.filters.length) {\n                        this.dataSource._filter = null;\n                    }\n                }\n                if (sortExpressions) {\n                    sortExpressions = removeExpr(sortExpressions, name);\n                    this.dataSource._sort = sortExpressions;\n                }\n                items.splice(idx, 1);\n                this.dataSource[this.options.setting](items);\n            }\n        },\n\n        sort: function(expr) {\n            var sortable = this.options.sortable;\n            var allowUnsort = sortable === true || sortable.allowUnsort;\n            var skipExpr = allowUnsort && expr.dir === \"asc\";\n\n            var expressions = (this.dataSource.sort() || []);\n            var result = removeExpr(expressions, expr.field);\n\n            if (skipExpr && expressions.length !== result.length) {\n                expr = null;\n            }\n\n            if (expr) {\n                result.push(expr);\n            }\n\n            this.dataSource.sort(result);\n        },\n\n        refresh: function() {\n            var html = \"\";\n            var items = this.dataSource[this.options.setting]();\n            var length = items.length;\n            var idx = 0;\n            var item;\n\n            if (length) {\n                for (; idx < length; idx++) {\n                    item = items[idx];\n                    item = item.name === undefined$1 ? { name: item } : item;\n\n                    html += this.template(extend({ sortIcon: this._sortIcon(item.name) }, item));\n                }\n            } else {\n                html = this.emptyTemplate(this.options.messages.empty);\n            }\n\n            this.element.html(html);\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            this.dataSource.unbind(CHANGE, this._refreshHandler);\n            this.element.off(NS);\n\n            if (this.sortable) {\n                this.sortable.destroy();\n            }\n\n            if (this.fieldMenu) {\n                this.fieldMenu.destroy();\n            }\n\n            this.element = null;\n            this._refreshHandler = null;\n        },\n\n        _sortIcon: function(name) {\n            var expressions = this.dataSource.sort();\n            var expr = sortExpr(expressions, getName(name));\n            var icon = \"\";\n\n            if (expr) {\n                icon = \"sort-\" + expr.dir;\n            }\n\n            return icon;\n        }\n    });\n\n    kendo.ui.PivotSettingTargetV2 = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that.dataSource = kendo.data.PivotDataSourceV2.create(options.dataSource);\n\n            that._refreshHandler = that.refresh.bind(that);\n            that.dataSource.first(CHANGE, that._refreshHandler);\n\n            that.template = kendo.template(that.options.template);\n\n            that._sortable();\n\n            that.element.on(\"click\" + NS, \".k-i-x-circle,.k-svg-i-x-circle\", function(e) {\n                var target = $(e.target).closest(\":not(path,svg)\");\n                var parent = target.closest(\".k-chip\");\n                var name = parent.find(\".k-chip-label\").text();\n\n                if (!name) {\n                    return;\n                }\n\n                that.remove(name);\n                parent.remove();\n                that.trigger(\"remove\", { name: name });\n            });\n\n            if (that.options.navigatable) {\n                that.element.on(\"keydown\" + NS, \".k-chip\", function(ev) {\n                    var chip = $(ev.target),\n                        key = ev.keyCode,\n                        name = chip.find(\".k-chip-label\").text();\n\n                    if (key === keys.DELETE || key === keys.BACKSPACE) {\n                        const targetIndex = that.options.configuratorNavigation ? that.options.configuratorNavigation.elements.indexOf(chip[0]) : -1;\n                        chip.find(\".k-i-x-circle,.k-svg-i-x-circle\").trigger(\"click\");\n                        if (!that.options.configuratorNavigation) {\n                            return;\n                        }\n\n                        that.options.configuratorNavigation.focusElement(\n                            that.options.configuratorNavigation.elements[targetIndex - 1],\n                        );\n                    } else if (key === keys.DOWN && ev.altKey) {\n                        chip.find(\".k-i-more-vertical,.k-svg-i-more-vertical\").trigger(\"click\");\n                    } else if (ev.ctrlKey && ev.shiftKey) {\n                        if (key == keys.LEFT) {\n                            that.move(name, Math.max(0, chip.index() - 1));\n\n                            if (!that.options.configuratorNavigation) {\n                                return;\n                            }\n\n                            that.options.configuratorNavigation.focusElement(\n                                that.element.find(\".k-chip .k-chip-label\")\n                                    .filter((ind, el) => $(el).text() == name)\n                                    .closest(\".k-chip\")[0]\n                            );\n                        } else if (key == keys.RIGHT) {\n                            that.move(name, Math.min(chip.index() + 1, chip.parent().find(\"> .k-chip\").length - 1));\n\n                            if (!that.options.configuratorNavigation) {\n                                return;\n                            }\n\n                            that.options.configuratorNavigation.focusElement(\n                                that.element.find(\".k-chip .k-chip-label\")\n                                    .filter((ind, el) => $(el).text() == name)\n                                    .closest(\".k-chip\")[0]\n                            );\n                        } else if ((key == keys.UP && that.options.setting == \"rows\") ||\n                            (key == keys.DOWN && that.options.setting == \"columns\")) {\n\n                            let otherTarget = that.sortable.options.connectWith.data(\"kendoPivotSettingTargetV2\");\n                            if (!otherTarget) {\n                                return;\n                            }\n\n                            that.remove(name);\n                            otherTarget.add(name);\n                            if (!that.options.configuratorNavigation) {\n                                return;\n                            }\n\n                            that.options.configuratorNavigation.focusElement(\n                                otherTarget.element.find(\".k-chip\").last()[0]\n                            );\n                        }\n                    }\n                });\n            }\n\n            if (options.filterable || options.sortable) {\n                that.fieldMenu = new ui.PivotFieldMenuV2(that.element, {\n                    messages: that.options.messages.fieldMenu,\n                    filterable: options.filterable,\n                    filter: \".k-i-more-vertical,.k-svg-i-more-vertical\",\n                    sortable: options.sortable,\n                    dataSource: that.dataSource\n                });\n            }\n\n            that.refresh();\n        },\n\n        events: [\"remove\"],\n\n        options: {\n            name: \"PivotSettingTargetV2\",\n            template: null,\n            filterable: false,\n            sortable: false,\n            setting: \"columns\",\n            enabled: true,\n            messages: {\n                empty: \"Drop Fields Here\"\n            }\n        },\n        setDataSource: function(dataSource) {\n            this.dataSource.unbind(CHANGE, this._refreshHandler);\n            this.dataSource = this.options.dataSource = dataSource;\n\n            if (this.fieldMenu) {\n                this.fieldMenu.setDataSource(dataSource);\n            }\n            dataSource.first(CHANGE, this._refreshHandler);\n\n            this.refresh();\n        },\n\n        _applyState: function() {\n            if (this._sortState !== undefined$1) {\n                this.dataSource._sort = this._sortState;\n                this._sortState = undefined$1;\n            }\n\n            if (this._stateFilter !== undefined$1) {\n                this.dataSource._filter = this._stateFilter;\n                this._stateFilter = undefined$1;\n            }\n\n            this.dataSource[\"_\" + this.options.setting] = this.options.setting === \"measures\" ? normalizeMeasures(this._savedState) : normalizeMembers(this._savedState);\n        },\n\n        _cancelChanges: function() {\n            this._sortState = undefined$1;\n            this._stateFilter = undefined$1;\n            this._savedState = kendo.deepExtend([], this._initialState);\n            this._redraw();\n        },\n\n        _state: function(newState, modifyInit) {\n            var that = this;\n\n            if (!newState) {\n                return that._savedState || [];\n            } else {\n                if (!that._savedState || modifyInit) {\n                    that._initialState = kendo.deepExtend([], newState);\n                }\n                that._savedState = kendo.deepExtend([], newState);\n            }\n        },\n\n        _sortable: function() {\n            var that = this;\n\n            this.sortable = this.element.kendoSortable({\n                connectWith: this.options.connectWith,\n                hint: that.options.hint,\n                filter: \">*:not(.k-empty)\",\n                cursor: \"move\",\n                start: function(e) {\n                    e.item.focus().blur();\n                },\n                change: function(e) {\n                    var name = e.item.find(\".k-chip-label\").text();\n\n                    if (e.action == \"receive\") {\n                        that.add(name);\n                    } else if (e.action == \"remove\") {\n                        that.remove(name);\n                    } else if (e.action == \"sort\") {\n                        that.move(name, e.newIndex);\n                    }\n                }\n            }).data(\"kendoSortable\");\n        },\n\n        add: function(name) {\n            var items = this._state();\n            var i, l;\n\n            name = Array.isArray(name) ? name.slice(0) : [name];\n\n            for (i = 0, l = name.length; i < l; i++) {\n                if (indexOf(name[i], items) !== -1) {\n                    name.splice(i, 1);\n                    i -= 1;\n                    l -= 1;\n                }\n            }\n\n            if (name.length) {\n                items = items.concat(name);\n                this._state(items);\n                this._redraw();\n            }\n        },\n\n        move: function(name, index) {\n            var items = this._state();\n            var idx = indexOf(name, items);\n\n            if (idx > -1) {\n                name = items.splice(idx, 1)[0];\n\n                items.splice(index, 0, name);\n\n                this._state(items);\n                this._redraw();\n            }\n        },\n\n        remove: function(name) {\n            var items = this._state();\n            var idx = indexOf(name, items);\n            var sortExpressions = this.dataSource.sort();\n            var filter = this.dataSource.filter();\n\n            if (idx > -1) {\n                if (filter) {\n                    filter.filters = removeExpr(filter.filters, name);\n                    this._savedFilter = this.dataSource._filter;\n                    this._savedFilter.filters = filter.filters;\n                    if (!filter.filters.length) {\n                        this._savedFilter = null;\n                    }\n                }\n                if (sortExpressions) {\n                    sortExpressions = removeExpr(sortExpressions, name);\n                    this._sortState = sortExpressions;\n                }\n                items.splice(idx, 1);\n                this._state(items);\n                this._redraw();\n            }\n        },\n\n        _emptyState: function(enable) {\n            var that = this;\n            if (enable) {\n                that.element.html(this.options.messages.empty)\n                    .addClass(\"k-settings-description\")\n                    .removeClass(\"k-chip-list\");\n            } else {\n                that.element\n                    .removeClass(\"k-settings-description\")\n                    .addClass(\"k-chip-list\");\n            }\n        },\n\n        _redraw: function() {\n            var items = this._state() || [];\n            this._emptyState(!items.length);\n            if (items.length) {\n                this.element.html(this._targetsHTML(items));\n            }\n        },\n\n        _targetsHTML: function(items) {\n            var item;\n            var html = \"\";\n            var idx = 0;\n            var options = this.options;\n            var enabled = false;\n\n            if (this.options.setting != \"measures\") {\n                enabled = options.filterable || options.sortable;\n            }\n\n            if (items.length) {\n                for (; idx < items.length; idx++) {\n                    item = items[idx];\n                    item = item.name === undefined$1 ? { name: item } : item;\n\n                    html += this.template({ name: item.name, menuenabled: enabled });\n                }\n            }\n            return html;\n        },\n\n        refresh: function() {\n            if (this.dataSource._preventRefresh) {\n                return;\n            }\n            var items = this.dataSource[this.options.setting]();\n            this._state(items, true);\n            this._emptyState(!this._state().length);\n            if (items.length) {\n                this.element.html(this._targetsHTML(items));\n            }\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            this.dataSource.unbind(CHANGE, this._refreshHandler);\n            this.element.off(NS);\n\n            if (this.sortable) {\n                this.sortable.destroy();\n            }\n\n            if (this.fieldMenu) {\n                this.fieldMenu.destroy();\n            }\n\n            this.element = null;\n            this._refreshHandler = null;\n        }\n    });\n\n    var PivotConfiguratorButton = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n            Widget.fn.init.call(that, element, options);\n            that.element = $(element);\n\n            that._element();\n            that._attachEvents();\n        },\n\n        options: {\n            name: \"PivotConfiguratorButton\",\n            text: \"Change settings\",\n            configurator: \"\"\n        },\n\n        destroy: function() {\n            this.element.off(NS);\n        },\n\n        setOptions: function(options) {\n            var that = this;\n            kendo.deepExtend(that.options, options);\n            this.init(this.element, this.options);\n        },\n\n        toggle: function() {\n            var attr = kendo.attr(\"role\");\n            var pivotEl = this.element\n                .closest(\"[\" + attr + \"=pivotcontainer]\")\n                .find(\"[\" + attr + \"=pivotgridv2]\");\n            var pivot;\n\n            $(\"#\" + this.options.configurator).toggleClass(\"k-hidden\");\n\n            if (pivotEl.length) {\n                pivot = pivotEl.getKendoPivotGridV2();\n                pivot._setContentWidth();\n                pivot._updateDimensions();\n            }\n        },\n\n        _attachEvents: function() {\n            this.element.on(\"click\" + NS, this.toggle.bind(this));\n        },\n\n        _element: function() {\n            var options = this.options;\n            this.element.addClass(\"k-pivotgrid-configurator-button\");\n            this.element.html(kendo.format(\"<span>{0}{1}</span>\",options.text, kendo.ui.icon('gear')));\n        }\n    });\n\n    var PivotContainer = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n            Widget.fn.init.call(that, element, options);\n            that.element = $(element);\n            that.options = options;\n\n\n            that._addClasses();\n        },\n\n        options: {\n            name: \"PivotContainer\",\n            configuratorPosition: \"left\"\n        },\n\n        setOptions: function(options) {\n            var that = this;\n            kendo.deepExtend(that.options, options);\n            this.init(this.element, this.options);\n        },\n\n        _addClasses: function() {\n            var options = this.options;\n            var className;\n            this.element.removeClass(\"k-flex-row k-flex-row-reverse k-flex-column k-flex-column-reverse\");\n\n            switch (options.configuratorPosition) {\n                case \"right\":\n                    className = \"k-flex-row\";\n                    break;\n                case \"left\":\n                    className = \"k-flex-row-reverse\";\n                    break;\n                case \"bottom\":\n                    className = \"k-flex-column\";\n                    break;\n                case \"top\":\n                    className = \"k-flex-column-reverse\";\n                    break;\n                default:\n                    className = \"k-flex-row\";\n            }\n\n            this.element\n                .addClass(\"k-d-flex k-pos-relative\")\n                .addClass(className);\n        }\n    });\n\n    var PivotGridV2 = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that._dataSource();\n\n            that._bindConfigurator();\n\n            that._ariaId = that.element.attr(\"id\") || kendo.guid();\n            that._wrapper();\n\n            that._columnHeadersWrapper = $('<div class=\"k-pivotgrid-column-headers\"></div>');\n            that._rowHeadersWrapper = $('<div class=\"k-pivotgrid-row-headers\"></div>');\n            that._contentWrapper = $('<div class=\"k-pivotgrid-values\"></div>');\n\n            that.wrapper.append(that._columnHeadersWrapper);\n            that.wrapper.append(that._rowHeadersWrapper);\n            that.wrapper.append(that._contentWrapper);\n\n            that._columnBuilder = new ColumnRowBuilder( { template: this.options.columnHeaderTemplate, axes: \"columns\", ariaId: that._ariaId });\n            that._rowBuilder = new ColumnRowBuilder( { template: this.options.rowHeaderTemplate, axes: \"rows\", ariaId: that._ariaId });\n            that._contentBuilder = new ContentBuilderV2( { template: this.options.dataCellTemplate || DATACELL_TEMPLATE, ariaId: that._ariaId });\n\n            that._scrollable();\n            that._rowHeadersWrapper\n                .add(that._columnHeadersWrapper)\n                .on(\"click\", \"span.k-icon,span.k-svg-icon\", function() {\n                    var button = $(this);\n                    var path = button.parent().attr(kendo.attr(\"key\"));\n                    var expanded = button.is(\".k-i-chevron-up,.k-svg-i-chevron-up\");\n                    var isRow = button.closest(\".k-pivotgrid-row-headers\").length !== 0;\n                    var paths = path.split(\",\");\n                    var eventName = expanded ? COLLAPSEMEMBER : EXPANDMEMBER;\n\n                    if (that.trigger(eventName, { path: paths, axis: isRow ? \"rows\" : \"columns\" })) {\n                        return;\n                    }\n\n                    var reducerPayLoad = {\n                        type: \"HEADERS_ACTION_TOGGLE\",\n                        payload: paths,\n                        tree: isRow ? that._rowBuilder.getTree() : that._columnBuilder.getTree()\n                    };\n                    var currentAxes = isRow ? that.dataSource._rows : that.dataSource._columns;\n                    var newHeaders = headersReducer(currentAxes, reducerPayLoad);\n\n                    that.dataSource._preventRefresh = true;\n\n                    if (isRow) {\n                        that.dataSource.rows(newHeaders);\n                    } else {\n                        that.dataSource.columns(newHeaders);\n                    }\n                 });\n\n            if (that.options.autoBind) {\n                that.dataSource.fetch();\n            }\n\n            that._aria();\n\n            if (that.options.navigatable) {\n                that._initPivotGridNavigation();\n            }\n\n            kendo.notify(that);\n        },\n\n        events: [\n            DATABINDING,\n            DATABOUND,\n            EXPANDMEMBER,\n            COLLAPSEMEMBER\n        ],\n\n        options: {\n            name: \"PivotGridV2\",\n            autoBind: true,\n            height: null,\n            columnWidth: null,\n            configurator: \"\",\n            columnHeaderTemplate: null,\n            rowHeaderTemplate: null,\n            dataCellTemplate: null,\n            messages: {\n                emptyCellLabel: \"PivotGrid Empty Cell\"\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n            Widget.fn.destroy.call(that);\n\n            if (that._windowResizeHandler) {\n                $(window).off(RESIZE + NS, that._windowResizeHandler);\n                that._windowResizeHandler = null;\n            }\n        },\n\n        _aria: function() {\n            var that = this;\n            that.element.attr(\"role\", \"grid\");\n        },\n\n        setDataSource: function(dataSource) {\n            this.options.dataSource = dataSource;\n\n            this._dataSource();\n\n            this._bindConfigurator();\n\n            if (this.options.autoBind) {\n                dataSource.fetch();\n            }\n        },\n\n        _initPivotGridNavigation: function() {\n            var that = this;\n\n            that.navigation = new PivotGridNavigation({ tabIndex: 0 });\n            that.navigation.start(that.element[0]);\n\n            const firstCell = that.navigation.first;\n\n            if (firstCell) {\n                firstCell.setAttribute('tabindex', '0');\n            }\n        },\n\n        _matchAriaAttributes: function(wrapper) {\n            var that = this;\n            const rowHeaderRows = wrapper.querySelectorAll(\n                \".k-pivotgrid-row-headers .k-pivotgrid-row\"\n            );\n            const rowHeaderCols = !rowHeaderRows[0] ? [] : Array.from(rowHeaderRows[0].children).reduce(\n                (acc, curr) => (acc += curr.getAttribute(\"colspan\") !== null ? +curr.getAttribute(\"colspan\") : 1),\n                0\n            );\n            const colHeaderRows = wrapper.querySelectorAll(\n                \".k-pivotgrid-column-headers tr\"\n            );\n            const colHeaderCells = wrapper.querySelectorAll(\n                \".k-pivotgrid-column-headers th\"\n            );\n            const valueTableCells = wrapper.querySelectorAll(\".k-pivotgrid-values td\");\n            const emptyCell = wrapper.querySelector(\".k-pivotgrid-empty-cell\");\n\n            emptyCell.setAttribute(\"aria-rowspan\", colHeaderRows.length.toString());\n            emptyCell.setAttribute(\"aria-colspan\", rowHeaderCols.toString());\n\n            const firstColHeadersRow = colHeaderRows[0];\n            const firstColHeaderRowCellsIds = !firstColHeadersRow ? [] : Array.from(firstColHeadersRow.children)\n                .map(el => el.getAttribute(\"id\"))\n                .join(\" \");\n            firstColHeadersRow.setAttribute(\n                \"aria-owns\",\n                `${emptyCell.getAttribute(\"id\")} ${firstColHeaderRowCellsIds}`\n            );\n\n            rowHeaderRows.forEach((row, index) => {\n                const valueCellsIds = that.filterAndMap(\n                    Array.from(valueTableCells),\n                    c => {\n                        const idParts = c.getAttribute(\"id\").split(\"-\");\n                        return idParts[idParts.length - 2] === (index + 1).toString();\n                    },\n                    c => c.getAttribute(\"id\")\n                );\n\n                row.setAttribute(\"aria-owns\", valueCellsIds.join(\" \"));\n            });\n\n            valueTableCells.forEach(cell => {\n                const idParts = cell.getAttribute(\"id\").split(\"-\");\n                const cellColIndex = +idParts[idParts.length - 1];\n                const colHeaderCellsIds = that.filterAndMap(\n                    Array.from(colHeaderCells),\n                    c => {\n                        const idParts = c.getAttribute(\"id\").split(\"-\");\n                        const headerCellColIndex = +idParts[idParts.length - 1];\n                        const headerCellColspan = +c.getAttribute(\"colspan\");\n                        const colIndexIsEqual = cellColIndex === headerCellColIndex;\n                        const cellColIndexIsWithinHeaderCellRange =\n                            headerCellColspan > 1 &&\n                            headerCellColIndex < cellColIndex &&\n                            headerCellColIndex + headerCellColspan - 1 >= cellColIndex;\n\n                        return colIndexIsEqual || cellColIndexIsWithinHeaderCellRange;\n                    },\n                    c => c.getAttribute(\"id\")\n                );\n\n                cell.setAttribute(\"aria-describedby\", colHeaderCellsIds.join(\" \"));\n            });\n        },\n\n        filterAndMap: function(arr, predicate, mapper) {\n            return arr.reduce(\n                (acc, curr) => (predicate(curr) ? [...acc, mapper(curr)] : acc),\n                []\n            );\n        },\n\n        _dataSource: function() {\n            var that = this;\n            var dataSource = that.options.dataSource;\n\n            dataSource = Array.isArray(dataSource) ? { data: dataSource } : dataSource;\n\n            if (that.dataSource && this._refreshHandler) {\n                that.dataSource.unbind(CHANGE, that._refreshHandler)\n                               .unbind(PROGRESS, that._progressHandler)\n                               .unbind(ERROR, that._errorHandler);\n            } else {\n                that._refreshHandler = that.refresh.bind(that);\n                that._progressHandler = that._requestStart.bind(that);\n                that._errorHandler = that._error.bind(that);\n            }\n\n            that.dataSource = kendo.data.PivotDataSourceV2.create(dataSource)\n                                   .bind(CHANGE, that._refreshHandler)\n                                   .bind(PROGRESS, that._progressHandler)\n                                   .bind(ERROR, that._errorHandler);\n        },\n\n        _resize: function() {\n            var that = this;\n            that.wrapper[0].style.setProperty('--kendo-scrollbar-width', kendo.format(\"{0}px\", getScollWidth()));\n        },\n\n        _scrollable: function() {\n            var that = this;\n            var columnsHeader = that._columnHeadersWrapper;\n            var rowsHeader = that._rowHeadersWrapper;\n\n            that._resize();\n            that._windowResizeHandler = that._resize.bind(that);\n\n            that._contentWrapper.scroll(function() {\n                kendo.scrollLeft(columnsHeader, this.scrollLeft);\n                rowsHeader.scrollTop(this.scrollTop);\n            });\n\n            rowsHeader.bind(\"DOMMouseScroll\" + NS + \" mousewheel\" + NS, that._wheelScroll.bind(that));\n            $(window).on(RESIZE + NS, that._windowResizeHandler);\n        },\n\n        _wheelScroll: function(e) {\n            if (e.ctrlKey) {\n                return;\n            }\n\n            var delta = kendo.wheelDeltaY(e);\n            var scrollTop = this._contentWrapper.scrollTop();\n\n            if (delta) {\n                e.preventDefault();\n                $(e.currentTarget).one(\"wheel\" + NS, false);\n\n                this._rowHeadersWrapper.scrollTop(scrollTop + (-delta));\n                this._contentWrapper.scrollTop(scrollTop + (-delta));\n            }\n        },\n\n        _wrapper: function() {\n            var height = this.options.height;\n\n            this.wrapper = this.element.addClass(\"k-pivotgrid\");\n            var emptyCell = $(`<span class=\"k-pivotgrid-empty-cell\" id=\"${this._ariaId}-empty-cell\" role=\"columnheader\"><span class=\"k-sr-only\">${this.options.messages.emptyCellLabel}</span></span>`);\n            this.wrapper.append(emptyCell);\n\n            if (height) {\n                this.wrapper.css(\"height\", height);\n            }\n        },\n\n        _progress: function(toggle) {\n            kendo.ui.progress(this.wrapper, toggle);\n        },\n\n        _error: function() {\n            this._progress(false);\n        },\n\n        _requestStart: function() {\n            this._progress(true);\n        },\n\n        _updateDimensions: function() {\n            var that = this;\n            that.wrapper.css({\n                \"grid-template-columns\": kendo.format(\"{0}px 1fr\", that._rowHeadersWrapper.find(\".k-pivotgrid-table\")[0].offsetWidth),\n                \"grid-template-rows\": kendo.format(\"{0}px 1fr\", that._columnHeadersWrapper.find(\".k-pivotgrid-table\")[0].offsetHeight),\n            });\n        },\n\n        _setContentWidth: function() {\n            if (!this.options.columnWidth) {\n                return;\n            }\n            var contentTable = this._contentWrapper.find(\"table\");\n            var columnTable = this._columnHeadersWrapper.children(\"table\");\n            var rowTable = this._rowHeadersWrapper.children(\"table\");\n\n            contentTable.add(columnTable).add(rowTable).find(\"col\").width(this.options.columnWidth);\n        },\n\n        _bindConfigurator: function() {\n            var configurator = this.options.configurator;\n            if (configurator) {\n                $(configurator).kendoPivotConfiguratorV2(\"setDataSource\", this.dataSource);\n            }\n        },\n\n        cellInfoByElement: function(element) {\n            element = $(element);\n\n            return this.cellInfo(element.index(), element.parent(\"tr\").index());\n        },\n\n        cellInfo: function(columnIndex, rowIndex) {\n            var contentBuilder = this._contentBuilder;\n            var dataIndex;\n            var dataItem;\n\n            if (columnIndex >= contentBuilder.columnsCount || columnIndex < 0 ||\n                rowIndex >= contentBuilder.rowsCount || rowIndex < 0) {\n                return null;\n            }\n\n            dataIndex = rowIndex * contentBuilder.columnsCount + columnIndex;\n            dataItem = contentBuilder.hash[dataIndex < 0 ? 0 : dataIndex];\n\n            return {\n                columnTuple: dataItem.columnTuple,\n                rowTuple: dataItem.rowTuple,\n                dataItem: dataItem.data\n            };\n        },\n\n        refresh: function() {\n            var that = this;\n\n            var dataSource = that.dataSource;\n            if (that.trigger(DATABINDING, { action: \"rebind\" } )) {\n                return;\n            }\n\n            var lastFocusedCellID = kendo._activeElement() ? kendo._activeElement().id : null;\n            var lastCellIdWithTabIndex = that.wrapper.find(\"[tabindex=0]\").attr(\"id\");\n            that._columnBuilder.setTuples(dataSource._columnTuples);\n            that._columnHeadersWrapper.html(that._columnBuilder.build());\n\n            that._rowBuilder.setTuples(dataSource._rowTuples);\n            that._rowHeadersWrapper.html(that._rowBuilder.build());\n\n            that._contentBuilder.setRowColumnInfo({\n                columnHeaderLeafs: that._columnBuilder.getHeaderLeafs(),\n                rowHeaderLeafs: that._rowBuilder.getHeaderLeafs(),\n                columnHeaderBreadth: that._columnBuilder.getBreadth(),\n                rowHeaderDepth: that._rowBuilder.getBreadth(),\n                data: dataSource._view\n            });\n\n            that._contentWrapper.html(that._contentBuilder.build());\n\n\n            that._setContentWidth();\n            that._updateDimensions();\n\n            that._progress(false);\n\n            that.trigger(DATABOUND);\n            that._matchAriaAttributes(that.wrapper[0]);\n\n            if (!that.navigation) {\n                return;\n            }\n\n            if (lastCellIdWithTabIndex && that.element.find(`#${lastCellIdWithTabIndex}`).length > 0) {\n                that.element.find(`#${lastCellIdWithTabIndex}`).attr('tabindex', '0');\n            } else {\n                const firstCell = that.navigation.first;\n\n                if (firstCell) {\n                    firstCell.setAttribute('tabindex', '0');\n                }\n            }\n\n            if (lastFocusedCellID && lastFocusedCellID.indexOf(that._ariaId) == 0) {\n                that.navigation.focusElement(that.element.find(`#${lastFocusedCellID}`)[0]);\n            }\n        }\n    });\n\n    ui.plugin(PivotConfiguratorButton);\n    ui.plugin(PivotContainer);\n    ui.plugin(PivotGridV2);\n\n    var PivotGrid = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n            var columnBuilder;\n            var rowBuilder;\n\n            Widget.fn.init.call(that, element, options);\n\n            STATE_COLLAPSED_ICONNAME = kendo.support.isRtl(that.element) ? \"caret-alt-left\" : \"caret-alt-right\";\n\n            that._dataSource();\n\n            that._bindConfigurator();\n\n            that._wrapper();\n            that._createLayout();\n\n            that._columnBuilder = columnBuilder = new ColumnBuilder();\n            that._rowBuilder = rowBuilder = new RowBuilder();\n            that._contentBuilder = new ContentBuilder();\n\n            that._templates();\n\n            that.columnsHeader\n                .add(that.rowsHeader)\n                .on(\"click\", \"span.k-icon,span.k-svg-icon\", function() {\n                    var button = $(this);\n                    var builder = columnBuilder;\n                    var action = \"expandColumn\";\n                    var eventName;\n                    var path = button.attr(kendo.attr(\"path\"));\n                    var eventArgs = {\n                        axis: \"columns\",\n                        path: $.parseJSON(path)\n                    };\n\n                    if (button.parent().is(\"td\")) {\n                        builder = rowBuilder;\n                        action = \"expandRow\";\n                        eventArgs.axis = \"rows\";\n                    }\n\n                    var expanded = button.is(STATE_EXPANDED_SELECTOR);\n                    var metadata = builder.metadata[path];\n                    var request = metadata.expanded === undefined$1;\n\n                    eventName = expanded ? COLLAPSEMEMBER : EXPANDMEMBER;\n                    eventArgs.childrenLoaded = metadata.maxChildren > metadata.children;\n\n                    if (that.trigger(eventName, eventArgs)) {\n                        return;\n                    }\n\n                    builder.metadata[path].expanded = !expanded;\n                    kendo.ui.icon(button,{ icon: !expanded ? STATE_EXPANDED_ICONNAME : STATE_COLLAPSED_ICONNAME });\n\n                    if (!expanded && request) {\n                        that.dataSource[action](eventArgs.path);\n                    } else {\n                        that.refresh();\n                    }\n                });\n\n            that._scrollable();\n\n            if (that.options.autoBind) {\n                that.dataSource.fetch();\n            }\n\n            kendo.notify(that);\n        },\n\n        events: [\n            DATABINDING,\n            DATABOUND,\n            EXPANDMEMBER,\n            COLLAPSEMEMBER\n        ],\n\n        options: {\n            name: \"PivotGrid\",\n            autoBind: true,\n            reorderable: true,\n            filterable: false,\n            sortable: false,\n            navigatable: false,\n            height: null,\n            columnWidth: 100,\n            configurator: \"\",\n            columnHeaderTemplate: null,\n            rowHeaderTemplate: null,\n            dataCellTemplate: null,\n            kpiStatusTemplate: null,\n            kpiTrendTemplate: null,\n            messages: {\n                measureFields: \"Drop Data Fields Here\",\n                columnFields: \"Drop Column Fields Here\",\n                rowFields: \"Drop Rows Fields Here\"\n            }\n        },\n\n        _templates: function() {\n            var columnTemplate = this.options.columnHeaderTemplate;\n            var rowTemplate = this.options.rowHeaderTemplate;\n            var dataTemplate = this.options.dataCellTemplate;\n            var kpiStatusTemplate = this.options.kpiStatusTemplate;\n            var kpiTrendTemplate = this.options.kpiTrendTemplate;\n\n            this._columnBuilder.template = kendo.template(columnTemplate || HEADER_TEMPLATE, { useWithBlock: !!columnTemplate });\n            this._contentBuilder.dataTemplate = kendo.template(dataTemplate || DATACELL_TEMPLATE, { useWithBlock: !!dataTemplate });\n            this._contentBuilder.kpiStatusTemplate = kendo.template(kpiStatusTemplate || KPISTATUS_TEMPLATE, { useWithBlock: !!kpiStatusTemplate });\n            this._contentBuilder.kpiTrendTemplate = kendo.template(kpiTrendTemplate || KPITREND_TEMPLATE, { useWithBlock: !!kpiTrendTemplate });\n            this._rowBuilder.template = kendo.template(rowTemplate || HEADER_TEMPLATE, { useWithBlock: !!rowTemplate });\n        },\n\n        _bindConfigurator: function() {\n            var configurator = this.options.configurator;\n            if (configurator) {\n                $(configurator).kendoPivotConfigurator(\"setDataSource\", this.dataSource);\n            }\n        },\n\n        cellInfoByElement: function(element) {\n            element = $(element);\n\n            return this.cellInfo(element.index(), element.parent(\"tr\").index());\n        },\n\n        cellInfo: function(columnIndex, rowIndex) {\n            var contentBuilder = this._contentBuilder;\n            var columnInfo = contentBuilder.columnIndexes[columnIndex || 0];\n            var rowInfo = contentBuilder.rowIndexes[rowIndex || 0];\n            var dataIndex;\n\n            if (!columnInfo || !rowInfo) {\n                return null;\n            }\n\n            dataIndex = (rowInfo.index * contentBuilder.rowLength) + columnInfo.index;\n\n            return {\n                columnTuple: columnInfo.tuple,\n                rowTuple: rowInfo.tuple,\n                measure: columnInfo.measure || rowInfo.measure,\n                dataItem: this.dataSource.view()[dataIndex]\n            };\n        },\n\n        setDataSource: function(dataSource) {\n            this.options.dataSource = dataSource;\n\n            this._dataSource();\n\n            if (this.measuresTarget) {\n                this.measuresTarget.setDataSource(dataSource);\n            }\n\n            if (this.rowsTarget) {\n                this.rowsTarget.setDataSource(dataSource);\n            }\n\n            if (this.columnsTarget) {\n                this.columnsTarget.setDataSource(dataSource);\n            }\n\n            this._bindConfigurator();\n\n            if (this.options.autoBind) {\n                dataSource.fetch();\n            }\n        },\n\n        setOptions: function(options) {\n            Widget.fn.setOptions.call(this, options);\n\n            this._templates();\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            clearTimeout(this._headerReflowTimeout);\n        },\n\n        _dataSource: function() {\n            var that = this;\n            var dataSource = that.options.dataSource;\n\n            dataSource = Array.isArray(dataSource) ? { data: dataSource } : dataSource;\n\n            if (that.dataSource && this._refreshHandler) {\n                that.dataSource.unbind(CHANGE, that._refreshHandler)\n                               .unbind(STATERESET, that._stateResetHandler)\n                               .unbind(PROGRESS, that._progressHandler)\n                               .unbind(ERROR, that._errorHandler);\n            } else {\n                that._refreshHandler = that.refresh.bind(that);\n                that._progressHandler = that._requestStart.bind(that);\n                that._stateResetHandler = that._stateReset.bind(that);\n                that._errorHandler = that._error.bind(that);\n            }\n\n            that.dataSource = kendo.data.PivotDataSource.create(dataSource)\n                                   .bind(CHANGE, that._refreshHandler)\n                                   .bind(PROGRESS, that._progressHandler)\n                                   .bind(STATERESET, that._stateResetHandler)\n                                   .bind(ERROR, that._errorHandler);\n        },\n\n        _error: function() {\n            this._progress(false);\n        },\n\n        _requestStart: function() {\n            this._progress(true);\n        },\n\n        _stateReset: function() {\n            this._columnBuilder.reset();\n            this._rowBuilder.reset();\n        },\n\n        _wrapper: function() {\n            var height = this.options.height;\n\n            this.wrapper = this.element.addClass(\"k-pivot\");\n\n            if (height) {\n                this.wrapper.css(\"height\", height);\n            }\n        },\n\n        _measureFields: function() {\n            this.measureFields = $(DIV).addClass(\"k-pivot-toolbar k-toolbar k-toolbar-md k-settings-measures\");\n\n            this.measuresTarget = this._createSettingTarget(this.measureFields, {\n                setting: \"measures\",\n                messages: {\n                    empty: this.options.messages.measureFields\n                }\n            });\n        },\n\n        _createSettingTarget: function(element, options) {\n            var template,\n                pivotOptions = this.options;\n\n            template = ({ sortIcon, name }) => ''\n                + `<span class=\"k-chip k-chip-md k-rounded-full k-chip-solid k-chip-solid-base\" tabindex=\"0\" data-${kendo.ns}name=\"${name}\">`\n                    + '<span class=\"k-chip-content\">'\n                        + `<span class=\"k-chip-text\">${name}</span>`\n                    + '</span>'\n                    + '<span class=\"k-chip-actions k-field-actions\">'\n                        + getIcons(sortIcon, options, pivotOptions)\n                    + '</span>'\n                + '</span>';\n\n            return new kendo.ui.PivotSettingTarget(element, $.extend({\n                dataSource: this.dataSource,\n                template: template,\n                emptyTemplate: (data) => `<span class=\"k-empty\">${data}</span>`,\n                enabled: this.options.reorderable\n            }, options));\n        },\n\n        _initSettingTargets: function() {\n            this.columnsTarget = this._createSettingTarget(this.columnFields, {\n                connectWith: this.rowFields,\n                setting: \"columns\",\n                filterable: this.options.filterable,\n                sortable: this.options.sortable,\n                messages: {\n                    empty: this.options.messages.columnFields,\n                    fieldMenu: this.options.messages.fieldMenu\n                }\n            });\n\n            this.rowsTarget = this._createSettingTarget(this.rowFields, {\n                connectWith: this.columnFields,\n                setting: \"rows\",\n                filterable: this.options.filterable,\n                sortable: this.options.sortable,\n                messages: {\n                    empty: this.options.messages.rowFields,\n                    fieldMenu: this.options.messages.fieldMenu\n                }\n            });\n        },\n\n        _createLayout: function() {\n            var that = this;\n            var layoutTable = $(LAYOUT_TABLE);\n            var leftContainer = layoutTable.find(\".k-pivot-rowheaders\");\n            var rightContainer = layoutTable.find(\".k-pivot-table\");\n            var gridWrapper = $(DIV).addClass(\"k-grid\");\n\n            that._measureFields();\n            that.columnFields = $(DIV).addClass(\"k-pivot-toolbar k-toolbar k-toolbar-md k-settings-columns\");\n\n            that.rowFields = $(DIV).addClass(\"k-pivot-toolbar k-toolbar k-toolbar-md k-settings-rows\");\n            that.columnsHeader = $('<div class=\"k-grid-header-wrap\" />')\n                                    .wrap('<div class=\"k-grid-header\" />');\n\n            that.columnsHeader.parent().css(\"padding-right\", kendo.support.scrollbar());\n\n            that.rowsHeader = $('<div class=\"k-grid k-alt\"/>');\n            that.content = $('<div class=\"k-grid-content\" />');\n\n            leftContainer.append(that.measureFields);\n            leftContainer.append(that.rowFields);\n            leftContainer.append(that.rowsHeader);\n\n            gridWrapper.append(that.columnsHeader.parent());\n            gridWrapper.append(that.content);\n\n            rightContainer.append(that.columnFields);\n            rightContainer.append(gridWrapper);\n\n            that.wrapper.append(layoutTable);\n\n            that.columnsHeaderTree = new kendo.dom.Tree(that.columnsHeader[0]);\n            that.rowsHeaderTree = new kendo.dom.Tree(that.rowsHeader[0]);\n            that.contentTree = new kendo.dom.Tree(that.content[0]);\n\n            that._initSettingTargets();\n        },\n\n        _progress: function(toggle) {\n            kendo.ui.progress(this.wrapper, toggle);\n        },\n\n        _resize: function() {\n            if (this.content[0].firstChild) {\n                this._setSectionsWidth();\n                this._setSectionsHeight();\n                this._setContentWidth();\n                this._setContentHeight();\n                this._columnHeaderReflow();\n            }\n        },\n\n        _columnHeaderReflow: function() {\n            var columnTable = this.columnsHeader.children(\"table\");\n\n            if (!kendo.support.browser.mozilla) {\n                return;\n            }\n\n            clearTimeout(this._headerReflowTimeout);\n\n            columnTable.css(\"table-layout\", \"auto\");\n\n            this._headerReflowTimeout = setTimeout(function() {\n                columnTable.css(\"table-layout\", \"\");\n            });\n        },\n\n        _setSectionsWidth: function() {\n            var rowsHeader = this.rowsHeader;\n            var leftColumn = rowsHeader.parent(\".k-pivot-rowheaders\").width(AUTO);\n            var width;\n\n            width = Math.max(outerWidth(this.measureFields), outerWidth(this.rowFields));\n            width = Math.max(rowsHeader.children(\"table\").width(), width);\n\n            leftColumn.width(width);\n        },\n\n        _setSectionsHeight: function() {\n            var measureFieldsHeight = this.measureFields.height(AUTO).height();\n            var columnFieldsHeight = this.columnFields.height(AUTO).height();\n            var rowFieldsHeight = this.rowFields.height(AUTO).innerHeight();\n            var columnsHeight = this.columnsHeader.height(AUTO).innerHeight();\n\n            var padding = rowFieldsHeight - this.rowFields.height();\n\n            var firstRowHeight = columnFieldsHeight > measureFieldsHeight ? columnFieldsHeight : measureFieldsHeight;\n            var secondRowHeight = columnsHeight > rowFieldsHeight ? columnsHeight : rowFieldsHeight;\n\n            this.measureFields.height(firstRowHeight);\n            this.columnFields.height(firstRowHeight);\n            this.rowFields.height(secondRowHeight - padding);\n            this.columnsHeader.height(secondRowHeight);\n        },\n\n        _setContentWidth: function() {\n            var contentTable = this.content.find(\"table\");\n            var columnTable = this.columnsHeader.children(\"table\");\n\n            var rowLength = contentTable.children(\"colgroup\").children().length;\n\n            var calculatedWidth = rowLength * this.options.columnWidth;\n            var minWidth = Math.ceil((calculatedWidth / this.content.width()) * 100);\n\n            if (minWidth < 100) {\n                minWidth = 100;\n            }\n\n            contentTable.add(columnTable).css(\"width\", minWidth + \"%\");\n\n            this._resetColspan(columnTable);\n        },\n\n        _setContentHeight: function() {\n            var that = this;\n            var content = that.content;\n            var rowsHeader = that.rowsHeader;\n            var innerHeight = that.wrapper.innerHeight();\n            var scrollbar = kendo.support.scrollbar();\n            var skipScrollbar = content[0].offsetHeight === content[0].clientHeight;\n            var height = that.options.height;\n\n            if (that.wrapper.is(\":visible\")) {\n                if (!innerHeight || !height) {\n                    if (skipScrollbar) {\n                        scrollbar = 0;\n                    }\n\n                    content.height(\"auto\");\n                    rowsHeader.height(content.height() - scrollbar);\n                    return;\n                }\n\n                innerHeight -= outerHeight(that.columnFields);\n                innerHeight -= outerHeight(that.columnsHeader.parent());\n\n                if (innerHeight <= scrollbar * 2) { // do not set height if proper scrollbar cannot be displayed\n                    innerHeight = scrollbar * 2 + 1;\n                    if (!skipScrollbar) {\n                        innerHeight += scrollbar;\n                    }\n                }\n\n                content.height(innerHeight);\n\n                if (skipScrollbar) {\n                    scrollbar = 0;\n                }\n\n                rowsHeader.height(innerHeight - scrollbar);\n            }\n        },\n\n        _resetColspan: function(columnTable) {\n            var that = this;\n            var cell = columnTable.children(\"tbody\").children().first().children().first();\n\n            if (that._colspan === undefined$1) {\n                that._colspan = cell.attr(\"colspan\");\n            }\n\n            cell.attr(\"colspan\", 1);\n\n            clearTimeout(that._layoutTimeout);\n\n            that._layoutTimeout = setTimeout(function() {\n                cell.attr(\"colspan\", that._colspan);\n                that._colspan = undefined$1;\n            });\n        },\n\n        _axisMeasures: function(axis) {\n            var result = [];\n            var dataSource = this.dataSource;\n            var measures = dataSource.measures();\n            var hasMeasure = measures.length > 1 || (measures[0] && measures[0].type);\n\n            if (dataSource.measuresAxis() === axis) {\n                if (dataSource[axis]().length === 0 || hasMeasure) {\n                    result = measures;\n                }\n            }\n\n            return result;\n        },\n\n        items: function() {\n            return [];\n        },\n\n        refresh: function() {\n            var that = this;\n            var dataSource = that.dataSource;\n\n            var axes = dataSource.axes();\n            var columns = (axes.columns || {}).tuples || [];\n            var rows = (axes.rows || {}).tuples || [];\n\n            var columnBuilder = that._columnBuilder;\n            var rowBuilder = that._rowBuilder;\n\n            var columnAxis = {};\n            var rowAxis = {};\n\n            if (that.trigger(DATABINDING, { action: \"rebind\" } )) {\n                return;\n            }\n\n            columnBuilder.measures = that._axisMeasures(AXIS_COLUMNS);\n            rowBuilder.measures = that._axisMeasures(AXIS_ROWS);\n\n            that.columnsHeaderTree.render(columnBuilder.build(columns));\n            that.rowsHeaderTree.render(rowBuilder.build(rows));\n\n            columnAxis = {\n                indexes: columnBuilder._indexes,\n                measures: columnBuilder.measures,\n                metadata: columnBuilder.metadata\n            };\n\n            rowAxis = {\n                indexes: rowBuilder._indexes,\n                measures: rowBuilder.measures,\n                metadata: rowBuilder.metadata\n            };\n\n            that.contentTree.render(that._contentBuilder.build(dataSource.view(), columnAxis, rowAxis));\n\n            that._resize();\n\n            if (that.touchScroller) {\n                that.touchScroller.contentResized();\n            } else {\n                var touchScroller = kendo.touchScroller(that.content);\n\n                if (touchScroller && touchScroller.movable) {\n                    that.touchScroller = touchScroller;\n\n                    touchScroller.movable.bind(\"change\", function(e) {\n                        kendo.scrollLeft(that.columnsHeader, -e.sender.x);\n                        that.rowsHeader.scrollTop(-e.sender.y);\n                    });\n                }\n            }\n\n            that._progress(false);\n\n            that.trigger(DATABOUND);\n        },\n\n        _scrollable: function() {\n            var that = this;\n            var columnsHeader = that.columnsHeader;\n            var rowsHeader = that.rowsHeader;\n\n            that.content.on(\"scroll\", function() {\n                kendo.scrollLeft(columnsHeader, this.scrollLeft);\n                rowsHeader.scrollTop(this.scrollTop);\n            });\n\n            rowsHeader.on(\"DOMMouseScroll\" + NS + \" mousewheel\" + NS, that._wheelScroll.bind(that));\n        },\n\n        _wheelScroll: function(e) {\n            if (e.ctrlKey) {\n                return;\n            }\n\n            var delta = kendo.wheelDeltaY(e);\n            var scrollTop = this.content.scrollTop();\n\n            if (delta) {\n                e.preventDefault();\n                //In Firefox DOMMouseScroll event cannot be canceled\n                $(e.currentTarget).closest(\":not(path,svg)\").one(\"wheel\" + NS, false);\n\n                this.rowsHeader.scrollTop(scrollTop + (-delta));\n                this.content.scrollTop(scrollTop + (-delta));\n            }\n        }\n    });\n\n    var element = kendo.dom.element;\n    var htmlNode = kendo.dom.html;\n\n    var createMetadata = function(levelNum, memberIdx) {\n       return {\n            maxChildren: 0,\n            children: 0,\n            maxMembers: 0,\n            members: 0,\n            measures: 1,\n            levelNum: levelNum,\n            parentMember: memberIdx !== 0\n        };\n    };\n\n    var buildPath = function(tuple, index) {\n        var path = [];\n        var idx = 0;\n\n        for (; idx <= index; idx++) {\n            path.push(tuple.members[idx].name);\n        }\n\n        return path;\n    };\n\n    var tupleName = function(tuple, index) {\n        var name = \"\";\n        var idx = 0;\n\n        for (; idx <= index; idx++) {\n            name += tuple.members[idx].name;\n        }\n\n        return name;\n    };\n\n    var ContentBuilderV2 = Class.extend({\n        init: function(options) {\n            this.template = kendo.template(options.template);\n            this.ariaId = options.ariaId;\n            this.hash = [];\n        },\n\n        setRowColumnInfo: function(options) {\n            this.data = options.data;\n            this.columnHeaderLeafs = options.columnHeaderLeafs;\n            this.rowHeaderLeafs = options.rowHeaderLeafs;\n            this.columnHeaderBreadth = options.columnHeaderBreadth;\n            this.rowHeaderDepth = options.rowHeaderDepth;\n            this.hash.length = 0;\n        },\n\n        addColElements: function(count) {\n            var html = \"\";\n\n            for (var index = 0; index < count; index++) {\n                html += \"<col>\";\n            }\n\n            this.table.find(\"colgroup\").append(html);\n        },\n\n        addRowElements: function(data) {\n            var that = this;\n            var body = that.table.find(\"tbody\");\n            var row;\n\n            for (var index = 0; index < data.length; index++) {\n                row = $(`<tr class=\"${tableStyles.tableRow} k-pivotgrid-row\" role='presentation'></tr>`);\n                body.append(row);\n                that.addColumCell(row, data[index], index);\n            }\n\n            this.rowsCount = data.length;\n        },\n\n        addColumCell: function(rowEl, rowItem, rowIndex) {\n            var that = this;\n            for (var index = 0; index < rowItem.cells.length; index++) {\n                var cell = rowItem.cells[index];\n                if (cell) {\n                    var cellEl = $(`<td id=\"${that.ariaId}-cell-${rowIndex + 1}-${index + 1}\" class=\"${tableStyles.tableCell} k-pivotgrid-cell\" role=\"gridcell\"></td>`);\n                    if (this.rowHeaderLeafs[rowIndex].total || this.columnHeaderLeafs[index].total) {\n                        cellEl.addClass(\"k-pivotgrid-header-total\");\n                    }\n                    cellEl.append(that.template({\n                        dataItem: cell.data,\n                        rowTuple: cell.rowTuple,\n                        columnTuple: cell.columnTuple\n                    }));\n                    this.hash.push(cell);\n                    rowEl.append(cellEl);\n                }\n            }\n        },\n\n        build: function() {\n            var data = toData((this.data || []).slice(), this.columnHeaderLeafs, this.rowHeaderLeafs, this.columnHeaderBreadth, this.rowHeaderDepth);\n            var that = this;\n\n            var table = $(`<table class='${tableStyles.contentTable} k-pivotgrid-table' role='presentation'><colgroup></colgroup><tbody class='${tableStyles.tbody} k-pivotgrid-tbody' role='presentation'></tbody></table>`);\n\n            that.table = table;\n            that.addColElements(this.columnHeaderLeafs.length);\n            that.addRowElements(data);\n            this.rowsCount = data.length;\n            this.columnsCount = this.columnHeaderLeafs.length;\n\n            return that.table;\n        }\n    });\n\n    var ColumnRowBuilder = Class.extend({\n        init: function(options) {\n            this.tuples = options.tuples;\n            this.axes = options.axes;\n            this.ariaId = options.ariaId;\n            this.headerTemplate = kendo.template(HEADERTEMPLATE);\n            if (options.template) {\n                this.template = kendo.template(options.template);\n            }\n        },\n\n        setTuples: function(tuples) {\n            this.tuples = tuples;\n        },\n\n        addColElements: function(count) {\n            var html = \"\";\n\n            for (var index = 0; index < count; index++) {\n                html += \"<col>\";\n            }\n\n            this.table.find(\"colgroup\").append(html);\n        },\n\n        addRowElements: function(columnHeaderRows) {\n            var that = this;\n            var body = that.table.find(\"tbody\");\n            var row;\n\n            for (var index = 0; index < columnHeaderRows.length; index++) {\n                row = $('<tr class=\"k-table-row k-pivotgrid-row\" role=\"row\"></tr>');\n                body.append(row);\n                that.addColumCell(row, columnHeaderRows[index], index);\n            }\n        },\n\n        addColumCell: function(rowEl, rowItem, rowIndex) {\n            var that = this;\n            var cellEl;\n            var cell;\n\n            for (var index = 0; index < rowItem.cells.length; index++) {\n                cell = rowItem.cells[index];\n                if (cell) {\n                    cellEl = $(that.headerTemplate({\n                        id: `${that.ariaId}-${that.axes == \"columns\" ? \"ch\" : \"rh\"}-${rowIndex + 1}-${index + 1}`,\n                        rowspan: cell.rowSpan,\n                        colspan: cell.colSpan,\n                        key: cell.path.join(\",\") + (cell.total ? '|[TOTAL]' : ''),\n                        iconClass: (cell.children && cell.children.length) ? \"up\" : \"down\",\n                        expandable: cell.hasChildren && !cell.total,\n                        expanded: (cell.children && cell.children.length) ? \"true\" : \"false\",\n                        headerClass: kendo.format(\"k-pivotgrid-cell{0}{1}\", cell.total ? \" k-pivotgrid-header-total\" : \"\", cell.levelNum === 0 ? \" k-pivotgrid-header-root\" : \"\"),\n                        role: that.axes == \"columns\" ? \"columnheader\" : \"rowheader\"\n                    }));\n                    cellEl.append(that.template ? that.template({ member: cell }) : cell.caption);\n                    rowEl.append(cellEl);\n                }\n            }\n        },\n\n        build: function() {\n            var tree = toTree((this.tuples || []).slice());\n            var treeData = this.axes == \"columns\" ? toColumns(tree) : toRows(tree);\n            var headerRows = treeData[0];\n            var headerLeafs = treeData[1];\n            var breadth = treeData[2];\n            var rowHeaderBreadth = treeData[3];\n            var that = this;\n            that._tree = tree;\n            that._breadth = breadth;\n            that._headerLeafs = headerLeafs;\n\n            var table = $(`<table class='${tableStyles.headerTable} k-pivotgrid-table' role='presentation'><colgroup></colgroup><tbody class='${tableStyles.tbody} k-pivotgrid-tbody' role='rowgroup'></tbody></table>`);\n\n            that.table = table;\n            that.addColElements(this.axes == \"columns\" ? headerLeafs.length : rowHeaderBreadth);\n            that.addRowElements(headerRows);\n\n            return that.table;\n        },\n\n        getTree: function() {\n            return this._tree;\n        },\n\n        getBreadth: function() {\n            return this._breadth;\n        },\n\n        getHeaderLeafs: function() {\n            return this._headerLeafs;\n        }\n    });\n\n    var ColumnBuilder = Class.extend({\n        init: function() {\n            this.measures = 1;\n            this.metadata = {};\n        },\n\n        build: function(tuples) {\n            var tbody = this._tbody(tuples);\n            var colgroup = this._colGroup();\n\n            return [\n                element(\"table\", { className: tableStyles.headerTable }, [colgroup, tbody])\n            ];\n        },\n\n        reset: function() {\n            this.metadata = {};\n        },\n\n        _colGroup: function() {\n            var length = this._rowLength();\n            var children = [];\n            var idx = 0;\n\n            for (; idx < length; idx++) {\n                children.push(element(\"col\", null));\n            }\n\n            return element(\"colgroup\", null, children);\n        },\n\n        _tbody: function(tuples) {\n            var root = tuples[0];\n\n            this.map = {};\n            this.rows = [];\n            this.rootTuple = root;\n\n            this._indexes = [];\n\n            if (root) {\n                this._buildRows(root, 0);\n                this._normalize();\n            } else {\n                this.rows.push(element(\"tr\", { className: tableStyles.tableRow }, [ element(\"th\", { className: tableStyles.header } , [ htmlNode(\"&nbsp;\") ]) ]));\n            }\n\n            return element(\"tbody\", { className: tableStyles.tbody }, this.rows);\n        },\n\n        _normalize: function() {\n            var rows = this.rows;\n            var rowsLength = rows.length;\n            var rowIdx = 0;\n            var row;\n\n            var cellsLength;\n            var cellIdx;\n            var cells;\n            var cell;\n\n            for (; rowIdx < rowsLength; rowIdx++) {\n                row = rows[rowIdx];\n\n                if (row.rowSpan === 1) {\n                    continue;\n                }\n\n                cells = row.children;\n\n                cellIdx = 0;\n                cellsLength = cells.length;\n\n                for (; cellIdx < cellsLength; cellIdx++) {\n                    cell = cells[cellIdx];\n\n                    if (cell.tupleAll) {\n                        cell.attr.rowSpan = row.rowSpan;\n                    }\n                }\n            }\n        },\n\n        _rowIndex: function(row) {\n            var rows = this.rows;\n            var length = rows.length;\n            var idx = 0;\n\n            for (; idx < length; idx++) {\n                if (rows[idx] === row) {\n                    break;\n                }\n            }\n\n            return idx;\n        },\n\n        _rowLength: function() {\n            var cells = this.rows[0] ? this.rows[0].children : [];\n            var length = cells.length;\n            var rowLength = 0;\n            var idx = 0;\n\n            if (length) {\n                for (; idx < length; idx++) {\n                    rowLength += cells[idx].attr.colSpan || 1;\n                }\n            }\n\n            if (!rowLength) {\n                rowLength = this.measures;\n            }\n\n            return rowLength;\n        },\n\n        _row: function(tuple, memberIdx, parentMember) {\n            var rootName = this.rootTuple.members[memberIdx].name;\n            var levelNum = tuple.members[memberIdx].levelNum;\n            var rowKey = rootName + levelNum;\n            var map = this.map;\n            var parentRow;\n            var children;\n\n            var row = map[rowKey];\n\n            if (!row) {\n                row = element(\"tr\", { className: tableStyles.tableRow }, []);\n\n                row.parentMember = parentMember;\n                row.collapsed = 0;\n                row.colSpan = 0;\n                row.rowSpan = 1;\n\n                map[rowKey] = row;\n                parentRow = map[rootName + (Number(levelNum) - 1)];\n\n                if (parentRow) {\n                    children = parentRow.children;\n\n                    if (children[1] && children[1].attr.className.indexOf(\"k-alt\") === -1) {\n                        row.notFirst = true;\n                    } else {\n                        row.notFirst = parentRow.notFirst;\n                    }\n                }\n\n                this.rows.splice(this._rowIndex(parentRow) + 1, 0, row);\n            } else {\n                row.notFirst = false;\n\n                if (!row.parentMember || row.parentMember !== parentMember) {\n                    row.parentMember = parentMember;\n                    row.collapsed = 0;\n                    row.colSpan = 0;\n                }\n            }\n\n            return row;\n        },\n\n        _measures: function(measures, tuple, className) {\n            var map = this.map;\n            var row = map.measureRow;\n            var measure;\n\n            if (!row) {\n                row = element(\"tr\", { className: tableStyles.tableRow }, []);\n                map.measureRow = row;\n                this.rows.push(row);\n            }\n\n            for (var idx = 0, length = measures.length; idx < length; idx++) {\n                measure = measures[idx];\n                row.children.push(this._cell((className || \"\"), [this._content(measure, tuple)], measure));\n            }\n\n            return length;\n        },\n\n        _content: function(member, tuple) {\n            return htmlNode(this.template({\n                member: member,\n                tuple: tuple\n            }), true);\n        },\n\n        _cell: function(className, children, member) {\n            var cell = element(\"th\", { className: tableStyles.header + \" \" + className }, children);\n            cell.value = member.caption || member.name;\n            return cell;\n        },\n\n        _buildRows: function(tuple, memberIdx, parentMember) {\n            var members = tuple.members;\n            var member = members[memberIdx];\n            var nextMember = members[memberIdx + 1];\n\n            var row, childRow, children, childrenLength;\n            var cell, allCell, cellAttr;\n            var cellChildren = [];\n            var path;\n\n            var idx = 0;\n            var metadata;\n\n            var colSpan;\n            var collapsed = 0;\n            var memberCollapsed = 0;\n\n            if (member.measure) {\n                this._measures(member.children, tuple);\n                return;\n            }\n\n            path = kendo.stringify(buildPath(tuple, memberIdx));\n            row = this._row(tuple, memberIdx, parentMember);\n\n            children = member.children;\n            childrenLength = children.length;\n\n            metadata = this.metadata[path];\n            if (!metadata) {\n                this.metadata[path] = metadata = createMetadata(Number(member.levelNum), memberIdx);\n                metadata.rootLevelNum = Number(this.rootTuple.members[memberIdx].levelNum);\n            }\n\n            this._indexes.push({\n                path: path,\n                tuple: tuple\n            });\n\n            if (member.hasChildren) {\n                if (metadata.expanded === false) {\n                    collapsed = metadata.maxChildren;\n                    row.collapsed += collapsed;\n\n                    metadata.children = 0;\n                    childrenLength = 0;\n                }\n\n                let cellIconEl = $(\"<span></span>\");\n                cellIconEl.attr(kendo.attr(\"path\"), path);\n\n                cellChildren.push(kendo.dom.html(kendo.ui.icon(cellIconEl, { icon: childrenLength ? STATE_EXPANDED_ICONNAME : STATE_COLLAPSED_ICONNAME }), true));\n            }\n\n            cellChildren.push(this._content(member, tuple));\n            cell = this._cell((row.notFirst ? \" k-first\" : \"\"), cellChildren, member);\n\n            row.children.push(cell);\n            row.colSpan += 1;\n\n            if (childrenLength) {\n                allCell = this._cell(\" k-alt\", [this._content(member, tuple)], member);\n                row.children.push(allCell);\n\n                for (; idx < childrenLength; idx++) {\n                    childRow = this._buildRows(children[idx], memberIdx, member);\n                }\n\n                colSpan = childRow.colSpan;\n                collapsed = childRow.collapsed;\n\n                cell.attr.colSpan = colSpan;\n\n                metadata.children = colSpan;\n                metadata.members = 1;\n\n                row.colSpan += colSpan;\n                row.collapsed += collapsed;\n                row.rowSpan = childRow.rowSpan + 1;\n\n                if (nextMember) {\n                    if (nextMember.measure) {\n                        colSpan = this._measures(nextMember.children, tuple, \" k-alt\");\n                    } else {\n                        childRow = this._buildRows(tuple, memberIdx + 1);\n                        colSpan = childRow.colSpan;\n\n                        row.collapsed += childRow.collapsed;\n                        memberCollapsed = childRow.collapsed;\n                    }\n\n                    allCell.attr.colSpan = colSpan;\n                    colSpan -= 1;\n\n                    metadata.members += colSpan;\n                    row.colSpan += colSpan;\n                }\n            } else if (nextMember) {\n                if (nextMember.measure) {\n                    colSpan = this._measures(nextMember.children, tuple);\n                } else {\n                    childRow = this._buildRows(tuple, memberIdx + 1);\n                    colSpan = childRow.colSpan;\n\n                    row.collapsed += childRow.collapsed;\n                    memberCollapsed = childRow.collapsed;\n                }\n\n                metadata.members = colSpan;\n\n                if (colSpan > 1) {\n                    cell.attr.colSpan = colSpan;\n                    row.colSpan += colSpan - 1;\n                }\n            }\n\n            if (metadata.maxMembers < (metadata.members + memberCollapsed)) {\n                metadata.maxMembers = metadata.members + memberCollapsed;\n            }\n\n            children = metadata.children + collapsed;\n\n            if (metadata.maxChildren < children) {\n                metadata.maxChildren = children;\n            }\n\n            (allCell || cell).tupleAll = true;\n\n            return row;\n        }\n    });\n\n    var RowBuilder = Class.extend({\n        init: function() {\n            this.metadata = {};\n        },\n\n        build: function(tuples) {\n            var tbody = this._tbody(tuples);\n            var colgroup = this._colGroup();\n\n            return [\n                element(\"table\", { className: tableStyles.table }, [colgroup, tbody])\n            ];\n        },\n\n        reset: function() {\n            this.metadata = {};\n        },\n\n        _rowLength: function() {\n            var children = this.rows[0].children;\n            var length = 0;\n            var idx = 0;\n\n            var cell = children[idx];\n\n            while (cell) {\n                length += (cell.attr.colSpan || 1);\n                cell = children[++idx];\n            }\n\n            return length;\n        },\n\n        _colGroup: function() {\n            var length = this._rowLength();\n            var children = [];\n            var idx = 0;\n\n            for (; idx < length; idx++) {\n                children.push(element(\"col\", null));\n            }\n\n            return element(\"colgroup\", null, children);\n        },\n\n        _tbody: function(tuples) {\n            var root = tuples[0];\n\n            this.rootTuple = root;\n            this.rows = [];\n            this.map = {};\n\n            this._indexes = [];\n\n            if (root) {\n                this._buildRows(root, 0);\n                this._normalize();\n            } else {\n                this.rows.push(element(\"tr\", { className: tableStyles.tableRow }, [ element(\"td\", { className: tableStyles.tableCell }, [ htmlNode(\"&nbsp;\") ]) ]));\n            }\n\n            return element(\"tbody\", { className: tableStyles.tbody }, this.rows);\n        },\n\n        _normalize: function() {\n            var rows = this.rows;\n            var rowsLength = rows.length;\n            var rowIdx = 0;\n\n            var members = this.rootTuple.members;\n            var firstMemberName = members[0].name;\n            var membersLength = members.length;\n            var memberIdx = 0;\n\n            var row;\n            var cell;\n            var maxcolSpan;\n            var map = this.map;\n            var allRow;\n\n            for (; rowIdx < rowsLength; rowIdx++) {\n                row = rows[rowIdx];\n\n                for (memberIdx = 0; memberIdx < membersLength; memberIdx++) {\n                    maxcolSpan = this[members[memberIdx].name];\n                    cell = row.colSpan[\"dim\" + memberIdx];\n\n                    if (cell && cell.colSpan < maxcolSpan) {\n                        cell.attr.colSpan = (maxcolSpan - cell.colSpan) + 1;\n                    }\n                }\n            }\n\n            row = map[firstMemberName];\n            allRow = map[firstMemberName + \"all\"];\n\n            if (row) {\n                row.children[0].attr.className = tableStyles.tableCell + \" k-first\";\n            }\n\n            if (allRow) {\n                allRow.children[0].attr.className += \" k-first \" + tableStyles.tableCell;\n            }\n        },\n\n        _row: function(children) {\n            var row = element(\"tr\", { className: tableStyles.tableRow }, children);\n            row.rowSpan = 1;\n            row.colSpan = {};\n\n            this.rows.push(row);\n\n            return row;\n        },\n\n        _content: function(member, tuple) {\n            return htmlNode(this.template({\n                member: member,\n                tuple: tuple\n            }), true);\n        },\n\n        _cell: function(className, children, member) {\n            var cell = element(\"td\", { className: tableStyles.tableCell + \" \" + className }, children);\n            cell.value = member.caption || member.name;\n            return cell;\n        },\n\n        _buildRows: function(tuple, memberIdx) {\n            var map = this.map;\n            var path;\n\n            var members = tuple.members;\n            var member = members[memberIdx];\n            var nextMember = members[memberIdx + 1];\n\n            var children = member.children;\n            var childrenLength = children.length;\n\n            var levelNum = Number(member.levelNum);\n            var rootName = this.rootTuple.members[memberIdx].name;\n            var tuplePath = buildPath(tuple, memberIdx - 1).join(\"\");\n            var rootLevelNum = Number(this.rootTuple.members[memberIdx].levelNum);\n            var parentName = tuplePath + (rootLevelNum === levelNum ? \"\" : (member.parentName || \"\"));\n            var row = map[parentName + \"all\"] || map[parentName];\n            var colSpan = levelNum + 1;\n\n            var cell, allCell;\n            var childRow, allRow;\n            var metadata;\n            var className;\n            var cellChildren = [];\n            var expandIconAttr;\n            var idx;\n\n            if (!row || row.hasChild) {\n                row = this._row();\n            } else {\n                row.hasChild = true;\n            }\n\n            if (member.measure) {\n                className = row.allCell ? \"k-grid-footer\" : \"\";\n                row.children.push(this._cell(className, [ this._content(children[0], tuple) ], children[0]));\n\n                row.rowSpan = childrenLength;\n\n                for (idx = 1; idx < childrenLength; idx++) {\n                    this._row([ this._cell(className, [ this._content(children[idx], tuple) ], children[idx]) ]);\n                }\n\n                return row;\n            }\n\n            map[tuplePath + member.name] = row;\n\n            path = kendo.stringify(buildPath(tuple, memberIdx));\n\n            metadata = this.metadata[path];\n            if (!metadata) {\n                this.metadata[path] = metadata = createMetadata(levelNum, memberIdx);\n                metadata.rootLevelNum = rootLevelNum;\n            }\n\n            this._indexes.push({\n                path: path,\n                tuple: tuple\n            });\n\n            if (member.hasChildren) {\n                if (metadata.expanded === false) {\n                    childrenLength = 0;\n                    metadata.children = 0;\n                }\n\n                let cellIconEl = $(\"<span></span>\");\n                cellIconEl.attr(kendo.attr(\"path\"), path);\n\n                cellChildren.push(kendo.dom.html(kendo.ui.icon(cellIconEl, { icon: childrenLength ? STATE_EXPANDED_ICONNAME : STATE_COLLAPSED_ICONNAME }), true));\n            }\n\n            cellChildren.push(this._content(member, tuple));\n\n            className = row.allCell && !childrenLength ? \"k-grid-footer\" : \"\";\n            cell = this._cell(className, cellChildren, member);\n            cell.colSpan = colSpan;\n\n            row.children.push(cell);\n            row.colSpan[\"dim\" + memberIdx] = cell;\n\n            if (!this[rootName] || this[rootName] < colSpan) {\n                this[rootName] = colSpan;\n            }\n\n            if (childrenLength) {\n                row.allCell = false;\n                row.hasChild = false;\n\n                for (idx = 0; idx < childrenLength; idx++) {\n                    childRow = this._buildRows(children[idx], memberIdx);\n\n                    if (row !== childRow) {\n                        row.rowSpan += childRow.rowSpan;\n                    }\n                }\n\n                if (row.rowSpan > 1) {\n                    cell.attr.rowSpan = row.rowSpan;\n                }\n\n                metadata.children = row.rowSpan;\n\n                allCell = this._cell(\"k-grid-footer\", [this._content(member, tuple)], member);\n                allCell.colSpan = colSpan;\n\n                allRow = this._row([ allCell ]);\n                allRow.colSpan[\"dim\" + memberIdx] = allCell;\n                allRow.allCell = true;\n\n                map[tuplePath + member.name + \"all\"] = allRow;\n\n                if (nextMember) {\n                    childRow = this._buildRows(tuple, memberIdx + 1);\n                    allCell.attr.rowSpan = childRow.rowSpan;\n                }\n\n                row.rowSpan += allRow.rowSpan;\n\n                metadata.members = allRow.rowSpan;\n\n            } else if (nextMember) {\n                row.hasChild = false;\n                this._buildRows(tuple, memberIdx + 1);\n\n                (allCell || cell).attr.rowSpan = row.rowSpan;\n\n                metadata.members = row.rowSpan;\n            }\n\n            if (metadata.maxChildren < metadata.children) {\n                metadata.maxChildren = metadata.children;\n            }\n\n            if (metadata.maxMembers < metadata.members) {\n                metadata.maxMembers = metadata.members;\n            }\n\n            return row;\n        }\n    });\n\n    var ContentBuilder = Class.extend({\n        init: function() {\n            this.columnAxis = {};\n            this.rowAxis = {};\n        },\n\n        build: function(data, columnAxis, rowAxis) {\n            var index = columnAxis.indexes[0];\n            var metadata = columnAxis.metadata[index ? index.path : undefined$1];\n\n            this.columnAxis = columnAxis;\n            this.rowAxis = rowAxis;\n\n            this.data = data;\n\n            this.rowLength = metadata ? metadata.maxChildren + metadata.maxMembers : columnAxis.measures.length || 1;\n\n            if (!this.rowLength) {\n                this.rowLength = 1;\n            }\n\n            var tbody = this._tbody();\n            var colgroup = this._colGroup();\n\n            return [\n                element(\"table\", { className: tableStyles.contentTable }, [colgroup, tbody])\n            ];\n        },\n\n        _colGroup: function() {\n            var length = this.columnAxis.measures.length || 1;\n            var children = [];\n            var idx = 0;\n\n            if (this.rows[0]) {\n                length = this.rows[0].children.length;\n            }\n\n            for (; idx < length; idx++) {\n                children.push(element(\"col\", null));\n            }\n\n            return element(\"colgroup\", null, children);\n        },\n\n        _tbody: function() {\n            this.rows = [];\n\n            if (this.data[0]) {\n                this.columnIndexes = this._indexes(this.columnAxis, this.rowLength);\n                this.rowIndexes = this._indexes(this.rowAxis, Math.ceil(this.data.length / this.rowLength));\n\n                this._buildRows();\n            } else {\n                this.rows.push(element(\"tr\", { className: tableStyles.tableRow }, [ element(\"td\", { className: tableStyles.tableCell }, [ htmlNode(\"&nbsp;\") ]) ]));\n            }\n\n            return element(\"tbody\", { className: tableStyles.tbody }, this.rows);\n        },\n\n        _indexes: function(axisInfo, total) {\n            var result = [];\n            var axisInfoMember;\n            var indexes = axisInfo.indexes;\n            var metadata = axisInfo.metadata;\n            var measures = axisInfo.measures;\n            var measuresLength = measures.length || 1;\n\n            var current;\n            var dataIdx = 0;\n            var firstEmpty = 0;\n\n            var idx = 0;\n            var length = indexes.length;\n            var measureIdx;\n            var index;\n\n            var children;\n            var skipChildren;\n\n            if (!length) {\n                for (measureIdx = 0; measureIdx < measuresLength; measureIdx++) {\n                    result[measureIdx] = {\n                        index: measureIdx,\n                        measure: measures[measureIdx],\n                        tuple: null\n                    };\n                }\n\n                return result;\n            }\n\n            for (; idx < length; idx++) {\n                axisInfoMember = indexes[idx];\n                current = metadata[axisInfoMember.path];\n                children = current.children + current.members;\n                skipChildren = 0;\n\n                if (children) {\n                    children -= measuresLength;\n                }\n\n                if (current.expanded === false && current.children !== current.maxChildren) {\n                    skipChildren = current.maxChildren;\n                }\n\n                if (current.parentMember && current.levelNum === current.rootLevelNum) {\n                    children = -1;\n                }\n\n                if (children > -1) {\n                    for (measureIdx = 0; measureIdx < measuresLength; measureIdx++) {\n                        index = children + measureIdx;\n                        if (!current.children) {\n                            index += firstEmpty;\n                        }\n\n                        result[children + firstEmpty + measureIdx] = {\n                            children: children,\n                            index: dataIdx,\n                            measure: measures[measureIdx],\n                            tuple: axisInfoMember.tuple\n                        };\n                        dataIdx += 1;\n                    }\n\n                    while (result[firstEmpty] !== undefined$1) {\n                        firstEmpty += 1;\n                    }\n                }\n\n                if (firstEmpty === total) {\n                    break;\n                }\n\n                dataIdx += skipChildren;\n            }\n\n            return result;\n        },\n\n        _buildRows: function() {\n            var rowIndexes = this.rowIndexes;\n            var length = rowIndexes.length;\n            var idx = 0;\n\n            for (; idx < length; idx++) {\n                var rowIndex = rowIndexes[idx];\n                if (rowIndex) {\n                    this.rows.push(this._buildRow(rowIndex));\n                }\n            }\n        },\n\n        _buildRow: function(rowInfo) {\n            var startIdx = rowInfo.index * this.rowLength;\n            var columnIndexes = this.columnIndexes;\n            var length = columnIndexes.length;\n            var columnInfo;\n            var cells = [];\n            var idx = 0;\n\n            var templateInfo;\n            var cell, cellContent;\n            var attr, dataItem, measure;\n\n            for (; idx < length; idx++) {\n                columnInfo = columnIndexes[idx];\n\n                if (columnInfo === undefined$1) {\n                    continue;\n                }\n\n                attr = { className: tableStyles.tableCell };\n                if (columnInfo.children) {\n                    attr.className += \" k-alt\";\n                }\n\n                cellContent = \"\";\n                dataItem = this.data[startIdx + columnInfo.index];\n                measure = columnInfo.measure || rowInfo.measure;\n\n                templateInfo = {\n                    columnTuple: columnInfo.tuple,\n                    rowTuple: rowInfo.tuple,\n                    measure: measure,\n                    dataItem: dataItem\n                };\n\n                if (dataItem.value !== \"\" && measure && measure.type) {\n                    if (measure.type === \"status\") {\n                        cellContent = this.kpiStatusTemplate(templateInfo);\n                    } else if (measure.type === \"trend\") {\n                        cellContent = this.kpiTrendTemplate(templateInfo);\n                    }\n                }\n\n                if (!cellContent) {\n                    cellContent = this.dataTemplate(templateInfo);\n                }\n\n                cell = element(\"td\", attr, [ htmlNode(cellContent) ]);\n                cell.value = dataItem.value;\n                cells.push(cell);\n            }\n\n            attr = { className: tableStyles.tableRow };\n            if (rowInfo.children) {\n                attr.className += \" k-grid-footer\";\n            }\n\n            return element(\"tr\", attr, cells);\n        }\n    });\n\n    ui.plugin(PivotGrid);\n\n    kendo.PivotExcelExporter = kendo.Class.extend({\n        init: function(options) {\n            this.options = options;\n\n            this.widget = options.widget;\n            this.dataSource = this.widget.dataSource;\n        },\n\n        _columns: function() {\n            var columnHeaderTable = this.widget.columnsHeaderTree.children[0];\n            var rowHeaderTable = this.widget.rowsHeaderTree.children[0];\n\n            var columnHeaderLength = columnHeaderTable.children[0].children.length;\n            var rowHeaderLength = rowHeaderTable.children[0].children.length;\n\n            var width = this.widget.options.columnWidth;\n            var result = [];\n            var idx;\n\n            if (rowHeaderLength && this.dataSource.data()[0]) {\n                for (idx = 0; idx < rowHeaderLength; idx++) {\n                    result.push({\n                        autoWidth: true\n                    });\n                }\n            }\n\n            for (idx = 0; idx < columnHeaderLength; idx++) {\n                result.push({\n                    autoWidth: false,\n                    width: width\n                });\n            }\n\n            return result;\n        },\n\n        _cells: function(rows, type, callback) {\n            var result = [];\n\n            var i = 0;\n            var length = rows.length;\n\n            var cellsLength;\n            var row, cells;\n            var j, cell;\n\n            for (; i < length; i++) {\n                row = [];\n                cells = rows[i].children;\n                cellsLength = cells.length;\n\n                for (j = 0; j < cellsLength; j++) {\n                    cell = cells[j];\n\n                    row.push({\n                        background: \"#7a7a7a\",\n                        color: \"#fff\",\n                        value: cell.value,\n                        colSpan: cell.attr.colSpan || 1,\n                        rowSpan: cell.attr.rowSpan || 1\n                    });\n                }\n\n                if (callback) {\n                    callback(row, i);\n                }\n\n                result.push({\n                    cells: row,\n                    type: type\n                });\n            }\n\n            return result;\n        },\n\n        _rows: function() {\n            var columnHeaderTable = this.widget.columnsHeaderTree.children[0];\n            var rowHeaderTable = this.widget.rowsHeaderTree.children[0];\n\n            var columnHeaderLength = columnHeaderTable.children[0].children.length;\n            var rowHeaderLength = rowHeaderTable.children[0].children.length;\n\n            var columnHeaderRows = columnHeaderTable.children[1].children;\n            var rowHeaderRows = rowHeaderTable.children[1].children;\n            var contentRows = this.widget.contentTree.children[0].children[1].children;\n\n            var columnRows = this._cells(columnHeaderRows, \"header\");\n\n            if (rowHeaderLength) {\n                columnRows[0].cells.splice(0, 0, {\n                    background: \"#7a7a7a\",\n                    color: \"#fff\",\n                    value: \"\",\n                    colSpan: rowHeaderLength,\n                    rowSpan: columnHeaderRows.length\n                });\n            }\n\n            var dataCallback = function(row, index) {\n                var j = 0;\n                var cell, value;\n                var cells = contentRows[index].children;\n\n                for (; j < columnHeaderLength; j++) {\n                    cell = cells[j];\n                    value = Number(cell.value);\n\n                    if (isNaN(value)) {\n                        value = cell.value;\n                    }\n\n                    row.push({\n                        background: \"#dfdfdf\",\n                        color: \"#333\",\n                        value: value,\n                        colSpan: 1,\n                        rowSpan: 1\n                    });\n                }\n            };\n\n            var rowRows = this._cells(rowHeaderRows, \"data\", dataCallback);\n\n            return columnRows.concat(rowRows);\n        },\n\n        _freezePane: function() {\n            var columnHeaderTable = this.widget.columnsHeaderTree.children[0];\n            var rowHeaderTable = this.widget.rowsHeaderTree.children[0];\n\n            var rowHeaderLength = rowHeaderTable.children[0].children.length;\n            var columnHeaderRows = columnHeaderTable.children[1].children;\n\n            return {\n                colSplit: rowHeaderLength,\n                rowSplit: columnHeaderRows.length\n            };\n        },\n\n        workbook: function() {\n            var promise,\n                resolveFn = function() {\n                    return {\n                        sheets: [ {\n                            columns: this._columns(),\n                            rows: this._rows(),\n                            freezePane: this._freezePane(),\n                            filter: null\n                        } ]\n                    };\n                };\n\n            if (this.dataSource.view()[0]) {\n                promise = $.Deferred();\n                promise.resolve();\n            } else {\n                promise = this.dataSource.fetch();\n            }\n\n            return promise.then(resolveFn.bind(this));\n        }\n    });\n\n    var PivotExcelMixin = {\n        extend: function(proto) {\n           proto.events.push(\"excelExport\");\n           proto.options.excel = $.extend(proto.options.excel, this.options);\n           proto.saveAsExcel = this.saveAsExcel;\n        },\n        options: {\n            proxyURL: \"\",\n            filterable: false,\n            fileName: \"Export.xlsx\"\n        },\n        saveAsExcel: function() {\n            var excel = this.options.excel || {};\n\n            var exporter = new kendo.PivotExcelExporter({\n                widget: this\n            });\n\n            var resolveFn = function(book) {\n                if (!this.trigger(\"excelExport\", { workbook: book })) {\n                    var workbook = new kendo.ooxml.Workbook(book);\n\n                    workbook.toDataURLAsync().then(function(dataURI) {\n                        kendo.saveAs({\n                            dataURI: dataURI,\n                            fileName: book.fileName || excel.fileName,\n                            proxyURL: excel.proxyURL,\n                            forceProxy: excel.forceProxy\n                        });\n                    });\n                }\n            };\n\n            exporter.workbook().then(resolveFn.bind(this));\n        }\n    };\n\n    kendo.PivotExcelMixin = PivotExcelMixin;\n\n    if (kendo.ooxml && kendo.ooxml.Workbook) {\n        PivotExcelMixin.extend(PivotGrid.prototype);\n    }\n\n    if (kendo.PDFMixin) {\n        kendo.PDFMixin.extend(PivotGrid.prototype);\n\n        PivotGrid.fn._drawPDF = function() {\n            return this._drawPDFShadow({\n                width: this.wrapper.width()\n            }, {\n                avoidLinks: this.options.pdf.avoidLinks\n            });\n        };\n    }\n\n    if (kendo.PDFMixin) {\n        kendo.PDFMixin.extend(PivotGridV2.prototype);\n\n        PivotGridV2.fn._drawPDF = function() {\n            return this._drawPDFShadow({\n                width: this.wrapper.width()\n            }, {\n                avoidLinks: this.options.pdf.avoidLinks\n            });\n        };\n    }\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}